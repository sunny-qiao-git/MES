<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ECI.Speed.Web</name>
    </assembly>
    <members>
        <member name="T:PL.Base.Barcode.BarCode128B">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128B.GetCodeImage(System.String)">
            <summary>
            获取128图形
            </summary>
            <param name="p_Text">文字</param>
            <returns>图形</returns>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128B.GetCodeString(System.String)">
            <summary>
            
            </summary>
            <param name="p_Text"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Barcode.Barcode128Encode">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.Barcode128Encode.Code128A">
             <summary>
            CODE128A: 标准数字和字母, 控制符, 特殊字符
             </summary>
        </member>
        <member name="F:PL.Base.Barcode.Barcode128Encode.Code128B">
            <summary>
            标准数字和字母, 小写字母, 特殊字符
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.Barcode128Encode.Code128C">
            <summary>
            [00]-[99]的数字对集合, 共100个
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.Barcode128Encode.EAN128">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.Barcode.BarCodeEAN128">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.BarCodeEAN128.GetCodeImage(System.String)">
            <summary>
            获取128图形
            </summary>
            <param name="p_Text">文字</param>
            <returns>图形</returns>
        </member>
        <member name="M:PL.Base.Barcode.BarCodeEAN128.GetCodeString(System.String)">
            <summary>
            
            </summary>
            <param name="p_Text"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Barcode.BarCode128C">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128C.GetCodeImage(System.String)">
            <summary>
            获取128图形
            </summary>
            <param name="p_Text">文字</param>
            <returns>图形</returns>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128C.GetCodeString(System.String)">
            <summary>
            
            </summary>
            <param name="p_Text"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Barcode.BarCode128A">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128A.GetCodeImage(System.String)">
            <summary>
            获取128图形
            </summary>
            <param name="p_Text">文字</param>
            <returns>图形</returns>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128A.GetCodeString(System.String)">
            <summary>
            
            </summary>
            <param name="p_Text"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Barcode.BarCode128">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.Barcode.BarCode128.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:PL.Base.Barcode.BarCode128.ValueFont">
            <summary>
            是否显示可见号码  如果为NULL不显示号码
            </summary>
        </member>
        <member name="P:PL.Base.Barcode.BarCode128.Magnify">
            <summary>
            放大倍数
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128.GetValue(PL.Base.Barcode.Barcode128Encode,System.String,System.Int32@)">
            <summary>
            获取目标对应的数据
            </summary>
            <param name="p_Value">数值 A b  30</param>
            <param name="p_SetID">返回编号</param>
             <param name="encode">编码</param>
            <returns>编码</returns>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128.GetValue(System.Int32)">
            <summary>
            根据编号获得条纹
            </summary>
            <param name="p_CodeId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Barcode.BarCode128.GetImage(System.String)">
            <summary>
            获得条码图形
            </summary>
            <param name="p_Text">文字</param>
            <returns>图形</returns>
        </member>
        <member name="T:PL.Base.Barcode.BarcodeEncode">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.BarcodeEncode.Code39">
            <summary>
            Code39
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.BarcodeEncode.Code128A">
            <summary>
            Code128A
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.BarcodeEncode.Code128B">
            <summary>
            Code128B
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.BarcodeEncode.Code128C">
            <summary>
            Code128C
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.BarcodeEncode.QR">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.Barcode.BarcodeHelper">
             <summary>
            BarcodeHelper 的摘要说明
             </summary>
        </member>
        <member name="F:PL.Base.Barcode.BarcodeHelper.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.BarcodeHelper.Encode">
            <summary>
            编码
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.BarcodeHelper.FileName">
            <summary>
            输入、输出文件，如果不填，系统生成到默认的位置  BARCODE
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.BarcodeHelper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.BarcodeHelper.Create(System.String)">
            <summary>
            创建、保存条码图片
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:PL.Base.Barcode.BarcodeHelper.GetCode39(System.String,System.Int32)">
            <summary>
            获取Code39
            </summary>
            <param name="strSource"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Barcode.BarcodeHelper.CreateNew39(System.String,System.Int32,System.Byte,System.Drawing.Font)">
            <summary>
            
            </summary>
            <param name="no"></param>
            <param name="height"></param>
            <param name="magnify"></param>
            <param name="font"></param>
        </member>
        <member name="M:PL.Base.Barcode.BarcodeHelper.RemoveSpecialCharacter(System.String)">
            <summary>
            去除路径中的非法字符
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Barcode.Code39">
            <summary>  
            生成条码Code39  
            </summary>  
        </member>
        <member name="P:PL.Base.Barcode.Code39.Magnify">
            <summary>  
            放大倍数  
            </summary>  
        </member>
        <member name="P:PL.Base.Barcode.Code39.Height">
            <summary>  
            图形高  
            </summary>  
        </member>
        <member name="P:PL.Base.Barcode.Code39.ViewFont">
            <summary>  
            字体大小  
            </summary>  
        </member>
        <member name="M:PL.Base.Barcode.Code39.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.Code39.GetCodeImage(System.String,PL.Base.Barcode.Code39Model,System.Boolean)">
            <summary>  
            获得条码图形  
            </summary>  
            <param name="p_Text">文字信息</param>  
            <param name="p_Model">类别</param>  
            <param name="p_StarChar">是否增加前后*号</param>  
            <returns>图形</returns>  
        </member>
        <member name="M:PL.Base.Barcode.Code39.GetImage(System.String)">
            <summary>  
            绘制编码图形  
            </summary>  
            <param name="p_Text">编码</param>  
            <returns>图形</returns>  
        </member>
        <member name="M:PL.Base.Barcode.Code39.GetViewImage(System.Drawing.Bitmap,System.String)">
            <summary>  
            绘制文字  
            </summary>  
            <param name="p_CodeImage">图形</param>  
            <param name="p_Text">文字</param>  
        </member>
        <member name="T:PL.Base.Barcode.Code39Model">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.Code39Model.Code39Normal">
            <summary>  
            基本类别 1234567890ABC  
            </summary>  
        </member>
        <member name="F:PL.Base.Barcode.Code39Model.Code39FullAscII">
            <summary>  
            全ASCII方式 +A+B 来表示小写  
            </summary>  
        </member>
        <member name="T:PL.Base.Barcode.ImageUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.ImageUtility.MergeQrImg(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Double)">
            <summary>
            合并用户QR图片和用户头像
            </summary>
            <param name="qrImg">QR图片</param>
            <param name="headerImg">用户头像</param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Barcode.ImageUtility.CreateRoundedRectanglePath(System.Drawing.Rectangle,System.Int32)">
            <summary>
            创建圆角矩形
            </summary>
            <param name="rect">区域</param>
            <param name="cornerRadius">圆角角度</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Barcode.ImageUtility.ZoomPic(System.Drawing.Image,System.Double)">
            <summary>
            图片按比例缩放
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.ImageUtility.GetThumbnail(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            创建缩略图
            </summary>
            <param name="b"></param>
            <param name="destHeight"></param>
            <param name="destWidth"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Barcode.QRCode">
            <summary>
            二维码
            </summary>
        </member>
        <member name="F:PL.Base.Barcode.QRCode.FileName">
            <summary>
            保存的文件名
            </summary>
        </member>
        <member name="M:PL.Base.Barcode.QRCode.Create(System.String)">
            <summary>
            创建二维码
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Barcode.QRCode.CreateQRCodeWithLogo(System.String,System.String)">
            <returns></returns>
        </member>
        <member name="M:PL.Base.Barcode.QRCode.CreateQRCode(System.String)">
            <summary>
            创建二维码
            </summary>
            <param name="content">内容</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Barcode.QRCode.CreateBASE64(System.String)">
            <summary>
            创建二维码
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:PL.Base.IncludeFileManagerMain">
            <summary>
            项目导入信息
            </summary>
        </member>
        <member name="F:PL.Base.IncludeFileManagerMain.ListFileInfo">
            <summary>
            包含文件
            </summary>
        </member>
        <member name="M:PL.Base.IncludeFileManagerMain.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="T:PL.Base.JumpInfo">
            <summary>
            跳转信息
            </summary>
        </member>
        <member name="F:PL.Base.JumpInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="F:PL.Base.JumpInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:PL.Base.JumpInfo.WebSite">
            <summary>
            网站地址
            </summary>
        </member>
        <member name="F:PL.Base.JumpInfo.ManageUrl">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.JumpManager">
            <summary>
             
            </summary>
        </member>
        <member name="F:PL.Base.JumpManager.listConfig">
            <summary>
             
            </summary>
        </member>
        <member name="M:PL.Base.JumpManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:PL.Base.JumpManager.GetJumpInfo(System.String)">
            <summary>
             
            </summary>
            <param name="code">代码</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JumpManager.GetSessionJsonB64">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JumpManager.SetSessionByJsonB64(System.String)">
            <summary>
            设置Session
            </summary>
            <param name="jsonB64"></param>
        </member>
        <member name="T:PL.Base.Config.ZHManager">
            <summary>
             
            </summary>
        </member>
        <member name="F:PL.Base.Config.ZHManager.listConfig">
            <summary>
             
            </summary>
        </member>
        <member name="M:PL.Base.Config.ZHManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:PL.Base.Config.ZHManager.GetJumpInfo(System.String)">
            <summary>
             
            </summary>
            <param name="code">代码</param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Config.SysMsgConfig">
            <summary>
            工具
            </summary>
        </member>
        <member name="M:PL.Base.Config.SysMsgConfig.GetHead">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Config.SysMsgConfig.GetModule">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Config.GridComSortProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Config.GridComSortProvider.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.SystemAppInfo">
            <summary>
            系统应用
            </summary>
        </member>
        <member name="F:PL.Base.SystemAppInfo.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="F:PL.Base.SystemAppInfo.HomeUrl">
            <summary>
            首页地址
            </summary>
        </member>
        <member name="F:PL.Base.SystemAppInfo.FlowImage">
            <summary>
            流程图片
            </summary>
        </member>
        <member name="F:PL.Base.SystemAppInfo.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:PL.Base.SystemAppManager">
            <summary>
             
            </summary>
        </member>
        <member name="F:PL.Base.SystemAppManager.ListAppInfo">
            <summary>
             
            </summary>
        </member>
        <member name="M:PL.Base.SystemAppManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:PL.Base.SystemAppManager.GetSystemApp(System.String)">
            <summary>
             
            </summary>
            <param name="code">代码</param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.IncludeFileManager">
            <summary>
            项目导入信息
            </summary>
        </member>
        <member name="F:PL.Base.IncludeFileManager.ListFileInfo">
            <summary>
            包含文件
            </summary>
        </member>
        <member name="M:PL.Base.IncludeFileManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="T:PL.Base.MetaDataEx">
            <summary>
            企业元数据
            </summary>
        </member>
        <member name="M:PL.Base.MetaDataEx.Get(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.MetaDataDB">
            <summary>
            元数据
            </summary>
        </member>
        <member name="M:PL.Base.MetaDataDB.Get(System.String)">
            <summary>
            查询
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.MetaData">
            <summary>
            元数据
            </summary>
        </member>
        <member name="F:PL.Base.MetaData.Ignore">
            <summary>
            忽略错误
            </summary>
        </member>
        <member name="F:PL.Base.MetaData.UseCache">
            <summary>
            使用缓存
            </summary>
        </member>
        <member name="F:PL.Base.MetaData.DefineByCompany">
            <summary>
            企业自定义
            </summary>
        </member>
        <member name="M:PL.Base.MetaData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.MetaData.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isClient"></param>
        </member>
        <member name="M:PL.Base.MetaData.Get(System.String)">
            <summary>
            获取数据字典
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.MetaData.GetDataSet(System.String)">
            <summary>
            获取配置
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.MetaData.Clear">
            <summary>
            全部清空缓存
            </summary>
        </member>
        <member name="M:PL.Base.MetaData.Clear(System.String)">
            <summary>
            清空内存缓存
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:PL.Base.MetaData.GetModelFromDB(System.String)">
            <summary>
            从数据库中读取
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.MetaData.GetDataModelFromXml(System.String)">
            <summary>
            从文件中读取
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.MetaDataCom">
            <summary>
            企业元数据
            </summary>
        </member>
        <member name="M:PL.Base.MetaDataCom.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.MetaDataCom.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isClient"></param>
        </member>
        <member name="M:PL.Base.MetaDataCom.Get(System.String,System.String)">
            <summary>
            获取数据字典
            </summary>
            <param name="companyCode">公司代码</param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.MetaDataCom.Clear">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="M:PL.Base.MetaDataCom.MegerData(System.String,PL.Server.Core.Entity.ECI_TABLE)">
            <summary>
            合并数据
            </summary>
            <param name="companyCode"></param>
            <param name="table"></param>
        </member>
        <member name="T:PL.Base.IUserControl">
            <summary>
            用户控件
            </summary>
        </member>
        <member name="M:PL.Base.IUserControl.Execute(System.String,System.Object[])">
            <summary>
            执行
            </summary>
            <param name="actionType">执行类型</param>
            <param name="args">参数</param>
        </member>
        <member name="T:PL.Base.DynamicUI">
            <summary>
            动态页面
            </summary>
        </member>
        <member name="P:PL.Base.DynamicUI.Data">
            <summary>
            数据字典
            </summary>
        </member>
        <member name="F:PL.Base.DynamicUI.EciTable">
            <summary>
            配置字典
            </summary>
        </member>
        <member name="P:PL.Base.DynamicUI.PageCode">
            <summary>
            页面代码
            </summary>
        </member>
        <member name="P:PL.Base.DynamicUI.IsView">
            <summary>
            查看画面
            </summary>
        </member>
        <member name="P:PL.Base.DynamicUI.PL_MAIN_KEY">
            <summary>
            字典代码
            </summary>
        </member>
        <member name="P:PL.Base.DynamicUI.REAL_TABLE_NAME">
            <summary>
            真实表名
            </summary>
        </member>
        <member name="F:PL.Base.DynamicUI.IsList">
            <summary>
            是列表页
            </summary>
        </member>
        <member name="F:PL.Base.DynamicUI.IsEdit">
            <summary>
            是编辑页
            </summary>
        </member>
        <member name="F:PL.Base.DynamicUI.ShowTitle">
            <summary>
            是否需要标题
            </summary>
        </member>
        <member name="F:PL.Base.DynamicUI.ShowToolBar">
            <summary>
            是否需要工具栏
            </summary>
        </member>
        <member name="F:PL.Base.DynamicUI.PageError">
            <summary>
            页面发生错误
            </summary>
        </member>
        <member name="P:PL.Base.DynamicUI.UIExtend">
            <summary>
            页面扩展
            </summary>
        </member>
        <member name="F:PL.Base.DynamicUI.divWorkArea">
            <summary>
            工作区
            </summary>
        </member>
        <member name="P:PL.Base.DynamicUI.WorkArea">
            <summary>
            主工作区;产生的查询区域、列表区域全部放置于主工作区域
            </summary>
        </member>
        <member name="F:PL.Base.DynamicUI.ListUIElement">
            <summary>
            界面控件：列表页 查询控件,编辑页 编辑控件
            </summary>
        </member>
        <member name="F:PL.Base.DynamicUI.ListButton">
            <summary>
            功能按钮
            </summary>
        </member>
        <member name="M:PL.Base.DynamicUI.GetUIElement(System.String)">
            <summary>
            获取页面元素
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DynamicUI.GetButton(System.String)">
            <summary>
            获取页面功能按钮
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DynamicUI.CheckNotEmptyField(System.String)">
            <summary>
            检查不可以为空字段
            </summary>
            <param name="fieldList"></param>
        </member>
        <member name="M:PL.Base.DynamicUI.AddRealTableNameToRequest(PL.Base.EciRequest)">
            <summary>
            增加真实表到请求中
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:PL.Base.DynamicUI.SetTitle(System.String)">
            <summary>
            设置页面标题
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:PL.Base.DynamicUI.CommandArea">
            <summary>
            功能按钮区域
            </summary>
        </member>
        <member name="T:PL.Base.UIHelper">
            <summary>
            界面帮助类
            </summary>
        </member>
        <member name="P:PL.Base.UIHelper.Edit">
            <summary>
            获取当前的编辑页面
            </summary>
        </member>
        <member name="P:PL.Base.UIHelper.List">
            <summary>
            获取当前的列表页面
            </summary>
        </member>
        <member name="P:PL.Base.UIHelper.UI">
            <summary>
            当前动态页面
            </summary>
        </member>
        <member name="M:PL.Base.UIHelper.DefaultIME(System.Web.UI.HtmlControls.HtmlInputText)">
            <summary>
            设置只能输入英文
            </summary>
            <param name="txt"></param>
        </member>
        <member name="M:PL.Base.UIHelper.DefaultIME(System.Web.UI.WebControls.TextBox)">
            <summary>
            设置只能输入英文
            </summary>
            <param name="txt"></param>
        </member>
        <member name="M:PL.Base.UIHelper.GetEButton(System.Object)">
            <summary>
            对象转成EButton
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.UIHelper.GetCommandArgument(System.Object)">
            <summary>
            获取功能按钮的 CommandArgument
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciQueryItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciQueryItem.DataField">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciQueryItem.QueryType">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciQueryItem.Conn">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciQueryItem.JoinType">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciQueryItem.UIType">
            <summary>
            放大镜、文本框、日期
            </summary>
        </member>
        <member name="P:PL.Base.EciQueryItem.DBType">
            <summary>
            数据库类型:文本（TEXT,NUM,DATE)
            </summary>
        </member>
        <member name="P:PL.Base.EciQueryItem.DataFieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="T:PL.Base.EciQueryGroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciQueryGroup.ListDefineEntity">
            <summary>
            数据项定义
            </summary>
        </member>
        <member name="F:PL.Base.EciQueryGroup.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciQueryGroup.JoinType">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.EciQueryGroup.Add(PL.Base.EciQueryItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:PL.Base.EciQueryGroup.GetQueryItemDataField(PL.Base.EciQueryItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:PL.Base.EciQueryGroup.ToSql">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciQueryManager">
            <summary>
            查询管理
            </summary>
        </member>
        <member name="F:PL.Base.EciQueryManager.Groups">
            <summary>
            查询组
            </summary>
        </member>
        <member name="F:PL.Base.EciQueryManager.ListDefineEntity">
            <summary>
            数据项定义
            </summary>
        </member>
        <member name="M:PL.Base.EciQueryManager.ToSql">
            <summary>
            语句
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciQueryManager.Add(PL.Base.EciQueryGroup)">
            <summary>
            add
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:PL.Base.ExcelColor">
            <summary>
            导出EXCEL颜色
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColor.Default">
             <summary>
            默认
             </summary>
        </member>
        <member name="F:PL.Base.ExcelColor.Red">
            <summary>
            红色
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColor.Blue">
            <summary>
            蓝色
            </summary>
        </member>
        <member name="T:PL.Base.ExcelColumn">
            <summary>
            导出Excel的列定义
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumn.DataField">
            <summary>
            字段
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumn.HeaderText">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumn.IsNumber">
            <summary>
            数字类型
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumn.IsDate">
            <summary>
            日期类型
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumn.DataFormatString">
            <summary>
            格式
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumn.Width">
            <summary>
            显示宽度
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumn.Comment">
            <summary>
            批注
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumn.HeaderColor">
            <summary>
            标题颜色
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumn.HorizontalAlign">
            <summary>
            水平对齐方式
            </summary>
        </member>
        <member name="M:PL.Base.ExcelColumn.#ctor">
            <summary>
            导出EXCEL列
            </summary>
        </member>
        <member name="T:PL.Base.ExcelColumnOption">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.ExcelColumnOption.NotIncludeHiddenColumn">
            <summary>
            不包括隐藏的列
            </summary>
        </member>
        <member name="T:PL.Base.EasySheet">
            <summary>
            EasySheet (开始行从1 开始计算，开始列从1开始计算)
            </summary>
        </member>
        <member name="M:PL.Base.EasySheet.#ctor(NPOI.HSSF.UserModel.HSSFSheet)">
            <summary>
            构造函数
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:PL.Base.EasySheet.Cell(System.Int32,System.Int32)">
            <summary>
            单元格 (行从1 开始计算，列从1开始计算)
            </summary>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciReportBeforeOutputArgs">
            <summary>
            NPOI导出参数
            </summary>
        </member>
        <member name="F:PL.Base.EciReportBeforeOutputArgs.Report">
            <summary>
            报表
            </summary>
        </member>
        <member name="F:PL.Base.EciReportBeforeOutputArgs.Workbook">
            <summary>
            工作薄
            </summary>
        </member>
        <member name="F:PL.Base.EciReportBeforeOutputArgs.Sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:PL.Base.EciReportBeforeOutputArgs.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="T:PL.Base.BeforeOutputHandler">
            <summary>
            NPOI导出句柄
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:PL.Base.EciReport">
            <summary>
            NPOI导出Excel
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.PDF">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.PDFView">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.EciReport.OnBeforeOutput">
            <summary>
            输出之前用户自定义事件
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.AutoToExcel">
            <summary>
            导出完毕后自动输出到Excel中
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.ForceFormulaRecalculation">
            <summary>
            重新计算公式
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.Name">
            <summary>
            报表名称
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.Type">
            <summary>
            报表类型
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.TemplateFile">
            <summary>
            模板文件
            </summary>
        </member>
        <member name="P:PL.Base.EciReport.AssemblyExtend">
            <summary>
            程序集扩展
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.ReportParam">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.ListDetail">
            <summary>
            明细处理配置
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.TargetFileName">
            <summary>
            目标文件名
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.workbook">
            <summary>
            工作簿
            </summary>
        </member>
        <member name="F:PL.Base.EciReport.sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.AddDataTable(System.Data.DataTable)">
            <summary>
            追加数据表
            </summary>
            <param name="dataTable"></param>
        </member>
        <member name="M:PL.Base.EciReport.AddDataTable(System.Data.DataTable,System.String)">
            <summary>
             追加数据表
            </summary>
            <param name="dataTable">数据表</param>
            <param name="tableName">表名</param>
        </member>
        <member name="M:PL.Base.EciReport.QueryStringAddToParam">
            <summary>
            将页面URL参数加入到报表参数
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.InitByReportCode(System.String)">
            <summary>
            根据开发平台报表设计代码初始化
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:PL.Base.EciReport.Execute">
            <summary>
            执行导出报表【EXCEL报表】
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.ExecuteSheet(System.Int32,System.String)">
            <summary>
            导出指定Sheet
            </summary>
            <param name="inputSheetIndex"></param>
            <param name="headTableName"></param>
        </member>
        <member name="M:PL.Base.EciReport.ReadConfigFromExcel">
            <summary>
            从Excel表格中获取配置信息
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.Execute(System.Int32,System.Boolean,System.String)">
            <summary>
            执行导出报表【EXCEL报表】
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.IsMergeCell(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="sheet"></param>
            <param name="rowNum"></param>
            <param name="colNum"></param>
            <param name="rowSpan"></param>
            <param name="colSpan"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport.PrintLandscape(System.Boolean,System.Int16)">
            <summary>
            设置水平打印
            </summary>
            <param name="landscape">true 横向打印 false 纵向打印</param>
            <param name="pagerSize"></param>
        </member>
        <member name="M:PL.Base.EciReport.GroupSet(System.Data.DataTable,System.Data.DataTable,System.Int32)">
            <summary>
            分组设置
            </summary>
            <param name="dataHead"></param>
            <param name="dataBody"></param>
            <param name="groupSize">分组大小</param>
        </member>
        <member name="M:PL.Base.EciReport.ToExcel">
            <summary>
            输出到Excel中
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.ToExcel(System.String)">
            <summary>
            输出到Excel中
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.ToPDF(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.EciReport.Save(System.String)">
            <summary>
            保存到本地目录
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.EciReport.ExtendConfig">
            <summary>
            调用扩展配置
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.Check">
            <summary>
            检测数据源是提供
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.CreateWorkbook">
            <summary>
            创建工作簿
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport.WriteToCellEx(NPOI.HSSF.UserModel.HSSFCell,System.Data.DataRow,System.String)">
            <summary>
            写入单元格
            </summary>
            <param name="cell"></param>
            <param name="dataRow"></param>
            <param name="cellValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport.WriteToCell(NPOI.HSSF.UserModel.HSSFCell,System.Data.DataRow,System.String)">
            <summary>
            写入单元格
            </summary>
            <param name="cell"></param>
            <param name="dataRow"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport.ReadCellValue(NPOI.HSSF.UserModel.HSSFCell)">
            <summary>
            读取单元格内容
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport.OpenTemplate(System.String)">
            <summary>
            读取模板文件
            </summary>
            <param name="templateFile"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport.CreateWorkFolder">
            <summary>
            创建工作目录
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.WriteToCell(System.Int32,System.String,System.String)">
            <summary>
            将值写入Excel中
            </summary>
            <param name="rowIndex">从1开始</param>
            <param name="cellChar"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.EciReport.WriteToCell(System.Int32,System.String,System.Double)">
            <summary>
            将值写入Excel中
            </summary>
            <param name="rowIndex">从1开始</param>
            <param name="cellChar"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.EciReport.GetCell(System.Int32,System.String)">
            <summary>
            获取单元格
            </summary>
            <param name="rowIndex">从1开始</param>
            <param name="cellChar"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport.GetColumnIndex(System.String)">
            <summary>
            返回单元格列，注意索引从1开始
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport.CreateExtendInstance">
            <summary>
            创建报表扩展
            </summary>
        </member>
        <member name="M:PL.Base.EciReport.GetReportPath(System.String)">
            <summary>
            获取报表路径
            </summary>
            <param name="reportCode"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciReportDataInfo">
            <summary>
            报表数据源
            </summary>
        </member>
        <member name="P:PL.Base.EciReportDataInfo.TemplateFile">
            <summary>
            模板文件
            </summary>
        </member>
        <member name="P:PL.Base.EciReportDataInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:PL.Base.EciReportDataInfo.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:PL.Base.EciReportDataInfo.AssemblyExtend">
            <summary>
            功能扩展
            </summary>
        </member>
        <member name="P:PL.Base.EciReportDataInfo.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:PL.Base.EciReportDataInfo.ListDetail">
            <summary>
            明细处理配置
            </summary>
        </member>
        <member name="F:PL.Base.EciReportDataInfo.InputParam">
            <summary>
            参数
            </summary>
        </member>
        <member name="M:PL.Base.EciReportDataInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:PL.Base.EciReportDataProvider">
            <summary>
            EciReport初始化
            </summary>
        </member>
        <member name="M:PL.Base.EciReportDataProvider.Get(System.String,PL.Base.EntityBase)">
            <summary>
            获取数据源
            </summary>
            <param name="code"></param>
            <param name="inputParam"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReportDataProvider.GetReportPath(System.String)">
            <summary>
            获取报表路径
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciReportDetail">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReportDetail.Name">
            <summary>
            数据源名称
            </summary>
        </member>
        <member name="P:PL.Base.EciReportDetail.StartRowIndex">
            <summary>
            起始行，注意：第一行的索引是1，不是0
            </summary>
        </member>
        <member name="F:PL.Base.EciReportDetail.RowIndex">
            <summary>
            模板行
            </summary>
        </member>
        <member name="F:PL.Base.EciReportDetail.TableIndex">
            <summary>
            Word导出模板专用
            </summary>
        </member>
        <member name="T:PL.Base.EciReportMerge">
            <summary>
            报表合并管理
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMerge.sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMerge.Items">
            <summary>
            项
            </summary>
        </member>
        <member name="M:PL.Base.EciReportMerge.GetMergeItem(System.String)">
            <summary>
            获取合并项
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReportMerge.#ctor(NPOI.HSSF.UserModel.HSSFSheet,System.Data.DataTable)">
            <summary>
            构造函数
            </summary>
            <param name="sheet"></param>
            <param name="detailTable"></param>
        </member>
        <member name="M:PL.Base.EciReportMerge.Compare(System.String,System.String,System.Int32,NPOI.HSSF.UserModel.HSSFCell)">
            <summary>
            比较
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
            <param name="currentRowIndex"></param>
            <param name="cell"></param>
        </member>
        <member name="M:PL.Base.EciReportMerge.LastExecute">
            <summary>
            最后执行
            </summary>
        </member>
        <member name="T:PL.Base.EciReportMergeItem">
            <summary>
            合并项
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem.Manage">
            <summary>
            合并管理器
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem.sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem.IsFirst">
            <summary>
             
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem.ColumnName">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:PL.Base.EciReportMergeItem.LastValue">
            <summary>
            之前的值，如果之前的值和当前不一致，则考虑要合并单元格了，注意第一个和最后一个的问题
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem.StartRow">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem.EndRow">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem.ColumnIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem.MergeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem.VerticalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.EciReportMergeItem.#ctor(PL.Base.EciReportMerge)">
            <summary>
            构造函数
            </summary>
            <param name="manage"></param>
        </member>
        <member name="M:PL.Base.EciReportMergeItem.Merge">
            <summary>
            合并
            </summary>
        </member>
        <member name="T:PL.Base.IReport">
            <summary>
            IRepor应用编程接口类
            </summary>
        </member>
        <member name="F:PL.Base.IReport.report">
            <summary>
            报表
            </summary>
        </member>
        <member name="P:PL.Base.IReport.Report">
            <summary>
            报表
            </summary>
        </member>
        <member name="M:PL.Base.IReport.Config">
            <summary>
            配置报表
            </summary>
        </member>
        <member name="M:PL.Base.IReport.BeforeOutput">
            <summary>
            输出之前
            </summary>
        </member>
        <member name="T:PL.Base.EciReportWord">
            <summary>
            NPOI导出Excel
            </summary>
        </member>
        <member name="F:PL.Base.EciReportWord.Name">
            <summary>
            报表名称
            </summary>
        </member>
        <member name="F:PL.Base.EciReportWord.Type">
            <summary>
            报表类型
            </summary>
        </member>
        <member name="F:PL.Base.EciReportWord.TemplateFile">
            <summary>
            模板文件
            </summary>
        </member>
        <member name="F:PL.Base.EciReportWord.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="F:PL.Base.EciReportWord.TargetFileName">
            <summary>
            目标文件名
            </summary>
        </member>
        <member name="F:PL.Base.EciReportWord.ListDetail">
            <summary>
            明细处理配置
            </summary>
        </member>
        <member name="F:PL.Base.EciReportWord.doc">
            <summary>
            工作簿
            </summary>
        </member>
        <member name="F:PL.Base.EciReportWord.sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="M:PL.Base.EciReportWord.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.EciReportWord.AddDataTable(System.Data.DataTable)">
            <summary>
            追加数据表
            </summary>
            <param name="dataTable"></param>
        </member>
        <member name="M:PL.Base.EciReportWord.AddDataTable(System.Data.DataTable,System.String)">
            <summary>
             追加数据表
            </summary>
            <param name="dataTable">数据表</param>
            <param name="tableName">表名</param>
        </member>
        <member name="M:PL.Base.EciReportWord.Execute">
            <summary>
            执行导出
            </summary>
        </member>
        <member name="M:PL.Base.EciReportWord.Copy(NPOI.XWPF.UserModel.XWPFTable,NPOI.XWPF.UserModel.XWPFTableRow,System.Int32)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <param name="sourceRow"></param>
            <param name="rowIndex"></param>
        </member>
        <member name="M:PL.Base.EciReportWord.CopyCell(NPOI.XWPF.UserModel.XWPFTableCell,NPOI.XWPF.UserModel.XWPFTableCell,System.String)">
            <summary>
            
            </summary>
            <param name="tmpCell"></param>
            <param name="cell"></param>
            <param name="text"></param>
        </member>
        <member name="M:PL.Base.EciReportWord.Download">
            <summary>
            输出到Excel中
            </summary>
        </member>
        <member name="M:PL.Base.EciReportWord.Download(System.String)">
            <summary>
            输出到Excel中
            </summary>
        </member>
        <member name="M:PL.Base.EciReportWord.Save(System.String)">
            <summary>
            保存到本地目录
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.EciReportWord.Check">
            <summary>
            检测数据源是提供
            </summary>
        </member>
        <member name="M:PL.Base.EciReportWord.CreateWorkbook">
            <summary>
            创建工作簿
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReportWord.OpenTemplate(System.String)">
            <summary>
            读取模板文件
            </summary>
            <param name="templateFile"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReportWord.CreateWorkFolder">
            <summary>
            创建工作目录
            </summary>
        </member>
        <member name="T:PL.Base.ControlExtend">
            <summary>
            控件扩展
            </summary>
        </member>
        <member name="M:PL.Base.ControlExtend.ToHtml(System.Web.UI.Control)">
            <summary>
            控件渲染成Html
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ControlExtend.ECIFocus(System.Web.UI.WebControls.TextBox)">
            <summary>
            文本框获得焦点
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.ControlExtend.AutoUpper(System.Web.UI.WebControls.TextBox)">
            <summary>
            自动转化成大写
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.ControlExtend.ECIFocus(System.Web.UI.WebControls.DropDownList)">
            <summary>
            下拉框获得焦点
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.ControlExtend.ECIFocus(System.String)">
            <summary>
            制定ID的控件获得焦点
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:PL.Base.ControlExtend.IsEmpty(System.Web.UI.WebControls.TextBox)">
            <summary>
            返回文本框值是否为空
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EntityTool">
            <summary>
            实体类扩展
            </summary>
        </member>
        <member name="M:PL.Base.EntityTool.GetRequestData(PL.Base.EntityBase)">
            <summary>
            自动获取URL请求数据
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PL.Base.EntityTool.GetBindingData(PL.Base.EntityBase,PL.Base.BaseUserControl)">
            <summary>
            获取页面上绑定的值
            </summary>
            <param name="entity"></param>
            <param name="userControl">用户控件</param>
        </member>
        <member name="M:PL.Base.EntityTool.GetBindingData(PL.Base.EntityBase,PL.Base.BaseUserControl,System.String)">
            <summary>
            获取页面上绑定的值
            </summary>
            <param name="entity"></param>
            <param name="userControl">用户控件</param>
            <param name="G">分组代码</param>
        </member>
        <member name="M:PL.Base.EntityTool.GetBindingData(PL.Base.EntityBase)">
            <summary>
            获取页面上绑定的值
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PL.Base.EntityTool.GetBindingData(PL.Base.EntityBase,System.String)">
            <summary>
            获取页面上绑定的值
            </summary>
            <param name="entity"></param>
            <param name="G">分组代码</param>
        </member>
        <member name="M:PL.Base.EntityTool.AddCommonQuerySetting(PL.Base.EntityBase,System.String,System.String)">
            <summary>
            增加通用查询设置
            </summary>
            <param name="entity"></param>
            <param name="key"></param>
            <param name="setting"></param>
        </member>
        <member name="M:PL.Base.EntityTool.AddCommonQuerySetting(PL.Base.EntityBase,System.String,System.String,System.String)">
            <summary>
            增加通用查询设置
            </summary>
            <param name="entity"></param>
            <param name="key"></param>
            <param name="setting"></param>
             <param name="value"></param>
        </member>
        <member name="M:PL.Base.EntityTool.AddCommonQuerySettingNull(PL.Base.EntityBase,System.String,System.String)">
            <summary>
            增加通用查询设置-空值查询
            </summary>
            <param name="entity"></param>
            <param name="key"></param>
            <param name="setting"></param>
        </member>
        <member name="T:PL.Base.GridViewRowExtend">
            <summary>
            数据行扩展
            </summary>
        </member>
        <member name="M:PL.Base.GridViewRowExtend.Checked(System.Web.UI.WebControls.GridViewRow)">
            <summary>
            是否选中
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.GridViewRowExtend.Key(System.Web.UI.WebControls.GridViewRow)">
            <summary>
            获取逻辑主键值
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.GridViewRowExtend.CheckBox(System.Web.UI.WebControls.GridViewRow)">
            <summary>
            获取复选框
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.GridViewRowExtend.FromKey(System.Web.UI.WebControls.GridViewRow,System.String)">
            <summary>
            获取单元格
            </summary>
            <param name="row"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.GridViewRowExtend.Value(System.Web.UI.WebControls.TableCell)">
            <summary>
            获取单元格的值
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.GridViewRowExtend.FromKeyIgnore(System.Web.UI.WebControls.GridViewRow,System.String)">
            <summary>
            获取单元格,忽略空
            </summary>
            <param name="row"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.GridViewRowExtend.FromHeaderText(System.Web.UI.WebControls.GridViewRow,System.String)">
            <summary>
            根据标题获取单元格
            </summary>
            <param name="row"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.MessageExtend">
            <summary>
            信息提示扩展
            </summary>
        </member>
        <member name="M:PL.Base.MessageExtend.Tip(System.String)">
            <summary>
            信息提示[显示在最上端]
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.MessageExtend.Alert(System.String)">
            <summary>
            正确内容信息提示
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.MessageExtend.Alert(System.Exception)">
            <summary>
            异常内容信息提示
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:PL.Base.NPOIExtend">
            <summary>
            NPOI扩展
            </summary>
        </member>
        <member name="M:PL.Base.NPOIExtend.ToExcel(NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            导出Excel到页面供用户下载
            </summary>
            <param name="workbook">工作簿</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:PL.Base.NPOIExtend.ToExcel(NPOI.XSSF.UserModel.XSSFWorkbook,System.String)">
            <summary>
            导出Excel到页面供用户下载
            </summary>
            <param name="workbook">工作簿</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:PL.Base.NPOIExtend.ToWord(NPOI.XWPF.UserModel.XWPFDocument,System.String)">
            <summary>
            导出Excel到页面供用户下载
            </summary>
            <param name="doc">工作簿</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="T:PL.Base.SOAExtend">
            <summary>
            SOA服务请求扩展
            </summary>
        </member>
        <member name="M:PL.Base.SOAExtend.Execute(PL.Base.EciRequest)">
            <summary>
            执行SOA服务调用
            </summary>
            <param name="request">请求</param>
            <returns>响应</returns>
        </member>
        <member name="T:PL.Base.WebSysLang">
            <summary>
            WEB页面语言包
            </summary>
        </member>
        <member name="M:PL.Base.WebSysLang.Get(System.String)">
            <summary>
            获取
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.WebSysLang.Get(System.String,System.String)">
            <summary>
            获取
            </summary>
            <param name="item"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.WebLang">
            <summary>
            WEB页面语言包
            </summary>
        </member>
        <member name="M:PL.Base.WebLang.Get(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.License.LicenseManager">
            <summary>
            授权码管理
            </summary>
        </member>
        <member name="F:PL.Base.License.LicenseManager.EffectDate">
            <summary>
            授权截止日期
            </summary>
        </member>
        <member name="M:PL.Base.License.LicenseManager.GetStatus">
            <summary>
            返回状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.License.LicenseManager.GetSn">
            <summary>
            获取授权码
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.License.LicenseManager.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:PL.Base.License.LicenseManager.Reg(System.String)">
            <summary>
            注册注册码
            </summary>
            <param name="snContent"></param>
        </member>
        <member name="M:PL.Base.License.LicenseManager.Check">
            <summary>
            检查
            </summary>
        </member>
        <member name="T:PL.Base.License.Permission">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.License.Permission.CPUSequence">
            <summary>
            机器码
            </summary>
        </member>
        <member name="M:PL.Base.License.Permission.GenLicense(System.String,System.DateTime)">
            <summary>
            创建注册码
            </summary>
            <param name="serializationStr"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.License.Permission.GenSerialization">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.License.Permission.Instance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.License.Permission.IsValid(System.String)">
            <summary>
            是否有效的授权码
            </summary>
            <param name="licenseContent"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.ComParamWeb">
            <summary>
             Web前端企业参数
            </summary>
        </member>
        <member name="M:PL.Base.ComParamWeb.Get(System.String,System.String)">
            <summary>
            获取参数
            </summary>
            <param name="companyCode"></param>
            <param name="paramKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ComParamWeb.Get(System.String,System.String,System.String)">
            <summary>
            获取实例参数| 先查询企业对应的参数，如果查询不到则查询 参数定义，如果参数定义为空则抛出异常
            </summary>
            <param name="companyCode"></param>
            <param name="paramKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ComParamWeb.Clear">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="T:PL.Base.InstanceParamWeb">
            <summary>
            Web前端系统实例参数
            </summary>
        </member>
        <member name="M:PL.Base.InstanceParamWeb.Get(System.String)">
            <summary>
            获取当前实例对应的参数配置,如果没有则直接取参数的默认值
            </summary>
            <param name="paramKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciParamWeb.GetInstanceParam(System.String,System.String)">
            <summary>
            获取参数
            </summary>
            <param name="instanceId"></param>
            <param name="paramKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciParamWeb.GetInstanceParam(System.String,System.String,System.String)">
            <summary>
            获取实例参数
            </summary>
            <param name="instanceId"></param>
            <param name="paramKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciParamWeb.Clear">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="T:PL.Base.Plugin.UDeskManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Plugin.UDeskManager.InitUDesk">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.SOARequestHandler">
            <summary>
            请求前事件，可以在请求前干预请求
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:PL.Base.SOAResponseHandler">
            <summary>
            请求后事件
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:PL.Base.RESTServiceProxy">
            <summary>
            RESTFull通道
            </summary>
        </member>
        <member name="E:PL.Base.RESTServiceProxy.OnRequest">
            <summary>
            请求前事件
            </summary>
        </member>
        <member name="E:PL.Base.RESTServiceProxy.OnResponse">
            <summary>
            请求后事件
            </summary>
        </member>
        <member name="M:PL.Base.RESTServiceProxy.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:PL.Base.RESTServiceProxy.ServerUrl">
            <summary>
            服务地址
            </summary>
        </member>
        <member name="M:PL.Base.RESTServiceProxy.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.RESTServiceProxy.Execute(PL.Base.EciRequest)">
            <summary>
            执行
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.WCFServiceProxy">
            <summary>
            WCF通道
            </summary>
        </member>
        <member name="E:PL.Base.WCFServiceProxy.OnRequest">
            <summary>
            请求前事件
            </summary>
        </member>
        <member name="E:PL.Base.WCFServiceProxy.OnResponse">
            <summary>
            请求后事件
            </summary>
        </member>
        <member name="M:PL.Base.WCFServiceProxy.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.WCFServiceProxy.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.WCFServiceProxy.Execute(PL.Base.EciRequest)">
            <summary>
            执行
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.APIServiceProxy">
            <summary>
            本地API服务通道
            </summary>l
        </member>
        <member name="F:PL.Base.APIServiceProxy.api">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.APIServiceProxy.API">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.APIServiceProxy.OnRequest">
            <summary>
            请求前事件
            </summary>
        </member>
        <member name="E:PL.Base.APIServiceProxy.OnResponse">
            <summary>
            请求后事件
            </summary>
        </member>
        <member name="M:PL.Base.APIServiceProxy.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.APIServiceProxy.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.APIServiceProxy.Execute(PL.Base.EciRequest)">
            <summary>
            执行
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.SOA">
            <summary>
            服务总调度
            </summary>
        </member>
        <member name="M:PL.Base.SOA.Execute(PL.Base.EciRequest)">
            <summary>
            执行SOA服务调用
            </summary>
            <param name="request">请求</param>
            <returns>响应</returns>
        </member>
        <member name="M:PL.Base.SOA.QueryStringAddToContext(PL.Base.EciRequest)">
            <summary>
            将WEB页面请求的参数加入到上下文中
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:PL.Base.SOA.FormKeyAddToContext(PL.Base.EciRequest)">
            <summary>
            将WEB页面表单请求的参数加入到上下文中
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:PL.Base.SOA.FormKeyToEntity">
            <summary>
            URL请求数据转成实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SOA.RegisterServiceListProxy(System.String,PL.Base.IServiceProxy)">
            <summary>
            注册指定ServiceId的服务通道
            </summary>
            <param name="key"></param>
            <param name="serviceProxy"></param>
        </member>
        <member name="M:PL.Base.SOA.RegisterProxy(System.String,PL.Base.IServiceProxy)">
            <summary>
            注册通道
            </summary>
            <param name="key"></param>
            <param name="serviceProxy"></param>
        </member>
        <member name="M:PL.Base.SOA.HasRegisterProxy(System.String)">
            <summary>
            判断是否已经注册通道
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.SOA.QueryData(System.String)">
             <summary>
            不建议使用： 查询单表数据
             </summary>
             <param name="tableName">表名</param>
             <returns></returns>
        </member>
        <member name="M:PL.Base.SOA.QueryData(System.String,System.String)">
            <summary>
            查询单表数据
            </summary>
            <param name="tableName">表名</param>
            <param name="sortExpression">表名</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SOA.QueryDataByKey(System.String,System.String,System.String)">
            <summary>
            不建议使用：根据字段名查询单表数据
            </summary>
            <param name="tableName">表名</param>
            <param name="fieldName">字段名</param>
            <param name="key">值</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SOA.QueryDataByKey(System.String,System.String,System.String,System.String)">
            <summary>
            不建议使用：根据字段名查询单表数据
            </summary>
            <param name="tableName">表名</param>
            <param name="keyField">字段名</param>
            <param name="keyValue">值</param>
            <param name="sortExpression">排序</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SOA.GetServiceProxy(PL.Base.EciRequest)">
            <summary>
            获取通道
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.SSOProviderUtility">
            <summary>
            权限辅助类
            </summary>
        </member>
        <member name="M:PL.Base.SSOProviderUtility.ConvertUrl(System.String,System.String)">
            <summary>
            转换跳转地址
            </summary>
            <param name="name"></param>
            <param name="sourceUrl"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.TipInfo">
            <summary>
            信息提示
            </summary>
        </member>
        <member name="F:PL.Base.TipInfo.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="F:PL.Base.TipInfo.SystemCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="F:PL.Base.TipInfo.Name">
            <summary>
            描述
            </summary>
        </member>
        <member name="F:PL.Base.TipInfo.Note">
            <summary>
            详细描述
            </summary>
        </member>
        <member name="F:PL.Base.TipInfo.Type">
            <summary>
            显示类型
            </summary>
        </member>
        <member name="F:PL.Base.TipInfo.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:PL.Base.TipManager">
            <summary>
            项目导入信息
            </summary>
        </member>
        <member name="M:PL.Base.TipManager.Get(System.String,System.String)">
            <summary>
            查询
            </summary>
            <param name="systemCode"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.TipManager.SaveDataTable(System.String,System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="systemCode"></param>
            <param name="data"></param>
        </member>
        <member name="M:PL.Base.TipManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="T:PL.Base.EciDataHelpDataProvider">
            <summary>
            数据选择提供者
            </summary>
        </member>
        <member name="M:PL.Base.EciDataHelpDataProvider.GetData(System.String)">
            <summary>
            获取数据
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciDataHelpDataProvider.GetData(System.String,System.String,System.String)">
            <summary>
            获取数据
            </summary>
            <param name="type"></param>
            <param name="condition"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciDataHelpDataProvider.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:PL.Base.EciDataHelpDataProvider.Remove(System.String)">
            <summary>
            移除制定的项
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:PL.Base.GridConfigManager">
            <summary>
            grid 配置管理
            </summary>
        </member>
        <member name="M:PL.Base.GridConfigManager.Get(System.String,System.String)">
            <summary>
            获取
            </summary>
            <param name="configCode"></param>
            <param name="companyCode"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.GridConfigItem">
            <summary>
            Grid配置项
            </summary>
        </member>
        <member name="P:PL.Base.GridConfigItem.DataField">
            <summary>
            显示字段
            </summary>
        </member>
        <member name="P:PL.Base.GridConfigItem.HeaderText">
            <summary>
            中文名
            </summary>
        </member>
        <member name="P:PL.Base.GridConfigItem.Width">
            <summary>
            显示宽度
            </summary>
        </member>
        <member name="P:PL.Base.GridConfigItem.Seq">
            <summary>
            显示顺序
            </summary>
        </member>
        <member name="P:PL.Base.GridConfigItem.IsShow">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="T:PL.Base.GridConfigHead">
            <summary>
            grid 配置
            </summary>
        </member>
        <member name="P:PL.Base.GridConfigHead.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:PL.Base.GridConfigHead.SortExpression">
            <summary>
            默认排序
            </summary>
        </member>
        <member name="P:PL.Base.GridConfigHead.PageSize">
            <summary>
            默认分页大小
            </summary>
        </member>
        <member name="P:PL.Base.GridConfigHead.FixCount">
            <summary>
            固定列数
            </summary>
        </member>
        <member name="F:PL.Base.GridConfigHead.Items">
            <summary>
            配置项
            </summary>
        </member>
        <member name="M:PL.Base.GridConfigHead.FindItem(System.String)">
            <summary>
            查找配置的数据项
            </summary>
            <param name="dataField"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EControlManage">
            <summary>
            ECI控件管理
            </summary>
        </member>
        <member name="M:PL.Base.EControlManage.Add(System.Web.UI.Control)">
            <summary>
            添加
            </summary>
            <param name="webControl"></param>
        </member>
        <member name="M:PL.Base.EControlManage.Check(PL.Base.IEControl)">
            <summary>
            客户端校验
            </summary>
            <param name="eciControl"></param>
        </member>
        <member name="M:PL.Base.EControlManage.CreateSelector(System.Web.UI.Page,System.String,System.String)">
            <summary>
            创建控件标记
            </summary>
            <param name="page"></param>
            <param name="flagName"></param>
            <param name="id"></param>
        </member>
        <member name="T:PL.Base.DataSelectArgs">
            <summary>
            全局页面选择数据参数（例如关区的选择）
            </summary>
        </member>
        <member name="F:PL.Base.DataSelectArgs.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="T:PL.Base.LogoutArgs">
            <summary>
            App用户登出参数
            </summary>
        </member>
        <member name="T:PL.Base.PageLoadArgs">
            <summary>
            App页面加载参数
            </summary>
        </member>
        <member name="T:PL.Base.BizLogListPageLoadArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.BizLogListPageLoadArgs.gvData">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.ReloadArgs">
            <summary>
            App重新加载事件参数
            </summary>
        </member>
        <member name="T:PL.Base.OrgChangeArgs">
            <summary>
            App系统切换参数
            </summary>
        </member>
        <member name="P:PL.Base.OrgChangeArgs.CompanyId">
            <summary>
             公司ID
            </summary>
        </member>
        <member name="P:PL.Base.OrgChangeArgs.CompanyCode">
            <summary>
            公司代码
            </summary>
        </member>
        <member name="P:PL.Base.OrgChangeArgs.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="F:PL.Base.OrgChangeArgs.Ajax">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.UserOrgAppInfoArgs">
            <summary>
            App获取用户组织下对应的APP参数
            </summary>
        </member>
        <member name="T:PL.Base.UserAppInfoArgs">
            <summary>
            App获取用户应用参数
            </summary>
        </member>
        <member name="T:PL.Base.UserOrgInfoArgs">
            <summary>
            App获取用户组织机构参数
            </summary>
        </member>
        <member name="T:PL.Base.LoginArgs">
            <summary>
            App用户登录参数
            </summary>
        </member>
        <member name="F:PL.Base.LoginArgs.AccessByOtherWebSite">
            <summary>
            从其它Web站点整合登录访问：用于不同的应用系统菜单整合到一起的情况
            </summary>
        </member>
        <member name="T:PL.Base.SystemChangeArgs">
            <summary>
            App系统切换参数
            </summary>
        </member>
        <member name="F:PL.Base.SystemChangeArgs.SystemId">
            <summary>
             系统ID
            </summary>
        </member>
        <member name="F:PL.Base.SystemChangeArgs.SystemCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="F:PL.Base.SystemChangeArgs.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="F:PL.Base.SystemChangeArgs.Ajax">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.ExceptionArgs">
            <summary>
            app异常参数
            </summary>
        </member>
        <member name="F:PL.Base.ExceptionArgs.Error">
            <summary>
            异常
            </summary>
        </member>
        <member name="F:PL.Base.ExceptionArgs.Message">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="T:PL.Base.UEditorConfigArgs">
            <summary>
            AppUEditor配置参数
            </summary>
        </member>
        <member name="F:PL.Base.UEditorConfigArgs.Json">
            <summary>
            配置信息
            </summary>
        </member>
        <member name="T:PL.Base.WebArgs">
            <summary>
            Web App 事件参数 基类
            </summary>
        </member>
        <member name="F:PL.Base.WebArgs.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="F:PL.Base.WebArgs.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="T:PL.Base.DefaultWebApp">
            <summary>
            默认WebApp
            </summary>
        </member>
        <member name="M:PL.Base.DefaultWebApp.Login(PL.Base.LoginArgs)">
            <summary>
            用户登录
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PL.Base.DefaultWebApp.GetUserAppInfo(PL.Base.UserAppInfoArgs)">
            <summary>
            获取用户App信息
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.IChoose">
            <summary>
            系统访问检查
            </summary>
        </member>
        <member name="M:PL.Base.IChoose.BeforeQuery(System.String,PL.Base.EciContext)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="context"></param>
        </member>
        <member name="T:PL.Base.ISystemAccess">
            <summary>
            系统访问检查
            </summary>
        </member>
        <member name="M:PL.Base.ISystemAccess.Check(PL.Base.LoginArgs)">
            <summary>
            执行
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:PL.Base.IWebApp">
            <summary>
            Web应用接口
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.LoginParamInit">
            <summary>
            登录参数初始化
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.ApplicationStart">
            <summary>
            应用程序启动
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.PageLoad(PL.Base.PageLoadArgs)">
            <summary>
            页面加载
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PL.Base.IWebApp.BizLogListPageLoad(PL.Base.BizLogListPageLoadArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.BizLogListBeforeBind(System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PL.Base.IWebApp.GetUserOrgInfo(PL.Base.UserOrgInfoArgs)">
            <summary>
            获取用户组织列表
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IWebApp.GetDataSelect(PL.Base.DataSelectArgs)">
            <summary>
            获取全局业务选择数据
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PL.Base.IWebApp.GetOrgAppInfo(PL.Base.UserAppInfoArgs)">
            <summary>
            获取组织应用列表
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IWebApp.GetUserAppInfo(PL.Base.UserAppInfoArgs)">
            <summary>
            获取用户应用列表
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IWebApp.OrgChange(PL.Base.OrgChangeArgs)">
            <summary>
            选择机构
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.Base.IWebApp.SystemChange(PL.Base.SystemChangeArgs)">
            <summary>
            改变系统
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.Base.IWebApp.UEditorConfig(PL.Base.UEditorConfigArgs)">
            <summary>
            获取UEditor配置
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IWebApp.Reload(PL.Base.ReloadArgs)">
            <summary>
            重新加载
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.Login(PL.Base.LoginArgs)">
            <summary>
            登录
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PL.Base.IWebApp.SystemAccessCheck(PL.Base.LoginArgs)">
            <summary>
            登录系统检查
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.Logout(PL.Base.LogoutArgs)">
            <summary>
            登出
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.Exception(PL.Base.ExceptionArgs)">
            <summary>
            异常处理
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PL.Base.IWebApp.ClearSession">
            <summary>
            登录页清空Session
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.IndexPageLoad">
            <summary>
            登录页PageLoad （第一访问（不含Postback））在清除Session之后
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.IndexPageLoading">
            <summary>
            登录页Loading （第一访问（不含Postback））在清除Session之后
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.IndexPageLoaded">
            <summary>
            登录页PageLoaded
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.MainPageLoaded">
            <summary>
            主框架页面加载完毕（ 每次页面刷新都会调用 （包含Postback ））
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.BaseDataPageLoaded(System.Boolean)">
            <summary>
            基础数据页面加载
            </summary>
        </member>
        <member name="M:PL.Base.IWebApp.GetSsoManageUrl">
            <summary>
            获取权限平台Url地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IWebApp.IsTimeOut">
             <summary>
            检测系统是否会话超期 
             </summary>
             <returns></returns>
        </member>
        <member name="T:PL.Base.OrgInfo">
            <summary>
            组织机构信息
            </summary>
        </member>
        <member name="F:PL.Base.OrgInfo.OrgId">
            <summary>
            组织ID
            </summary>
        </member>
        <member name="F:PL.Base.OrgInfo.Code">
            <summary>
            组织代码
            </summary>
        </member>
        <member name="F:PL.Base.OrgInfo.Name">
            <summary>
            组织名称
            </summary>
        </member>
        <member name="F:PL.Base.OrgInfo.Image">
            <summary>
            显示图片
            </summary>
        </member>
        <member name="F:PL.Base.OrgInfo.Attribute">
            <summary>
            扩展数据
            </summary>
        </member>
        <member name="T:PL.Base.SystemApps">
            <summary>
            系统应用清单
            </summary>
        </member>
        <member name="F:PL.Base.SystemApps.Items">
             <summary>
            应用清单
             </summary>
        </member>
        <member name="M:PL.Base.SystemApps.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.SystemApps.Add(PL.Base.AppInfo)">
            <summary>
            添加
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:PL.Base.SystemApps.GetByCode(System.String)">
            <summary>
            根据代码获取应用
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SystemApps.TryGetByCode(System.String)">
            <summary>
            根据代码尝试获取应用
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.AppInfo">
            <summary>
            应用信息
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.AppId">
            <summary>
            应用ID
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Url">
            <summary>
            地址
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Type">
            <summary>
            类型[ 用来区分是WEB 还是 Silverlight 程序 因为Silverlight会遮罩，所以需要做特殊处理]
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Target">
            <summary>
            目标 默认为空 在框架中打开
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Action">
            <summary>
            点击后执行动作
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Tip">
            <summary>
            提示
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.AbountMeUrl">
            <summary>
            关于我地址
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.HasChildren">
            <summary>
            是否有下一级
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.ParentId">
            <summary>
            上级ID
            </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Attribute">
             <summary>
            扩展数据
             </summary>
        </member>
        <member name="F:PL.Base.AppInfo.Children">
            <summary>
            子应用
            </summary>
        </member>
        <member name="T:PL.Base.AppConfig">
            <summary>
            应用配置
            </summary>
        </member>
        <member name="F:PL.Base.AppConfig.LoginMode">
            <summary>
            登录模式
            </summary>
        </member>
        <member name="F:PL.Base.AppConfig.AppType">
            <summary>
            类型 None:无  Function第一级功能模块
            </summary>
        </member>
        <member name="F:PL.Base.AppConfig.AppDisplayType">
            <summary>
            显示类型：Fix固定显示，Float浮动显示
            </summary>
        </member>
        <member name="F:PL.Base.AppConfig.AppActionType">
            <summary>
            顶层模块执行动作：
            </summary>
        </member>
        <member name="F:PL.Base.AppConfig.MenuLoadType">
            <summary>
            功能菜单加载方式: Default默认（加载） None(不加载） First(加载一个模块)
            </summary>
        </member>
        <member name="F:PL.Base.AppConfig.PrivilegeMode">
            <summary>
            UserPrivilege:用户权限   
            UserRolesPrivilegeInNode:用户在某组织机构下所有角色的权限
            UserPrivilegeForApp:用户的权限同时（在某角色权限范围内 ） 
            SelectRolePrivilege:选定的某个（业务色色）的权限
            </summary>
        </member>
        <member name="F:PL.Base.AppConfig.AppRootId">
            <summary>
            我的应用根ID
            </summary>
        </member>
        <member name="M:PL.Base.AppConfig.ReadConfig">
            <summary>
            读取配置
            </summary>
        </member>
        <member name="T:PL.Base.Web.WebAPIContext">
            <summary>
            一般处理程序基类
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.AccessCompanyCode">
            <summary>
            请求公司代码
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.AccessCompanyName">
            <summary>
            请求公司名称
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.BusinessCompanyCode">
            <summary>
            运行公司代码
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.SysCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.UserName">
            <summary>
            账号
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.API">
            <summary>
            访问的API
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.Success">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.Message">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.Num">
            <summary>
            数量
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPIContext.Url">
            <summary>
            访问地址
            </summary>
        </member>
        <member name="T:PL.Base.Web.WebAPI">
            <summary>
            一般处理程序基类
            </summary>
        </member>
        <member name="M:PL.Base.Web.WebAPI.CheckLogin">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:PL.Base.Web.WebAPI.Context">
            <summary>
            上下文
            </summary>
        </member>
        <member name="F:PL.Base.Web.WebAPI.InputMessage">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:PL.Base.Web.WebAPI.ProcessRequest(System.Web.HttpContext)">
            <summary>
             执行请求
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.Web.WebAPI.Execute">
            <summary>
            执行异步调用
            </summary>
        </member>
        <member name="P:PL.Base.Web.WebAPI.IsReusable">
            <summary>
            IsReusable
            </summary>
        </member>
        <member name="T:PL.Base.API.APIHandler">
            <summary>
            一般处理程序基类
            </summary>
        </member>
        <member name="M:PL.Base.API.APIHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
             执行请求
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.API.APIHandler.Execute">
            <summary>
            执行异步调用
            </summary>
        </member>
        <member name="P:PL.Base.API.APIHandler.IsReusable">
            <summary>
            IsReusable
            </summary>
        </member>
        <member name="T:PL.Base.BaseHandler">
            <summary>
            一般处理程序基类
            </summary>
        </member>
        <member name="M:PL.Base.BaseHandler.EciActionExecute">
            <summary>
            执行异步调用
            </summary>
        </member>
        <member name="M:PL.Base.BaseHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
             执行请求
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:PL.Base.BaseHandler.IsReusable">
            <summary>
            IsReusable
            </summary>
        </member>
        <member name="T:PL.Base.MenuPage">
            <summary>
            基类页面
            </summary>
        </member>
        <member name="M:PL.Base.MenuPage.OnLoad(System.EventArgs)">
            <summary>
            页面加载
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:PL.Base.BasePageLevelOne">
            <summary>
            基类页面
            </summary>
        </member>
        <member name="M:PL.Base.BasePageLevelOne.OnLoad(System.EventArgs)">
            <summary>
            页面加载
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:PL.Base.ChooseHelper">
            <summary>
            放大镜帮助类
            </summary>
        </member>
        <member name="M:PL.Base.ChooseHelper.ReturnValue(System.Data.DataTable,System.String,System.String)">
            <summary>
            返回数据
            </summary>
            <param name="dt"></param>
            <param name="codeField"></param>
            <param name="nameField"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.APIAction.Execute(System.String,System.Object,PL.Base.Web.WebAPI)">
            <summary>
            异步调用
            </summary>
        </member>
        <member name="T:PL.Base.APIMessage">
            <summary>
            数据交换消息
            </summary>
        </member>
        <member name="F:PL.Base.APIMessage.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="F:PL.Base.APIMessage.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:PL.Base.APIMessage.MessageData">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:PL.Base.APIMessage.ToJson">
            <summary>
            序列化成Json对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciAction.Execute(System.String,System.Object)">
            <summary>
            异步调用
            </summary>
        </member>
        <member name="T:PL.Base.EditPage">
            <summary>
            编辑页面（动态页面）
            </summary>
        </member>
        <member name="P:PL.Base.EditPage.HasChanged">
            <summary>
            是否已经保存
            </summary>
        </member>
        <member name="M:PL.Base.EditPage.OnLoad(System.EventArgs)">
            <summary>
            页面加载
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.Base.EditPage.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.Base.Login.LoginKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.Login.LoginKey.PublicKey">
            <summary>
            PublicKey
            </summary>
        </member>
        <member name="F:PL.Base.Login.LoginKey.PrivateKey">
            <summary>
            PrivateKey
            </summary>
        </member>
        <member name="T:PL.Base.LoginPage">
            <summary>
            登录页面
            </summary>
        </member>
        <member name="M:PL.Base.LoginPage.InitParam">
            <summary>
            外部参数初始化
            </summary>
        </member>
        <member name="M:PL.Base.LoginPage.IndexTransfer">
            <summary>
            页面跳转
            </summary>
        </member>
        <member name="M:PL.Base.LoginPage.CreateDevAccount">
            <summary>
            创建开发账号
            </summary>
        </member>
        <member name="M:PL.Base.LoginPage.CheckPasswordStrength(System.Boolean)">
            <summary>
            检测密码强度
            </summary>
        </member>
        <member name="M:PL.Base.LoginPage.ExecutePasswordStrategy(System.Boolean)">
            <summary>
            执行强制修改密码策略 1.设置时间必须修改密码  2.新用户必须修改
            </summary>
        </member>
        <member name="M:PL.Base.LoginPage.GoToStartPage">
            <summary>
            跳转到起始页
            </summary>
        </member>
        <member name="M:PL.Base.LoginPage.AddCommonUrl(System.String)">
            <summary>
            添加平台框架需要的参数
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.LoginPage.GetAppStartUrl(System.String)">
            <summary>
            获取AppStart
            </summary>
            <param name="startUrl"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.LoginPage.LoginByToken(System.String)">
            <summary>
            
            </summary>
            <param name="strToken"></param>
        </member>
        <member name="M:PL.Base.LoginPage.LoginByToken(System.String,System.Boolean)">
            <summary>
            Token登录
            </summary>
            <param name="strToken"></param>
            <param name="redirect"></param>
        </member>
        <member name="M:PL.Base.LoginPage.LoginError(System.Exception)">
            <summary>
            登录异常
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.LoginPage.ClearSession">
            <summary>
            清除Session信息
            </summary>
        </member>
        <member name="M:PL.Base.LoginPage.BizSystemJumpToAppStart">
            <summary>
            业务系统选择完 代理 等相关信息 跳转到 主框架页面
            </summary>
        </member>
        <member name="M:PL.Base.LoginPage.LoginSuccess(System.String)">
            <summary>
            
            </summary>
            <param name="loginNo"></param>
        </member>
        <member name="M:PL.Base.LoginPage.LoginException(System.String,System.Exception)">
            <summary>
            登陆发生异常
            </summary>
            <param name="loginNo"></param>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.LoginPage.CheckMaxWrongPasswordTimes(System.String)">
            <summary>
            
            </summary>
            <param name="loginNo"></param>
        </member>
        <member name="M:PL.Base.LoginPage.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.MainPage">
            <summary>
            框架页面
            </summary>
        </member>
        <member name="M:PL.Base.MainPage.DataSelected(System.String,System.String)">
            <summary>
            数据选择设置
            </summary>
            <param name="value"></param>
            <param name="display"></param>
        </member>
        <member name="M:PL.Base.MainPage.CssLoad">
            <summary>
            样式控制
            </summary>
        </member>
        <member name="T:PL.Base.PageElement">
            <summary>
            页面元素
            </summary>
        </member>
        <member name="F:PL.Base.PageElement.ListButton">
            <summary>
            按钮集合
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.AddEPanel(PL.UI.Controls.EPanel)">
            <summary>
            增加EPanel
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:PL.Base.PageElement.AddButton(PL.UI.Controls.EButton)">
            <summary>
            增加BUTTON
            </summary>
            <param name="button"></param>
        </member>
        <member name="M:PL.Base.PageElement.AddButtonList(PL.UI.Controls.EButtonList)">
            <summary>
            增加BUTTON
            </summary>
            <param name="button"></param>
        </member>
        <member name="M:PL.Base.PageElement.AddCheckBox(PL.UI.Controls.ERadioButton)">
            <summary>
            
            </summary>
            <param name="button"></param>
        </member>
        <member name="M:PL.Base.PageElement.AddCheckBox(PL.UI.Controls.ECheckBox)">
            <summary>
            
            </summary>
            <param name="chkbox"></param>
        </member>
        <member name="M:PL.Base.PageElement.AddLabel(PL.UI.Controls.ELabel)">
            <summary>
            增加LABEL
            </summary>
            <param name="label"></param>
        </member>
        <member name="M:PL.Base.PageElement.AddETitle(PL.UI.Controls.ETitle)">
            <summary>
            
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:PL.Base.PageElement.AddTabItem(PL.UI.Controls.ETabItem)">
            <summary>
            增加TabItem
            </summary>
            <param name="tabItem"></param>
        </member>
        <member name="M:PL.Base.PageElement.AddGridView(PL.UI.Controls.EGridView)">
            <summary>
            增加gridView
            </summary>
            <param name="gridView"></param>
        </member>
        <member name="M:PL.Base.PageElement.InitLanguage">
            <summary>
            多语言控制
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.RadioButtonInitLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.CheckBoxInitLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.ButtonInitLanguage">
            <summary>
            功能按钮多语言设置
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.ButtonListInitLanguage">
            <summary>
            功能按钮多语言设置
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.TabItemInitLanguage">
            <summary>
             
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.ETitleInitLanguage">
            <summary>
             
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.EPanelInitLanguage">
            <summary>
            EPanel多语言设置
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.LabelInitLanguage">
            <summary>
            标签多语言设置
            </summary>
        </member>
        <member name="M:PL.Base.PageElement.GridViewInitLanguage">
            <summary>
            GRIDVIEW多语言设置
            </summary>
        </member>
        <member name="T:PL.Base.PageManage">
            <summary>
            页面控制
            </summary>
        </member>
        <member name="M:PL.Base.PageManage.CheckTimeOut(System.Web.UI.Page,System.String)">
            <summary>
            超时检测
            </summary>
            <param name="page"></param>
            <param name="url"></param>
        </member>
        <member name="M:PL.Base.PageManage.IsTimeOut">
            <summary>
            是否超时
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageManage.ReLogin(System.String)">
            <summary>
            回到登录页
            </summary>
        </member>
        <member name="M:PL.Base.PageManage.Log4WriteLog(System.Exception,PL.Base.ISession)">
            <summary>
            LOG4日志输出
            </summary>
            <param name="ex"></param>
            <param name="UserInfo"></param>
        </member>
        <member name="M:PL.Base.PageManage.SendMail(System.Exception,PL.Base.ISession)">
            <summary>
            发生异常发送EMAIL
            </summary>
            <param name="ex"></param>
            <param name="UserInfo"></param>
        </member>
        <member name="M:PL.Base.PageManage.GetFunctionName(System.Web.UI.IPostBackEventHandler,System.String)">
            <summary>
            获取功能名称
            </summary>
            <param name="sourceControl"></param>
            <param name="eventArgument"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageManage.CheckRefresh">
            <summary>
            检查页面刷新
            </summary>
        </member>
        <member name="M:PL.Base.PageManage.WriteLog(System.Exception)">
            <summary>
            记录日志
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.PageManage.InitSysWebLog(PL.Base.EciSysWebLog)">
            <summary>
            
            </summary>
            <param name="log"></param>
        </member>
        <member name="M:PL.Base.PageManage.LogSubmit(PL.Base.EciSysWebLog,PL.Base.LogType)">
            <summary>
            
            </summary>
            <param name="eciLog"></param>
            <param name="logType"></param>
        </member>
        <member name="M:PL.Base.PageManage.LogSubmit(PL.Base.EciSysWebLog)">
            <summary>
            
            </summary>
            <param name="eciLog"></param>
        </member>
        <member name="T:PL.Base.ImportPage">
            <summary>
            导入页面
            </summary>
        </member>
        <member name="F:PL.Base.ImportPage.import">
            <summary>
            导入控件
            </summary>
        </member>
        <member name="P:PL.Base.ImportPage.ImportTitle">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.ImportPage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.ImportPage.OnLoad(System.EventArgs)">
            <summary>
            页面加载
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.Base.ImportPage.ImportAction(System.String)">
            <summary>
            查询设置
            </summary>
        </member>
        <member name="T:PL.Base.BizNoticeDataInfo">
            <summary>
            业务预警通知
            </summary>
        </member>
        <member name="F:PL.Base.BizNoticeDataInfo.Name">
            <summary>
            预警名称
            </summary>
        </member>
        <member name="F:PL.Base.BizNoticeDataInfo.Qty">
            <summary>
            数量
            </summary>
        </member>
        <member name="T:PL.Base.BizNotice">
            <summary>
            业务预警通知
            </summary>
        </member>
        <member name="F:PL.Base.BizNotice.Name">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="F:PL.Base.BizNotice.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:PL.Base.BizNotice.Url">
            <summary>
            服务地址
            </summary>
        </member>
        <member name="F:PL.Base.BizNotice.ListData">
            <summary>
            数据内容
            </summary>
        </member>
        <member name="M:PL.Base.BizNotice.LoadData">
            <summary>
            加载数据
            </summary>
        </member>
        <member name="T:PL.Base.BizNoticeManage">
            <summary>
            业务预警通知管理
            </summary>
        </member>
        <member name="F:PL.Base.BizNoticeManage.ListNotice">
            <summary>
            消息列表
            </summary>
        </member>
        <member name="M:PL.Base.BizNoticeManage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.BizNoticeManage.LoadConfig">
            <summary>
            加载配置
            </summary>
        </member>
        <member name="M:PL.Base.BizNoticeManage.LoadData">
            <summary>
            加载数据
            </summary>
        </member>
        <member name="T:PL.Base.HtmlWindow">
            <summary>
            前台页面对象（一般用来调用前台Js）
            </summary>
        </member>
        <member name="M:PL.Base.HtmlWindow.Onload(System.String)">
            <summary>
            注册前台 页面 onload 事件
            </summary>
            <param name="script"></param>
        </member>
        <member name="M:PL.Base.HtmlWindow.Nofity">
            <summary>
            通知
            </summary>
        </member>
        <member name="M:PL.Base.HtmlWindow.Nofity(System.String)">
            <summary>
            通知
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.HtmlWindow.Nofity(System.String,System.String)">
            <summary>
            通知
            </summary>
            <param name="key"></param>
            <param name="type"></param>
        </member>
        <member name="M:PL.Base.HtmlWindow.OpenPDF(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
        </member>
        <member name="T:PL.Base.Identity">
            <summary>
             用户登录唯一身份ID
            </summary>
        </member>
        <member name="M:PL.Base.Identity.Generate">
             <summary>
            获取当前 用户登录唯一身份ID
             </summary>
        </member>
        <member name="T:PL.Base.Msg">
            <summary>
            信息提示
            </summary>
        </member>
        <member name="M:PL.Base.Msg.Tip(System.String)">
            <summary>
            一般信息提示：在顶端显示、不影响操作
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Msg.Tip(System.String,System.Boolean)">
            <summary>
            延迟信息提示：在跳转页面的顶端显示、不影响操作
            </summary>
            <param name="message"></param>
            <param name="delay"></param>
        </member>
        <member name="M:PL.Base.Msg.Alert(System.String)">
            <summary>
            信息提示
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Msg.Alert(System.String,System.Boolean)">
            <summary>
            信息提示
            </summary>
            <param name="message"></param>
            <param name="delay"></param>
        </member>
        <member name="M:PL.Base.Msg.Warning(System.String)">
            <summary>
            信息提示
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Msg.Warning(System.String,System.Boolean)">
            <summary>
            信息提示
            </summary>
            <param name="message"></param>
            <param name="delay"></param>
        </member>
        <member name="M:PL.Base.Msg.Error(System.String)">
            <summary>
            异常信息提示
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Msg.AccessError(System.String)">
            <summary>
            异常信息提示
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Msg.Error(System.Exception)">
            <summary>
            异常信息提示
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.Msg.Progress(System.String)">
            <summary>
            显示任务进度
            </summary>
            <param name="taskId"></param>
        </member>
        <member name="M:PL.Base.Msg.Progress(System.String,System.String)">
            <summary>
            显示任务进度
            </summary>
            <param name="taskId"></param>
            <param name="type"></param>
        </member>
        <member name="M:PL.Base.Msg.GetAsyncSumInfo(System.String)">
            <summary>
            获取异步汇总信息
            </summary>
            <param name="taskId"></param>
        </member>
        <member name="T:PL.Base.NPOIReadOption">
            <summary>
            NPOI导入选项
            </summary>
        </member>
        <member name="F:PL.Base.NPOIReadOption.ListSheetConfig">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.NPOIReadOption.HasHeader">
            <summary>
            是否有标题行
            </summary>
        </member>
        <member name="F:PL.Base.NPOIReadOption.ColumnSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.NPOIReadOption.TrimData">
            <summary>
            是否去除前后空格
            </summary>
        </member>
        <member name="T:PL.Base.NPOISheetConfig">
            <summary>
            NPOI导入Sheet配置
            </summary>
        </member>
        <member name="F:PL.Base.NPOISheetConfig.ExcelColumnIndexAndName">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:PL.Base.NPOISheetConfig.Add(System.Int32,System.String)">
            <summary>
            增加
            </summary>
            <param name="columnIndex"></param>
            <param name="columnName"></param>
        </member>
        <member name="M:PL.Base.NPOISheetConfig.IsDateColumn(System.Int32)">
            <summary>
            判断是否是日期类型列
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOISheetConfig.IsNumberColumn(System.Int32)">
            <summary>
            判断是否是数字类型列
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="F:PL.Base.NPOISheetConfig.DateColumns">
            <summary>
            日期列
            </summary>
        </member>
        <member name="F:PL.Base.NPOISheetConfig.NumberColumns">
            <summary>
            数值列
            </summary>
        </member>
        <member name="F:PL.Base.NPOISheetConfig.SheetIndex">
            <summary>
            Sheet索引
            </summary>
        </member>
        <member name="F:PL.Base.NPOISheetConfig.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:PL.Base.NPOISheetConfig.DataColumnRowIndex">
            <summary>
            标题列所在行
            </summary>
        </member>
        <member name="T:PL.Base.IncludeFileInfo">
            <summary>
            工具
            </summary>
        </member>
        <member name="F:PL.Base.IncludeFileInfo.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:PL.Base.IncludeFileInfo.Src">
            <summary>
            地址
            </summary>
        </member>
        <member name="F:PL.Base.IncludeFileInfo.UseTo">
            <summary>
            用途
            </summary>
        </member>
        <member name="F:PL.Base.IncludeFileInfo.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:PL.Base.EasySheet2007">
            <summary>
            EasySheet (开始行从1 开始计算，开始列从1开始计算)
            </summary>
        </member>
        <member name="M:PL.Base.EasySheet2007.#ctor(NPOI.XSSF.UserModel.XSSFSheet)">
            <summary>
            构造函数
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:PL.Base.EasySheet2007.Cell(System.Int32,System.Int32)">
            <summary>
            单元格 (行从1 开始计算，列从1开始计算)
            </summary>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciReport2007BeforeOutputArgs">
            <summary>
            NPOI导出参数
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007BeforeOutputArgs.Report">
            <summary>
            报表
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007BeforeOutputArgs.Workbook">
            <summary>
            工作薄
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007BeforeOutputArgs.Sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007BeforeOutputArgs.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="T:PL.Base.BeforeOutputHandler2007">
            <summary>
            NPOI导出句柄
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:PL.Base.EciReport2007">
            <summary>
            NPOI导出Excel
            </summary>
        </member>
        <member name="P:PL.Base.EciReport2007.PDF">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciReport2007.PDFView">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.EciReport2007.OnBeforeOutput">
            <summary>
            输出之前用户自定义事件
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.AutoToExcel">
            <summary>
            导出完毕后自动输出到Excel中
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.ForceFormulaRecalculation">
            <summary>
            重新计算公式
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.Name">
            <summary>
            报表名称
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.Type">
            <summary>
            报表类型
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.TemplateFile">
            <summary>
            模板文件
            </summary>
        </member>
        <member name="P:PL.Base.EciReport2007.AssemblyExtend">
            <summary>
            程序集扩展
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.ReportParam">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.ListDetail">
            <summary>
            明细处理配置
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.TargetFileName">
            <summary>
            目标文件名
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.workbook">
            <summary>
            工作簿
            </summary>
        </member>
        <member name="F:PL.Base.EciReport2007.sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.AddDataTable(System.Data.DataTable)">
            <summary>
            追加数据表
            </summary>
            <param name="dataTable"></param>
        </member>
        <member name="M:PL.Base.EciReport2007.AddDataTable(System.Data.DataTable,System.String)">
            <summary>
             追加数据表
            </summary>
            <param name="dataTable">数据表</param>
            <param name="tableName">表名</param>
        </member>
        <member name="M:PL.Base.EciReport2007.QueryStringAddToParam">
            <summary>
            将页面URL参数加入到报表参数
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.InitByReportCode(System.String)">
            <summary>
            根据开发平台报表设计代码初始化
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:PL.Base.EciReport2007.ReadConfigFromExcel">
            <summary>
            从Excel表格中获取配置信息
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.Execute">
            <summary>
            执行导出报表【EXCEL报表】
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.ExecuteSheet(System.Int32,System.String)">
            <summary>
            导出指定Sheet
            </summary>
            <param name="inputSheetIndex"></param>
            <param name="headTableName"></param>
        </member>
        <member name="M:PL.Base.EciReport2007.Execute(System.Int32,System.Boolean,System.String)">
            <summary>
            执行导出报表【EXCEL报表】
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.PrintLandscape(System.Boolean,System.Int16)">
            <summary>
            设置水平打印
            </summary>
            <param name="landscape">true 横向打印 false 纵向打印</param>
            <param name="pagerSize"></param>
        </member>
        <member name="M:PL.Base.EciReport2007.GroupSet(System.Data.DataTable,System.Data.DataTable,System.Int32)">
            <summary>
            分组设置
            </summary>
            <param name="dataHead"></param>
            <param name="dataBody"></param>
            <param name="groupSize">分组大小</param>
        </member>
        <member name="M:PL.Base.EciReport2007.ToExcel">
            <summary>
            输出到Excel中
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.ToExcel(System.String)">
            <summary>
            输出到Excel中
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.ToPDF(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.EciReport2007.Save(System.String)">
            <summary>
            保存到本地目录
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.EciReport2007.ExtendConfig">
            <summary>
            调用扩展配置
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.Check">
            <summary>
            检测数据源是提供
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.CreateWorkbook">
            <summary>
            创建工作簿
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport2007.WriteToCell(NPOI.XSSF.UserModel.XSSFCell,System.Data.DataRow,System.String)">
            <summary>
            写入单元格
            </summary>
            <param name="cell"></param>
            <param name="dataRow"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport2007.WriteToCellEx(NPOI.XSSF.UserModel.XSSFCell,System.Data.DataRow,System.String)">
            <summary>
            写入单元格
            </summary>
            <param name="cell"></param>
            <param name="dataRow"></param>
            <param name="cellValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport2007.ReadCellValue(NPOI.XSSF.UserModel.XSSFCell)">
            <summary>
            读取单元格内容
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport2007.OpenTemplate(System.String)">
            <summary>
            读取模板文件
            </summary>
            <param name="templateFile"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport2007.CreateWorkFolder">
            <summary>
            创建工作目录
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.WriteToCell(System.Int32,System.String,System.String)">
            <summary>
            将值写入Excel中
            </summary>
            <param name="rowIndex">从1开始</param>
            <param name="cellChar"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.EciReport2007.WriteToCell(System.Int32,System.String,System.Double)">
            <summary>
            将值写入Excel中
            </summary>
            <param name="rowIndex">从1开始</param>
            <param name="cellChar"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.EciReport2007.GetCell(System.Int32,System.String)">
            <summary>
            获取单元格
            </summary>
            <param name="rowIndex">从1开始</param>
            <param name="cellChar"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport2007.GetColumnIndex(System.String)">
            <summary>
            返回单元格列，注意索引从1开始
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReport2007.CreateExtendInstance">
            <summary>
            创建报表扩展
            </summary>
        </member>
        <member name="M:PL.Base.EciReport2007.GetReportPath(System.String)">
            <summary>
            获取报表路径
            </summary>
            <param name="reportCode"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciReportMerge2007">
            <summary>
            报表合并管理
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMerge2007.sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMerge2007.Items">
            <summary>
            项
            </summary>
        </member>
        <member name="M:PL.Base.EciReportMerge2007.GetMergeItem(System.String)">
            <summary>
            获取合并项
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciReportMerge2007.#ctor(NPOI.XSSF.UserModel.XSSFSheet,System.Data.DataTable)">
            <summary>
            构造函数
            </summary>
            <param name="sheet"></param>
            <param name="detailTable"></param>
        </member>
        <member name="M:PL.Base.EciReportMerge2007.Compare(System.String,System.String,System.Int32,NPOI.XSSF.UserModel.XSSFCell)">
            <summary>
            比较
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
            <param name="currentRowIndex"></param>
            <param name="cell"></param>
        </member>
        <member name="M:PL.Base.EciReportMerge2007.LastExecute">
            <summary>
            最后执行
            </summary>
        </member>
        <member name="T:PL.Base.EciReportMergeItem2007">
            <summary>
            合并项
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem2007.Manage">
            <summary>
            合并管理器
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem2007.sheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem2007.IsFirst">
            <summary>
             
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem2007.ColumnName">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:PL.Base.EciReportMergeItem2007.LastValue">
            <summary>
            之前的值，如果之前的值和当前不一致，则考虑要合并单元格了，注意第一个和最后一个的问题
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem2007.StartRow">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem2007.EndRow">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem2007.ColumnIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem2007.MergeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciReportMergeItem2007.VerticalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.EciReportMergeItem2007.#ctor(PL.Base.EciReportMerge2007)">
            <summary>
            构造函数
            </summary>
            <param name="manage"></param>
        </member>
        <member name="M:PL.Base.EciReportMergeItem2007.Merge">
            <summary>
            合并
            </summary>
        </member>
        <member name="T:PL.Base.GlobalHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.GlobalHelper.Application_Error(System.Web.HttpApplication,System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="application"></param>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:PL.Base.EciWeb">
            <summary>
            Web框架初始化
            </summary>
        </member>
        <member name="M:PL.Base.EciWeb.InitFramework">
            <summary>
            初始化框架
            </summary>
        </member>
        <member name="T:PL.Base.FunctionBarList">
            <summary>
            功能栏信息
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.FullScreen">
            <summary>
            全屏
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.Refresh">
            <summary>
            刷新
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.Reload">
            <summary>
            重新加载
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.Home">
            <summary>
            首页
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.ChangePassword">
            <summary>
            修改密码
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.Resource">
             <summary>
            研发资源
             </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.OnlineService">
            <summary>
            在线客服
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.ViewSource">
            <summary>
            查询源码
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.Dev">
            <summary>
            开发平台
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.Quite">
            <summary>
            退出
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.Feedback">
            <summary>
            反馈
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.Me">
            <summary>
            关于我
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarList.Platform">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.FunctionBarManager">
            <summary>
            功能栏信息
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarManager.ListFunctionBar">
            <summary>
            功能栏列表
            </summary>
        </member>
        <member name="M:PL.Base.FunctionBarManager.GetFunctionBar">
            <summary>
            获取功能栏
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.FunctionBarManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:PL.Base.FunctionBarManager.IsShow(PL.Base.FunctionBarList)">
            <summary>
            是否显示
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.FunctionBarManager.GetExtendFunctionBarList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.FunctionBarManager.GetName(PL.Base.FunctionBarList)">
            <summary>
            获取名称
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.FunctionBarManager.IsShow(PL.Base.FunctionBarList,System.Boolean)">
            <summary>
            是否显示
            </summary>
            <param name="code"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Import.ImportHelper">
            <summary>
            导入帮助类
            </summary>
        </member>
        <member name="M:PL.Base.Import.ImportHelper.CheckExcelColumn(NPOI.SS.UserModel.IRow,System.Int32,System.String)">
            <summary>
            导入检查Excel列是否正确
            </summary>
            <param name="row"></param>
            <param name="columnIndex"></param>
            <param name="targetColumnName"></param>
        </member>
        <member name="M:PL.Base.Import.ImportHelper.CheckExcelColumn(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            导入检查Excel列是否正确
            </summary>
            <param name="data"></param>
            <param name="columnIndex"></param>
            <param name="targetColumnName"></param>
        </member>
        <member name="T:PL.Base.MenuProvider">
            <summary>
            菜单4
            </summary>
        </member>
        <member name="P:PL.Base.MenuProvider.LogInfo">
            <summary>
            日志信息
            </summary>
        </member>
        <member name="M:PL.Base.MenuProvider.GetMenu">
            <summary>
            加载数据
            </summary>
        </member>
        <member name="M:PL.Base.MenuProvider.GetPrivilegeMode">
            <summary>
            获取权限模式
            </summary>
            <returns></returns>
        </member>
        <member name="T:PL.Base.ExcelHelper">
            <summary>
            Excel导出帮助类
            1.提供基于DataTable创建列标题，导出DataTable数据
            2.提供基于EGridView创建列标题，导出DataTable数据
            </summary>
        </member>
        <member name="F:PL.Base.ExcelHelper.Columns">
            <summary>
            导出的Excel列
            </summary>
        </member>
        <member name="F:PL.Base.ExcelHelper.OutputFileAfterExecute">
            <summary>
            输出
            </summary>
        </member>
        <member name="P:PL.Base.ExcelHelper.Hssfworkbook">
            <summary>
            WorkBook
            </summary>
        </member>
        <member name="P:PL.Base.ExcelHelper.Hssfworkbook2007">
            <summary>
            WorkBook
            </summary>
        </member>
        <member name="M:PL.Base.ExcelHelper.InitColumnsByEGrid(PL.UI.Controls.EGridView)">
            <summary>
            根据EGridView的列标题创建导出Excel的列标题
            </summary>
            <param name="webGrid"></param>
        </member>
        <member name="M:PL.Base.ExcelHelper.InitColumnsByEGrid(PL.UI.Controls.EGridView,PL.Base.ExcelColumnOption)">
            <summary>
            根据EGridView的列标题创建导出Excel的列标题
            </summary>
            <param name="webGrid"></param>
            <param name="options"></param>
        </member>
        <member name="M:PL.Base.ExcelHelper.InitColumnsByDataTable(System.Data.DataTable)">
            <summary>
            根据DataTable的列标题创建导出Excel的列标题
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PL.Base.ExcelHelper.SetHeadColor(System.String,PL.Base.ExcelColor)">
            <summary>
            设置导出EXCEL的表头颜色
            </summary>
            <param name="dataField"></param>
            <param name="color"></param>
        </member>
        <member name="M:PL.Base.ExcelHelper.Export(System.Data.DataTable)">
            <summary>
            导出Excel
            </summary>
            <param name="table">要导出的数据</param>
        </member>
        <member name="M:PL.Base.ExcelHelper.Export(System.Data.DataTable,System.String)">
            <summary>
            导出Excel
            </summary>
            <param name="table">要导出的数据</param>
            <param name="fileName">导出的文件名</param>
        </member>
        <member name="M:PL.Base.ExcelHelper.Output(System.String)">
            <summary>
            输出
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.ExcelHelper.SaveFile(System.String)">
            <summary>
            保存文件
            </summary>
        </member>
        <member name="T:PL.Base.QueryUserControl">
            <summary>
            查询用户控件
            </summary>
        </member>
        <member name="F:PL.Base.QueryUserControl.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="P:PL.Base.QueryUserControl.ResetId">
            <summary>
            重置
            </summary>
        </member>
        <member name="P:PL.Base.QueryUserControl.QuerySql">
            <summary>
            查询语句
            </summary>
        </member>
        <member name="P:PL.Base.QueryUserControl.DefaultPageSize">
            <summary>
            默认分页大小
            </summary>
        </member>
        <member name="F:PL.Base.QueryUserControl.WebGrid">
            <summary>
            数据表格控件
            </summary>
        </member>
        <member name="F:PL.Base.QueryUserControl.SearchButton">
            <summary>
            查询按钮
            </summary>
        </member>
        <member name="M:PL.Base.QueryUserControl.QuerySetting(PL.Base.EciRequest)">
            <summary>
            查询设置
            </summary>
        </member>
        <member name="M:PL.Base.QueryUserControl.Register">
            <summary>
            注册
            </summary>
        </member>
        <member name="M:PL.Base.QueryUserControl.Search">
            <summary>
            执行查询
            </summary>
        </member>
        <member name="M:PL.Base.QueryUserControl.Refresh">
            <summary>
            刷新列表数据，不改变当前页
            </summary>
        </member>
        <member name="M:PL.Base.QueryUserControl.BeforeBind(System.Data.DataTable)">
            <summary>
            绑定之前事件
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:PL.Base.QueryUserControl.AfterBind(System.Data.DataTable,PL.Base.EciResponse)">
            <summary>
            绑定之后事件
            </summary>
        </member>
        <member name="M:PL.Base.QueryUserControl.BindData">
            <summary>
            绑定数据
            </summary>
        </member>
        <member name="M:PL.Base.QueryUserControl.GetExportDataSource">
            <summary>
            获取导出Excel的数据源
            </summary>
        </member>
        <member name="M:PL.Base.QueryUserControl.InitEvent">
            <summary>
            初始化事件
            </summary>
        </member>
        <member name="M:PL.Base.QueryUserControl.SearchButton_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:PL.Base.QueryPage">
            <summary>
            查询页面
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.HasRemembered">
            <summary>
            使用了自动记忆功能
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.IsChoose">
            <summary>
            是放大镜页面
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.IsChooseCheck">
            <summary>
            放大镜检测
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.ChooseCodeField">
            <summary>
            放大镜的代码字段
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.ChooseNameField">
            <summary>
            放大镜的名称字段
            </summary>
        </member>
        <member name="P:PL.Base.QueryPage.QuerySql">
            <summary>
            查询语句
            </summary>
        </member>
        <member name="P:PL.Base.QueryPage.EnableRember">
            <summary>
            是否允许记录查询条件 默认允许
            </summary>
        </member>
        <member name="P:PL.Base.QueryPage.DefaultPageSize">
            <summary>
            默认分页大小
            </summary>
        </member>
        <member name="P:PL.Base.QueryPage.DefaultSelect">
            <summary>
            是否允许默认选中列表数据
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.WebGrid">
            <summary>
            数据表格控件
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.SearchButton">
            <summary>
            查询按钮
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.LblSum">
            <summary>
            汇总信息
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.ChooseConfig">
            <summary>
            放大镜配置
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.OnLoad(System.EventArgs)">
            <summary>
            页面加载
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.Base.QueryPage.QuerySetting(PL.Base.EciRequest)">
            <summary>
            查询设置
            </summary>
        </member>
        <member name="P:PL.Base.QueryPage.RememberSeed">
            <summary>
            自动记忆种子
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.Register">
            <summary>
            注册控件，[此方法已经过时，不需要显示调用]
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.Refresh">
            <summary>
            刷新列表数据，不改变当前页
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.Search(System.Int32)">
            <summary>
            查询
            </summary>
            <param name="type">1.正常查询  2.记忆查询(没有记忆不查)  3.记忆查询(没有记忆也查询)</param>
        </member>
        <member name="M:PL.Base.QueryPage.Search">
            <summary>
            执行查询
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.SearchIndex(System.Int32)">
            <summary>
            查询
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:PL.Base.QueryPage.BindData">
            <summary>
            绑定数据
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.ExportSetting(PL.Base.EciRequest)">
            <summary>
            导出设置
            </summary>
            <param name="request"></param>
        </member>
        <member name="F:PL.Base.QueryPage.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="F:PL.Base.QueryPage.IsOverMaxCount">
            <summary>
            是否超过最大数量
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.GetExportDataSource">
            <summary>
            获取导出Excel的数据源
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.GetExportTask">
            <summary>
            获取导出Excel的任务
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.BeforeBind(System.Data.DataTable,PL.Base.EciResponse)">
            <summary>
            绑定之前事件
            </summary>
            <param name="table">数据</param>
            <param name="response">响应</param>
        </member>
        <member name="M:PL.Base.QueryPage.AfterBind(System.Data.DataTable,PL.Base.EciResponse)">
            <summary>
            绑定之后事件
            </summary>
        </member>
        <member name="M:PL.Base.QueryPage.ChooseCheck(PL.Base.EciResponse)">
            <summary>
            放大镜检查
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:PL.Base.QueryPage.ToExcel">
            <summary>
            导出Excel
            </summary>
        </member>
        <member name="T:PL.Base.ActionHandler">
            <summary>
            ActionHandler
            </summary>
        </member>
        <member name="M:PL.Base.ActionHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            处理请求
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.ActionHandler.FileDownload(PL.Base.EciResponse,System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="ajax"></param>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.ActionHandler.FileShowImage(System.Web.UI.Page)">
            <summary>
            
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:PL.Base.ActionHandler.FileUpload(PL.Base.EciResponse,System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="ajax"></param>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.ActionHandler.GetAllowFileType(System.String)">
            <summary>
            
            </summary>
            <param name="bizType"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ActionHandler.EChooseExGetData(PL.Base.EciResponse)">
            <summary>
            
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="T:PL.Base.App">
            <summary>
            App
            </summary>
        </member>
        <member name="F:PL.Base.App.WebApp">
            <summary>
            应用接口
            </summary>
        </member>
        <member name="F:PL.Base.App.CatchException">
             <summary>
            应用处理异常
             </summary>
        </member>
        <member name="F:PL.Base.App.AppInfos">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.App.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="T:PL.Base.BaseUserControl">
            <summary>
            用户控件
            </summary>
        </member>
        <member name="F:PL.Base.BaseUserControl.cmn">
            <summary>
            SQL处理器
            </summary>
        </member>
        <member name="F:PL.Base.BaseUserControl.ListEControls">
            <summary>
            ECI控件
            </summary>
        </member>
        <member name="F:PL.Base.BaseUserControl.UserInfo">
            <summary>
            登录用户信息
            </summary>
        </member>
        <member name="M:PL.Base.BaseUserControl.Bind(PL.Base.EntityBase)">
            <summary>
            绑定
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PL.Base.BaseUserControl.Bind(PL.Base.EntityBase,System.String)">
            <summary>
            绑定
            </summary>
            <param name="entity"></param>
            <param name="G"></param>
        </member>
        <member name="M:PL.Base.BaseUserControl.Bind(System.Data.DataTable)">
            <summary>
            绑定
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PL.Base.BaseUserControl.Bind(System.Data.DataTable,System.String)">
            <summary>
            绑定
            </summary>
            <param name="data"></param>
            <param name="G"></param>
        </member>
        <member name="M:PL.Base.BaseUserControl.GetEntityFromUI">
            <summary>
            获取页面绑定的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BaseUserControl.GetEntityFromUI(System.String)">
            <summary>
            获取页面绑定的值
            </summary>
            <param name="G"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BaseUserControl.GetBindingModel">
            <summary>
            获取页面上绑定的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BaseUserControl.GetBindingModel(System.String)">
            <summary>
            获取页面上绑定的数据
            </summary>
            <param name="groupCode"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BaseUserControl.Execute(System.String,System.Object)">
            <summary>
            执行指定的指令
            </summary>
            <param name="type"></param>
            <param name="data"></param>
        </member>
        <member name="T:PL.Base.BasePage">
            <summary>
            基类页面
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.GetUIDataCheckNull">
            <summary>
            获取UI数据的时候检查是否必填
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.accessId">
            <summary>
            访问ID
            </summary>
        </member>
        <member name="P:PL.Base.BasePage.HelpMappingKey">
            <summary>
            帮助Mapping名称
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.SystemCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.ETipCount">
            <summary>
            ETip提示控件数量
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.HasLog">
            <summary>
            是否已经记录了日志
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.ShowErrorPage">
            <summary>
            启用异常页面
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.ThrowException">
            <summary>
            抛出异常
            </summary>
        </member>
        <member name="P:PL.Base.BasePage.UserActionConfirmed">
            <summary>
            用户操作确定
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.ValidateStatus">
            <summary>
            验证码验证状态
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.cmn">
            <summary>
            SQLQ处理
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.ListEControls">
            <summary>
            ECI控件集合
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.PageElement">
            <summary>
            页面控件
            </summary>
        </member>
        <member name="F:PL.Base.BasePage.UserInfo">
            <summary>
            登录用户信息
            </summary>
        </member>
        <member name="M:PL.Base.BasePage.SetReadOnly">
            <summary>
            设置页面IE控件为只读
            </summary>
        </member>
        <member name="M:PL.Base.BasePage.ClearNotNull">
             <summary>
            取消所有控件的NotNull属性
             </summary>
        </member>
        <member name="M:PL.Base.BasePage.CheckLogin">
            <summary>
            是否需要检测登录信息,如果返回true则需要检查
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BasePage.EViewState(System.String)">
            <summary>
            获取ViewState，如果没有此ViewState则返回String.Empty
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BasePage.EViewState(System.String,System.String)">
            <summary>
            存储ViewState
            </summary>
            <param name="key">Key</param>
            <param name="value">Value</param>
        </member>
        <member name="M:PL.Base.BasePage.CheckIdentity">
            <summary>
            会话变更检测
            </summary>
        </member>
        <member name="M:PL.Base.BasePage.OnLoad(System.EventArgs)">
            <summary>
            页面加载
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.Base.BasePage.OnUnload(System.EventArgs)">
            <summary>
            页面卸载
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.Base.BasePage.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)">
            <summary>
            事件触发
            </summary>
            <param name="sourceControl"></param>
            <param name="eventArgument"></param>
        </member>
        <member name="M:PL.Base.BasePage.CreateExecuteErrorInfo(System.Exception)">
            <summary>
            创建异常查看隐藏域
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.BasePage.Bind(PL.Base.EntityBase)">
            <summary>
            数据绑定
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PL.Base.BasePage.Bind(PL.Base.EntityBase,System.String)">
            <summary>
            数据绑定
            </summary>
            <param name="entity"></param>
            <param name="groupCode"></param>
        </member>
        <member name="M:PL.Base.BasePage.Bind(System.Data.DataTable)">
            <summary>
            数据绑定
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PL.Base.BasePage.Bind(System.Data.DataTable,System.String)">
            <summary>
            数据绑定
            </summary>
            <param name="data"></param>
            <param name="groupCode"></param>
        </member>
        <member name="M:PL.Base.BasePage.BindByField(System.String,System.String)">
            <summary>
            给控件赋值
            </summary>
            <param name="dataField"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.BasePage.Execute(System.String,System.Object)">
            <summary>
            执行指定的指令
            </summary>
            <param name="type"></param>
            <param name="data"></param>
        </member>
        <member name="M:PL.Base.BasePage.GetBindingModel">
            <summary>
            获取页面上绑定的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BasePage.GetBindingModel(System.String)">
            <summary>
            获取页面上绑定的数据
            </summary>
            <param name="groupCode"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BasePage.GetEntityFromUI">
            <summary>
            获取页面上绑定的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BasePage.GetEntityFromUI(System.String)">
            <summary>
            获取页面上绑定的数据
            </summary>
            <param name="groupCode"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.IEControl">
            <summary>
            ECI控件接口
            </summary>
        </member>
        <member name="P:PL.Base.IEControl.Alias">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:PL.Base.IEControl.DataField">
            <summary>
            绑定数据项目
            </summary>
        </member>
        <member name="P:PL.Base.IEControl.Query">
            <summary>
            查询设置
            </summary>
        </member>
        <member name="P:PL.Base.IEControl.NotSave">
            <summary>
            不保存
            </summary>
        </member>
        <member name="P:PL.Base.IEControl.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:PL.Base.IEControl.NotNull">
            <summary>
            不可以为空
            </summary>
        </member>
        <member name="P:PL.Base.IEControl.G">
            <summary>
            分组
            </summary>
        </member>
        <member name="M:PL.Base.IEControl.ContextToUI(PL.Base.EntityBase)">
            <summary>
            上下文数据绑定到控件
            </summary>
        </member>
        <member name="M:PL.Base.IEControl.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.IEControl.UIToContext(System.Object)">
            <summary>
            控件数据赋值到上下文
            </summary>
            <param name="dataContext"></param>
        </member>
        <member name="T:PL.Base.FunctionTree">
            <summary>
            功能树
            </summary>
        </member>
        <member name="F:PL.Base.FunctionTree.Data">
            <summary>
            功能
            </summary>
        </member>
        <member name="F:PL.Base.FunctionTree.Children">
            <summary>
            子功能
            </summary>
        </member>
        <member name="T:PL.Base.ISSOService">
            <summary>
            权限接口抽象类
            </summary>
        </member>
        <member name="M:PL.Base.ISSOService.Login(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            登录
            </summary>
            <param name="loginNo"></param>
            <param name="password"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.LoginByToken(System.String,PL.Base.EntityBase)">
            <summary>
            Token登录
            </summary>
            <param name="strToken"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.ChangeCompanyByCode(System.String)">
            <summary>
            切换登录公司
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:PL.Base.ISSOService.GetMenu(System.String,PL.Base.EntityBase)">
            <summary>
            获取功能菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.GetPrivilegeChildrenMenu(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取下级权限
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.GetChildrenFunction(System.String,PL.Base.EntityBase)">
            <summary>
            获取下级功能
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.GetApps(System.String,PL.Base.EntityBase)">
            <summary>
            获取应用
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.GetUserOrgApps(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取用户组织下的应用
            </summary>
            <param name="orgId"></param>
            <param name="appRootId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.GetPrivilegeApps(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取有权限的应用
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.AskForLoginTokenByUserID(System.String)">
            <summary>
            获取用户的Token
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.HasRight(System.String)">
            <summary>
            判断是否有权限
            </summary>
            <param name="code">权限编码</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.SessionSetState(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.ISSOService.SessionGetState(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.SessionRemoveState(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.ISSOService.SessionRemoveAllState(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
        </member>
        <member name="M:PL.Base.ISSOService.GetNodeById(System.String)">
            <summary>
            
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.GetPrivilege(System.String)">
            <summary>
            获取权限
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.GetSsoUrl">
            <summary>
            获取权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ISSOService.WriteLoginHistory(ECI.Speed.Web.SsoLoginHistory)">
            <summary>
            记录登录历史记录
            </summary>
        </member>
        <member name="M:PL.Base.ISSOService.GetUserByName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.SSOProvider">
            <summary>
            权限提供者
            </summary>
        </member>
        <member name="F:PL.Base.SSOProvider.NEW_USER_MUST_CHANGE_PASSWORD">
            <summary>
            新用户要求必须重新设置密码后才能登陆系统
            </summary>
        </member>
        <member name="F:PL.Base.SSOProvider.INVALID_BY_EFFECT_DATE">
            <summary>
            密码超过设定的天数，要求必须重新设置密码
            </summary>
        </member>
        <member name="F:PL.Base.SSOProvider.PASSWORD_STATUS">
            <summary>
            密码状态
            </summary>
        </member>
        <member name="F:PL.Base.SSOProvider.PASSWORD_STRENGTH">
            <summary>
            密码强度
            </summary>
        </member>
        <member name="M:PL.Base.SSOProvider.WriteLog(System.Exception)">
            <summary>
            已经过时
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.SSOProvider.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:PL.Base.SSOProvider.Login(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            系统登录
            </summary>
            <param name="loginNo"></param>
            <param name="password"></param>
            <param name="options"></param>
        </member>
        <member name="M:PL.Base.SSOProvider.LoginByToken(System.String,PL.Base.EntityBase)">
            <summary>
            系统登录（根据Token）
            </summary>
            <param name="strToken"></param>
            <param name="options"></param>
        </member>
        <member name="M:PL.Base.SSOProvider.InitSystemApp">
            <summary>
            初始化系统App相关配置信息
            </summary>
        </member>
        <member name="M:PL.Base.SSOProvider.Logout">
            <summary>
            登出
            </summary>
        </member>
        <member name="M:PL.Base.SSOProvider.LoginCompleted(PL.Base.EntityBase)">
            <summary>
            登录完成
            </summary>
        </member>
        <member name="M:PL.Base.SSOProvider.LoginCompletedAfterSelectCompany">
            <summary>
            登录成功[选择完公司]
            </summary>
        </member>
        <member name="M:PL.Base.SSOProvider.GetMenu(System.String,PL.Base.EntityBase)">
            <summary>
            获取功能菜单
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetUserApps">
            <summary>
            获取用户App
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetAppRootId">
            <summary>
            获取AppRootId[优先取用户Session级，然后取配置]
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetUserTopApps">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetTopModuleByFunctionId(System.String,System.String)">
            <summary>
            获取顶层功能点
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetToolBar(System.String,System.String)">
            <summary>
            获取工具栏
            </summary>
            <param name="userId"></param>
            <param name="toolId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetUserTopAppByFunctionId(System.String,System.String)">
            <summary>
            获取顶级应用列表
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetUserAppByFunctionId(System.String,System.String,System.Boolean)">
            <summary>
            获取用户APP（根据功能点获取子功能点作为APP集合）
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="usePrivilege"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.HasRight(System.String)">
            <summary>
            判断是否有权限
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetLowerFunctionTree(System.String,PL.Base.EntityBase)">
            <summary>
            获取下级菜单树
            </summary>
            <param name="functionId"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetChildrenFunction(System.String,PL.Base.EntityBase)">
            <summary>
            获取下级功能
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetApps(System.String,PL.Base.EntityBase)">
            <summary>
            获取应用
            </summary>
            <param name="functionId"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetUserToken">
            <summary>
            获取用户Token
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetUserOrgApps(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取组织对应的应用
            </summary>
            <param name="orgId">组织ID</param>
            <param name="appRootId"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetUserOrgAppsId(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取组织对应的应用
            </summary>
            <param name="orgId"></param>
            <param name="appRootId"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.ExecutePasswordStrategy(System.String,System.Exception)">
            <summary>
            执行强制修改密码策略
            </summary>
            <param name="loginNo"></param>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.SSOProvider.SaveCurrentSession">
            <summary>
            保存
            </summary>
        </member>
        <member name="M:PL.Base.SSOProvider.InitSessionByToken(System.String)">
            <summary>
            根据Token反向初始化Session
            </summary>
        </member>
        <member name="M:PL.Base.SSOProvider.GetPrivilegeChildrenMenu(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.SessionSetState(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.SSOProvider.SessionGetState(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.SessionRemoveState(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.SSOProvider.SessionRemoveAllState(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
        </member>
        <member name="M:PL.Base.SSOProvider.GetNodeById(System.String)">
            <summary>
            
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetPrivilege(System.String)">
            <summary>
            获取权限
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.GetSsoUrl">
            <summary>
            获取权限平台地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SSOProvider.WriteLoginHistory">
            <summary>
            记录登录历史记录
            </summary>
        </member>
        <member name="T:PL.Base.ClientAction">
            <summary>
            前台页面扩展
            </summary>
        </member>
        <member name="F:PL.Base.ClientAction.cmn">
            <summary>
            SQL处理器
            </summary>
        </member>
        <member name="T:PL.Base.ClientAction.WebExtendHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.ClientAction.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebInitGrid">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebPageLoading">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebPageLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebDeleting">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebDeleted">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebSaving">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebSaved">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebAdded">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebCopyed">
            <summary>
            
            </summary>
        </member>
        <member name="E:PL.Base.ClientAction.OnWebDataBinded">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebInitGrid">
            <summary>
            页面初始化列表控件
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebPageLoading">
            <summary>
            画面加载前
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebPageLoaded">
            <summary>
            画面加载完毕
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebDeleting">
            <summary>
            删除前
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebDeleted">
            <summary>
            删除后
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebSaving">
            <summary>
            保存之前
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebSaved">
            <summary>
            保存之后
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebAdded">
            <summary>
            页面点击新增之后
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebCopyed">
            <summary>
            复制之后
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.WebDataBinded">
            <summary>
            列表画面数据绑定后
            </summary>
        </member>
        <member name="M:PL.Base.ClientAction.Execute(PL.Base.EciRequest)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ClientAction.ExecuteAjax(System.String,PL.Base.EciResponse)">
            <summary>
            
            </summary>
            <param name="serviceId"></param>
            <param name="ajax"></param>
        </member>
        <member name="T:PL.Base.ClientActionEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.ClientActionEmpty.GetInstance">
            <summary>
            获取实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:PL.Base.ClientActionFactory">
            <summary>
            前台页面扩展工厂
            </summary>
        </member>
        <member name="M:PL.Base.ClientActionFactory.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.UIClientActionFactory">
            <summary>
            UI页面扩展工厂
            </summary>
        </member>
        <member name="M:PL.Base.UIClientActionFactory.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="pageCode"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.PTService">
            <summary>
            平台服务清单
            </summary>
        </member>
        <member name="F:PL.Base.PTService.QryEDropDownList">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.PTService.QryEciTableFunctionByGuid">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.PTService.DynamicDelete">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.PTService.DynamicQuery">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.PTService.DynamicInstance">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.PTService.DynamicSave">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.PTService.DynamicBatchEdit">
            <summary>
            配置页面批量修改保存
            </summary>
        </member>
        <member name="F:PL.Base.PTService.ExcelImportExecute">
            <summary>
            Excel导入:执行
            </summary>
        </member>
        <member name="F:PL.Base.PTService.ExcelImportSearch">
            <summary>
            Excel导入：查询
            </summary>
        </member>
        <member name="F:PL.Base.PTService.QueryBySQL">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:PL.Base.PTService.EciMyQueryDelete">
            <summary>
            我的查询-删除
            </summary>
        </member>
        <member name="F:PL.Base.PTService.EciMyQueryLoad">
            <summary>
            我的查询-加载
            </summary>
        </member>
        <member name="F:PL.Base.PTService.EciMyQuerySave">
            <summary>
            我的查询-保存
            </summary>
        </member>
        <member name="F:PL.Base.PTService.EciMyQueryGetMyQuery">
            <summary>
            我的查询-获取我的查询
            </summary>
        </member>
        <member name="T:PL.Base.AspNetAlert">
            <summary>
            Window.alert
            </summary>
        </member>
        <member name="M:PL.Base.AspNetAlert.Show(System.String)">
            <summary>
            显示信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.AspNetAlert.Show(System.Exception)">
            <summary>
            显示信息
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:PL.Base.ClientConvert">
            <summary>
            前台参数转换
            </summary>
        </member>
        <member name="M:PL.Base.ClientConvert.Convert(System.String)">
            <summary>
            参数转换
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.CookieHelper">
            <summary>
            Cookie帮助类
            </summary>
        </member>
        <member name="M:PL.Base.CookieHelper.GetCookie(System.String)">
            <summary>
            获取Cookie值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CookieHelper.SetCookie(System.String,System.String)">
            <summary>
            设置Cookie值
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.CookieHelper.ClearCookie(System.String)">
            <summary>
            清除Cookie值
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:PL.Base.EAlert">
            <summary>
            EAlert (已经过时)
            </summary>
        </member>
        <member name="M:PL.Base.EAlert.Tip(System.String)">
            <summary>
            一般信息提示：在顶端显示、不影响操作
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.EAlert.Tip(System.String,System.Boolean)">
            <summary>
            延迟信息提示：在跳转页面的顶端显示、不影响操作
            </summary>
            <param name="message"></param>
            <param name="delay"></param>
        </member>
        <member name="M:PL.Base.EAlert.Alert(System.String)">
            <summary>
            信息提示
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.EAlert.Alert(System.String,System.Boolean)">
            <summary>
            信息提示
            </summary>
            <param name="message"></param>
            <param name="delay"></param>
        </member>
        <member name="M:PL.Base.EAlert.Show(System.String)">
            <summary>
            信息提示
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.EAlert.Show(System.Exception)">
            <summary>
            异常信息提示
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:PL.Base.ImageUploader">
            <summary>
            图片上传
            </summary>
        </member>
        <member name="M:PL.Base.ImageUploader.Save(System.Web.HttpPostedFile)">
            <summary>
            保存
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ImageUploader.GetThumbnailImage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            创建缩略图
            </summary>
            <param name="srcPath"></param>
            <param name="srcWebPath"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ImageUploader.ThumImage(System.String,System.String,System.Double,System.Double)">
            <summary>
            缩略图
            </summary>
            <param name="srcPath"></param>
            <param name="destPath"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ImageUploader.Upload(System.Web.UI.WebControls.FileUpload,System.Int32,System.Int32)">
            <summary>
            上传
            </summary>
            <param name="uploadFile"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:PL.Base.ImageUploadResult">
            <summary>
            图片上传结果
            </summary>
        </member>
        <member name="P:PL.Base.ImageUploadResult.Path">
            <summary>
            物理绝对路径
            </summary>
        </member>
        <member name="P:PL.Base.ImageUploadResult.WebPath">
            <summary>
            WEB相对路径
            </summary>
        </member>
        <member name="T:PL.Base.ThumbResult">
            <summary>
            缩略图结果
            </summary>
        </member>
        <member name="P:PL.Base.ThumbResult.PCPath">
            <summary>
            物理绝对路径
            </summary>
        </member>
        <member name="P:PL.Base.ThumbResult.WebPath">
            <summary>
            WEB相对路径
            </summary>
        </member>
        <member name="T:PL.Base.NPOIHelper">
            <summary>
            NPOI导入帮助类
            </summary>
        </member>
        <member name="M:PL.Base.NPOIHelper.ExcelToTable(System.IO.Stream)">
            <summary>
            从EXCEL中读取数据到DataTable
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper.ExcelToTable(System.IO.Stream,System.Int32)">
            <summary>
            
            </summary>
            <param name="fs"></param>
            <param name="startColumnIndex">从第几行开始</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper.ExcelToDataSet(System.IO.Stream,PL.Base.NPOIReadOption)">
            <summary>
            从EXCEL中读取数据到DataSet
            </summary>
            <param name="fs"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper.ExcelToTable(System.IO.Stream,PL.Base.NPOIReadOption)">
            <summary>
            从EXCEL中读取数据到DataTable
            </summary>
            <param name="fs"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper.ExcelToTable(System.IO.Stream,PL.Base.NPOIReadOption,System.Int32)">
            <summary>
            从EXCEL中读取数据到DataTable
            </summary>
            <param name="fs"></param>
            <param name="option"></param>
            <param name="startColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper.TableToExcel(System.Data.DataTable)">
            <summary>
            将DataTable数据导出到EXCEL中
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:PL.Base.NPOIHelper.TableToExcel(System.Data.DataTable,System.String)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <param name="file"></param>
        </member>
        <member name="M:PL.Base.NPOIHelper.TableToExcel(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            将DataTable数据导出到EXCEL中
            </summary>
            <param name="dt"></param>
            <param name="fileName"></param>
            <param name="createFile"></param>
        </member>
        <member name="M:PL.Base.NPOIHelper.GetCellValue(NPOI.HSSF.UserModel.HSSFCell,System.Int32,PL.Base.NPOISheetConfig,System.Boolean)">
            <summary>  
            获取单元格类型(xls)  
            </summary>  
            <param name="cell"></param>  
            <param name="columnIndex"></param>  
            <param name="sheetConfig"></param>  
            <param name="trimData"></param>  
            <returns></returns>  
        </member>
        <member name="T:PL.Base.NPOIHelper2007">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.ExcelToTable(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.ExcelToTable(System.IO.Stream,System.Int32)">
            <summary>
            
            </summary>
            <param name="fs"></param>
            <param name="startColumnIndex">从第几行开始</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.ExcelToDataSet(System.IO.Stream,PL.Base.NPOIReadOption)">
            <summary>
            
            </summary>
            <param name="fs"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.ExcelToTable(System.IO.Stream,PL.Base.NPOIReadOption)">
            <summary>
            从EXCEL中读取数据到DataTable
            </summary>
            <param name="fs"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.ExcelToTable(System.IO.Stream,PL.Base.NPOIReadOption,System.Int32)">
            <summary>
            
            </summary>
            <param name="fs"></param>
            <param name="option"></param>
            <param name="startColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.ExcelToTable(NPOI.SS.UserModel.ISheet,PL.Base.NPOISheetConfig,PL.Base.NPOIReadOption,System.Int32)">
            <summary>
            
            </summary>
            <param name="sheet"></param>
            <param name="sheetConfig"></param>
            <param name="option"></param>
            <param name="startColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.TableToExcel(System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.TableToExcel(System.Data.DataTable,System.String)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <param name="file"></param>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.TableToExcel(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <param name="file"></param>
            <param name="createFile"></param>
        </member>
        <member name="M:PL.Base.NPOIHelper2007.GetValueType(NPOI.XSSF.UserModel.XSSFCell)">
            <summary>  
            获取单元格类型(xls)  
            </summary>  
            <param name="cell"></param>  
            <returns></returns>  
        </member>
        <member name="M:PL.Base.NPOIHelper2007.GetCellValue(NPOI.XSSF.UserModel.XSSFCell,System.Int32,PL.Base.NPOISheetConfig,System.Boolean)">
            <summary>  
            获取单元格类型(xls)  
            </summary>  
            <param name="cell"></param>  
            <param name="columnIndex"></param>  
            <param name="sheetConfig"></param>  
            <param name="trimData"></param> 
            <returns></returns>  
        </member>
        <member name="T:PL.Base.PageHelper">
            <summary>
            页面访问帮助
            </summary>
        </member>
        <member name="P:PL.Base.PageHelper.ServerPath">
            <summary>
            注意:后面不含"\"
            </summary>
        </member>
        <member name="M:PL.Base.PageHelper.MapPath(System.String)">
            <summary>
            物理文件地址
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:PL.Base.PageHelper.PageRequest">
            <summary>
            页面 Request
            </summary>
        </member>
        <member name="P:PL.Base.PageHelper.PageResponse">
            <summary>
            页面 Response
            </summary>
        </member>
        <member name="P:PL.Base.PageHelper.PageSession">
            <summary>
            页面Session，包括Handler 的Session
            </summary>
        </member>
        <member name="P:PL.Base.PageHelper.AllRequestParam">
            <summary>
            返回页面所有请求的参数  返回格式   
            </summary>
        </member>
        <member name="P:PL.Base.PageHelper.IsPage">
            <summary>
            是否是页面
            </summary>
        </member>
        <member name="P:PL.Base.PageHelper.Page">
            <summary>
            页面
            </summary>
        </member>
        <member name="P:PL.Base.PageHelper.IsBasePage">
            <summary>
            是否是BasePage页面
            </summary>
        </member>
        <member name="P:PL.Base.PageHelper.BasePage">
            <summary>
            BasePage
            </summary>
        </member>
        <member name="M:PL.Base.PageHelper.Request(System.String)">
            <summary>
            获取Url请求参数，如果为Null返回string.Empty
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.Request(System.String,System.Boolean)">
            <summary>
            获取Url请求参数，如果为Null返回string.Empty
            </summary>
            <param name="key"></param>
            <param name="decode">是否解码</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.LoadSearchCondition(System.String)">
            <summary>
            加载查询条件
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.SaveSearchCondition(System.Web.UI.Control,System.String)">
            <summary>
            保存查询条件
            </summary>
            <param name="searchTable"></param>
            <param name="pageId"></param>
        </member>
        <member name="M:PL.Base.PageHelper.CreateHidden(System.String,System.String)">
            <summary>
            在页面中创建隐藏项
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.PageHelper.CreateHidden(System.String)">
            <summary>
            在页面中创建隐藏项 值为空
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:PL.Base.PageHelper.RegisterScript(System.String)">
            <summary>
            注册客户端脚本
            </summary>
            <param name="script"></param>
        </member>
        <member name="M:PL.Base.PageHelper.RegisterScriptWindowOnload(System.String)">
            <summary>
            注册客户端脚本 window.onload后执行
            </summary>
            <param name="script"></param>
        </member>
        <member name="M:PL.Base.PageHelper.RegisterScriptTimeout(System.String,System.Int32)">
            <summary>
            注册Timeout脚本
            </summary>
            <param name="script"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:PL.Base.PageHelper.GetUserHostName">
            <summary>
            获取访问客户端电脑名称
            </summary>
            <returns>获取访问客户端电脑名称</returns>
        </member>
        <member name="M:PL.Base.PageHelper.GetIP">
            <summary>
            获取访问客户端的IP地址
            </summary>
            <returns>访问客户端的IP地址</returns>
        </member>
        <member name="M:PL.Base.PageHelper.GetOs">
            <summary>
            获取访问客户端的操作系统
            </summary>
            <returns>访问客户端的操作系统</returns>
        </member>
        <member name="M:PL.Base.PageHelper.GetExplore">
            <summary>
            访问客户端的浏览器
            </summary>
            <returns>访问客户端的浏览器</returns>
        </member>
        <member name="M:PL.Base.PageHelper.IsMobileDevice">
            <summary>
            判断客户端是否是手机
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.IsMobileDevice(System.String)">
            <summary>
            是否是移动设备
            </summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.GetUploadPath(System.String)">
            <summary>
            获取上传目录
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:PL.Base.PageHelper.CurrentPageIsInRootFolder">
            <summary>
            当前页面是否是网站根目录
            </summary>
        </member>
        <member name="M:PL.Base.PageHelper.AccessError(System.String)">
            <summary>
            页面访问错误，页面跳转到异常提示页面
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.PageHelper.AccessError(System.Exception)">
            <summary>
            页面访问异常
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.PageHelper.EntryError">
            <summary>
            访问入口错误
            </summary>
        </member>
        <member name="M:PL.Base.PageHelper.GetLoginUrl">
            <summary>
            获取登录页地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.GetSession(System.String)">
            <summary>
            获取Session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.GetVersion">
            <summary>
            获取框架版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.SaveSession(System.String,System.String)">
            <summary>
            保存Session
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.PageHelper.SubmitVersion">
            <summary>
            提报版本
            </summary>
        </member>
        <member name="M:PL.Base.PageHelper.RedirectFromRoot(System.String)">
            <summary>
            从网站根目录跳转
            </summary>
            <param name="url">Url不要以/开头</param>
        </member>
        <member name="F:PL.Base.PageHelper.ListPageAccessIdCache">
            <summary>
            访问ID 历史记录
            </summary>
        </member>
        <member name="M:PL.Base.PageHelper.CheckPageAccessToken">
            <summary>
            检查页面访问令牌：防止网络爬虫
            </summary>
        </member>
        <member name="M:PL.Base.PageHelper.GetDataToken(System.String)">
            <summary>
            生成数据Token
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.CheckDataToken(System.String)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:PL.Base.PageHelper.GetTaskCenterUrl">
            <summary>
            获取任务中心地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.GetUserByToken(System.String)">
            <summary>
            获取用户
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:PL.Base.PageHelper.GetWebApplicationUrl">
            <summary>
            获取web应用地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PageHelper.CheckToken(System.String)">
            <summary>
            验证Token
            </summary>
            <param name="token"></param>
        </member>
        <member name="T:PL.Base.PathInfo">
             <summary>
            PathInfo
             </summary>
        </member>
        <member name="F:PL.Base.PathInfo.PhysicalPath">
            <summary>
            物理路径
            </summary>
        </member>
        <member name="F:PL.Base.PathInfo.WebPath">
            <summary>
            WEB路径
            </summary>
        </member>
        <member name="T:PL.Base.SessionInfo">
            <summary>
            功能栏信息
            </summary>
        </member>
        <member name="F:PL.Base.SessionInfo.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="F:PL.Base.SessionInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:PL.Base.SessionInfo.SOA">
            <summary>
            是否传递到后台
            </summary>
        </member>
        <member name="T:PL.Base.SessionManager">
            <summary>
            扩展Session管理
            </summary>
        </member>
        <member name="F:PL.Base.SessionManager.Items">
            <summary>
            用户扩展Session信息
            </summary>
        </member>
        <member name="M:PL.Base.SessionManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="T:PL.Base.EciSession">
            <summary>
            用户会话状态信息
            </summary>
        </member>
        <member name="P:PL.Base.EciSession.UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:PL.Base.ISession">
            <summary>
            Session接口
            </summary>
        </member>
        <member name="P:PL.Base.ISession.Platform">
            <summary>
            平台ID
            </summary>
        </member>
        <member name="P:PL.Base.ISession.Identity">
            <summary>
            用户登录唯一身份ID（系统使用,业务系统不可以使用)
            </summary>
        </member>
        <member name="P:PL.Base.ISession.Token">
            <summary>
            用户令牌
            </summary>
        </member>
        <member name="P:PL.Base.ISession.Mobile">
            <summary>
            手机
            </summary>
        </member>
        <member name="P:PL.Base.ISession.Email">
            <summary>
            EMail
            </summary>
        </member>
        <member name="P:PL.Base.ISession.EmployeeId">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:PL.Base.ISession.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:PL.Base.ISession.UserType">
            <summary>
            用户类型 1-系统管理员，2-机构管理员  0-普通用户
            </summary>
        </member>
        <member name="P:PL.Base.ISession.LoginNo">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:PL.Base.ISession.UserName">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="P:PL.Base.ISession.DeptId">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:PL.Base.ISession.DeptCode">
            <summary>
            部门代码
            </summary>
        </member>
        <member name="P:PL.Base.ISession.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:PL.Base.ISession.CompanyId">
            <summary>
            公司代码
            </summary>
        </member>
        <member name="P:PL.Base.ISession.CompanyCode">
            <summary>
            公司代码
            </summary>
        </member>
        <member name="P:PL.Base.ISession.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:PL.Base.ISession.CustomCode">
            <summary>
            关区代码
            </summary>
        </member>
        <member name="P:PL.Base.ISession.CustomName">
            <summary>
            关区名称
            </summary>
        </member>
        <member name="P:PL.Base.ISession.OrgCode">
            <summary>
            组织机构代码
            </summary>
        </member>
        <member name="P:PL.Base.ISession.CiqCode">
            <summary>
            国检代码
            </summary>
        </member>
        <member name="P:PL.Base.ISession.TyCode">
            <summary>
            统一信用编码
            </summary>
        </member>
        <member name="P:PL.Base.ISession.GroupCode">
            <summary>
            集团编码
            </summary>
        </member>
        <member name="P:PL.Base.ISession.GroupName">
            <summary>
            集团名称
            </summary>
        </member>
        <member name="P:PL.Base.ISession.IsAgent">
            <summary>
            是否是代理
            </summary>
        </member>
        <member name="P:PL.Base.ISession.AgentType">
            <summary>
            代理类型（业务定义）
            </summary>
        </member>
        <member name="P:PL.Base.ISession.Data">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.Platform">
            <summary>
            平台ID
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.Identity">
            <summary>
            用户登录唯一身份ID（系统使用,业务系统不可以使用)
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.Token">
            <summary>
            用户Token
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.AgentType">
            <summary>
            代理类型
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.IsAgent">
            <summary>
            代理类型
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.Mobile">
            <summary>
            用户手机
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.Email">
            <summary>
            用户手机
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.EmployeeId">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.UserType">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.LoginNo">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.UserName">
            <summary>
            用户真实姓名
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.DeptId">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.DeptCode">
            <summary>
            部门代码
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.CompanyId">
            <summary>
            公司ID
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.CompanyCode">
            <summary>
            公司代码
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.GroupCode">
            <summary>
            公司代码
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.GroupName">
            <summary>
            集团名称
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.CustomCode">
            <summary>
            关区代码
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.CustomName">
            <summary>
            关区名称
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.CiqCode">
            <summary>
            国检代码
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.OrgCode">
            <summary>
            组织机构代码
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.TyCode">
            <summary>
            统一代码
            </summary>
        </member>
        <member name="P:PL.Base.WebSession.Data">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="T:PL.Base.WinSession">
            <summary>
            WinSession
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.Platform">
            <summary>
            平台ID
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.Identity">
            <summary>
            用户登录唯一身份ID（系统使用,业务系统不可以使用)
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.IsAgent">
            <summary>
            是否是代理
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.AgentType">
            <summary>
            代理类型
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.Token">
            <summary>
            用户Token
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.UserType">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.Mobile">
            <summary>
            手机
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.Email">
            <summary>
            手机
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.EmployeeId">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.LoginNo">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.UserName">
            <summary>
            用户真实姓名
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.DeptId">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.DeptCode">
            <summary>
            部门代码
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.CompanyId">
            <summary>
            公司ID
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.CompanyCode">
            <summary>
            公司代码
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.GroupCode">
            <summary>
            集团代码
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.GroupName">
            <summary>
            集团名称
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.CustomCode">
            <summary>
            关区代码
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.CustomName">
            <summary>
            关区名称
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.CiqCode">
            <summary>
            国检代码
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.OrgCode">
            <summary>
            组织机构代码
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.TyCode">
            <summary>
            统一代码
            </summary>
        </member>
        <member name="P:PL.Base.WinSession.Data">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="T:PL.Base.ISessionService">
            <summary>
            会话服务
            </summary>
        </member>
        <member name="M:PL.Base.ISessionService.Set(System.String,System.String,System.String,System.String)">
            <summary>
            新增
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.ISessionService.Get(System.String,System.String,System.String)">
            <summary>
            获取
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.ISessionService.Remove(System.String,System.String,System.String)">
            <summary>
            移除
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.ISessionService.RemoveAll(System.String,System.String)">
            <summary>
            移除
            </summary>
            <param name = "token" ></param >
            <param name="appId"></param>
        </member>
        <member name="T:PL.Base.DefaultSessionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.DefaultSessionService.Set(System.String,System.String,System.String,System.String)">
            <summary>
            保存会话
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.DefaultSessionService.Get(System.String,System.String,System.String)">
            <summary>
            获取会话
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DefaultSessionService.Remove(System.String,System.String,System.String)">
            <summary>
            移除会话
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.DefaultSessionService.RemoveAll(System.String,System.String)">
            <summary>
            移除会话
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
        </member>
        <member name="T:PL.Base.SessionService">
            <summary>
            Session服务
            </summary>
        </member>
        <member name="F:PL.Base.SessionService.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="T:PL.Base.FunctionBarInfo">
            <summary>
            功能栏信息
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarInfo.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarInfo.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarInfo.Action">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarInfo.Url">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarInfo.IsExtend">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.FunctionBarInfo.IsShow">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="T:PL.Base.ToolBarInfo">
            <summary>
            工具
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.LangCode">
            <summary>
            语言代码
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.Url">
            <summary>
            地址
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.Action">
            <summary>
            动作
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.Tip">
            <summary>
            提示
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.ClassName">
            <summary>
            样式
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.AppCode">
            <summary>
            应用
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="F:PL.Base.ToolBarInfo.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="T:PL.Base.UIErrorManager">
            <summary>
            异常信息管理
            </summary>
        </member>
        <member name="M:PL.Base.UIErrorManager.Put(System.String)">
            <summary>
            加入
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.UIErrorManager.Put(System.Exception)">
            <summary>
            加入
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.UIErrorManager.Pop(System.String)">
            <summary>
            取出异常数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.UIErrorInfo">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="F:PL.Base.UIErrorInfo.ErrorUrl">
            <summary>
            发生错误的页面地址
            </summary>
        </member>
        <member name="F:PL.Base.UIErrorInfo.IsRoot">
            <summary>
            网站根目录
            </summary>
        </member>
        <member name="F:PL.Base.UIErrorInfo.AccessId">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.UIErrorInfo.Message">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:PL.Base.UIErrorInfo.Exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="T:PL.Base.ValidateCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="F:PL.Base.ValidateCode.sessionName">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.ValidateCode.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.ValidateCode.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="unique"></param>
        </member>
        <member name="M:PL.Base.ValidateCode.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.String,System.Drawing.Color[],System.String[],System.Int32)">
            <summary>
            验证码
            </summary>
            <param name="unique">索引</param>
            <param name="length">验证码长度(默认3个验证码的长度)</param>
            <param name="fontSize">验证码字体大小(默认40像素)</param>
            <param name="chaos">是否输出燥点(默认不输出)</param>
            <param name="backgroundColor">自定义背景色(默认白色)</param>
            <param name="chaosColor">输出燥点的颜色(默认灰色)</param>
            <param name="codeSerial">自定义随机码字符串序列(使用逗号分隔)</param>
            <param name="colors">自定义随机颜色数组</param>
            <param name="fonts">自定义字体数组</param>
            <param name="padding">边框补(默认1像素)</param>
        </member>
        <member name="M:PL.Base.ValidateCode.ExecuteValidate(System.String)">
            <summary>
            执行验证
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:PL.Base.ValidateCode.IsValidateCodeTrue(System.String)">
            <summary>
            验证是否正确
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ValidateCode.IsValidateCodeTrue(System.String,System.String)">
            <summary>
            验证是否正确
            </summary>
            <param name="code"></param>
            <param name="unique"></param>
            <returns></returns>
        </member>
        <member name="P:PL.Base.ValidateCode.Length">
            <summary>
            验证码长度(默认3个验证码的长度)
            </summary>
        </member>
        <member name="P:PL.Base.ValidateCode.FontSize">
            <summary>
            验证码字体大小(为了显示扭曲效果，默认40像素，可以自行修改)
            </summary>
        </member>
        <member name="P:PL.Base.ValidateCode.Padding">
            <summary>
            边框补(默认2像素)
            </summary>
        </member>
        <member name="P:PL.Base.ValidateCode.Chaos">
            <summary>
            是否输出燥点(默认输出)
            </summary>
        </member>
        <member name="P:PL.Base.ValidateCode.ChaosColor">
            <summary>
            输出燥点的颜色(默认LightGray)
            </summary>
        </member>
        <member name="P:PL.Base.ValidateCode.BackgroundColor">
            <summary>
            自定义背景色(默认白色)
            </summary>
        </member>
        <member name="P:PL.Base.ValidateCode.Colors">
            <summary>
            自定义随机颜色数组
            </summary>
        </member>
        <member name="P:PL.Base.ValidateCode.Fonts">
            <summary>
            自定义字体数组
            </summary>
        </member>
        <member name="P:PL.Base.ValidateCode.CodeSerial">
            <summary>
            自定义随机码字符串序列(使用逗号分隔)
            </summary>
        </member>
        <member name="M:PL.Base.ValidateCode.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片（Edit By 51aspx.com）
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="dMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ValidateCode.CreateImageOnPage(System.Web.HttpContext)">
            <summary>
             产生随机验证码，并将创建好的图片输出到页面
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.ValidateCode.CreateVerifyCode(System.Int32)">
            <summary>
            生成随机字符码
            </summary>
            <param name="codeLen"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ValidateCode.CreateVerifyCode">
            <summary>
            生成随机字符码
            </summary>
            <returns></returns>
        </member>
        <member name="T:PL.Base.WebSecurity">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.WebSecurity.CheckXSS">
            <summary>
            XSS攻击检测
            </summary>
        </member>
        <member name="T:PL.Base.ZTree">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.ZTree.CreateRootNode(System.Data.DataTable,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="nodeName"></param>
        </member>
        <member name="M:PL.Base.ZTree.CreateZTree(System.String,System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ZTree.CreateOneLevelTree(System.Data.DataTable)">
            <summary>
            创建ZTree Json
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciDocxWord">
            <summary>
            Docx导出Word
            </summary>
        </member>
        <member name="P:PL.Base.EciDocxWord.TemplateFile">
            <summary>
            模板文件
            </summary>
        </member>
        <member name="P:PL.Base.EciDocxWord.TargetFileName">
            <summary>
            目标文件名,不传值显示当前日期名称
            </summary>
        </member>
        <member name="P:PL.Base.EciDocxWord.DataSource">
            <summary>
            数据源 dataHead.TableName = "HEAD"; 主表名
            </summary>
        </member>
        <member name="P:PL.Base.EciDocxWord.ListDetail">
            <summary>
            明细处理配置
            </summary>
        </member>
        <member name="M:PL.Base.EciDocxWord.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:PL.Base.EciDocxWord.tableName">
            <summary>
            主表名称
            </summary>
        </member>
        <member name="M:PL.Base.EciDocxWord.Execute">
            <summary>
            执行导出
            </summary>
        </member>
        <member name="M:PL.Base.EciDocxWord.DealHead(Novacode.DocX)">
            <summary>
            处理主表数据
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:PL.Base.EciDocxWord.DealDetail(Novacode.DocX)">
            <summary>
            处理从表数据
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:PL.Base.EciDocxWord.ReplaceKey(Novacode.Paragraph,System.Data.DataTable)">
            <summary>
            替换标记
            </summary>
            <param name="para"></param>
            <param name="dt"></param>
        </member>
        <member name="M:PL.Base.EciDocxWord.Check">
            <summary>
            检测数据源是提供
            </summary>
        </member>
        <member name="T:PL.Server.UIDriver.DynamicSQL">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Server.UIDriver.DynamicSQL.cmn">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.DynamicSQL.InitEditCreate(PL.Server.Core.Entity.ECI_TABLE)">
            <summary>
            初始化
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:PL.Server.UIDriver.DynamicSQL.InitQueryCreate(PL.Server.Core.Entity.ECI_TABLE)">
            <summary>
            初始化
            </summary>
            <param name="table"></param>
        </member>
        <member name="T:PL.Server.UIDriver.EditSQL">
            <summary>
            编辑页面SQL
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.EditSQL.Get(PL.Base.EciContext,PL.Server.Core.Entity.ECI_TABLE,System.String,System.String)">
            <summary>
            获取SQL
            </summary>
            <param name="context"></param>
            <param name="table"></param>
            <param name="key"></param>
            <param name="editTableName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.UIDriver.EditSQLBuilder.EditCreateFactory.GetEditType(PL.Server.Core.Entity.ECI_TABLE_ELEMENT)">
            <summary>
            要求能够存储起来 以便后用
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.UIDriver.EditSQLBuilder.EditCreate.DataChooseEdit.Convert(System.String,System.String)">
            <summary>
            转换
            </summary>
            <param name="input"></param>
            <param name="paramConfig"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQL">
            <summary>
            查询SQL
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQL.Get(PL.Base.EciContext,PL.Server.Core.Entity.ECI_TABLE,System.String)">
            <summary>
             获取GRID显示的SQL语句
            </summary>
            <param name="context"></param>
            <param name="table"></param>
            <param name="queryTableName"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQLBuilder.QueryCreateFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQLBuilder.QueryCreateFactory.Create(PL.Server.Core.Entity.ECI_TABLE_ELEMENT)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQLBuilder.QueryCreateFactory.GetQueryType(PL.Server.Core.Entity.ECI_TABLE_ELEMENT)">
            <summary>
            要求能够存储起来 以便后用
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.CheckBoxQuery">
            <summary>
            复选框查询项
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.CheckBoxQuery.Build(PL.Server.Core.Entity.ECI_TABLE_ELEMENT)">
            <summary>
            构建查询项
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.DataChooseQuery">
            <summary>
            数据选择查询项
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.DataChooseQuery.Build(PL.Server.Core.Entity.ECI_TABLE_ELEMENT)">
            <summary>
            构建查询项
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.DataChooseQuery.Convert(System.String,System.String)">
            <summary>
            转换
            </summary>
            <param name="input"></param>
            <param name="paramConfig"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.DateQuery">
            <summary>
            日期查询项
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.DateQuery.Build(PL.Server.Core.Entity.ECI_TABLE_ELEMENT)">
            <summary>
            构建查询项
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.DropdownlistQuery">
            <summary>
            下拉框查询项
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.DropdownlistQuery.Build(PL.Server.Core.Entity.ECI_TABLE_ELEMENT)">
            <summary>
            构建查询项
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.DropdownlistConfigQuery">
            <summary>
            下拉框配置查询项
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.DropdownlistConfigQuery.Build(PL.Server.Core.Entity.ECI_TABLE_ELEMENT)">
            <summary>
            构建查询项
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.NormalQuery">
            <summary>
            一般查询
            </summary>
        </member>
        <member name="M:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.NormalQuery.Build(PL.Server.Core.Entity.ECI_TABLE_ELEMENT)">
            <summary>
            构建查询项
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQLBuilder.QueryCreate.ShowConvertQuery">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Server.UIDriver.QuerySQLBuilder.QueryType">
            <summary>
            查询类型
            </summary>
        </member>
        <member name="F:PL.Server.UIDriver.QuerySQLBuilder.QueryType.ShowConvert">
            <summary>
            设置了转换
            </summary>
        </member>
        <member name="F:PL.Server.UIDriver.QuerySQLBuilder.QueryType.DropdownlistConfig">
            <summary>
            下拉框字典配置不为空的情况 采用DECODE方式做代码转换
            </summary>
        </member>
        <member name="F:PL.Server.UIDriver.QuerySQLBuilder.QueryType.Dropdownlist">
            <summary>
            下拉框
            </summary>
        </member>
        <member name="F:PL.Server.UIDriver.QuerySQLBuilder.QueryType.DataChoose">
            <summary>
            字典类型是,CHOOSE
            </summary>
        </member>
        <member name="F:PL.Server.UIDriver.QuerySQLBuilder.QueryType.CheckBox">
            <summary>
            字典类型是CheckBox
            </summary>
        </member>
        <member name="F:PL.Server.UIDriver.QuerySQLBuilder.QueryType.Date">
            <summary>
            数据库类型是日期
            </summary>
        </member>
        <member name="F:PL.Server.UIDriver.QuerySQLBuilder.QueryType.Normal">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:PL.WEB.Base.FunctionDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.WEB.Base.FunctionDataType.NONE">
             <summary>
            未设定
             </summary>
        </member>
        <member name="F:PL.WEB.Base.FunctionDataType.M1">
             <summary>
            所有选中行的MODEL-或者正在编辑的MODEL
             </summary>
        </member>
        <member name="F:PL.WEB.Base.FunctionDataType.M2">
            <summary>
            列表页所有GOD_MODEL数据
            </summary>
        </member>
        <member name="F:PL.WEB.Base.FunctionDataType.K1">
             <summary>
            当前选中所有行的KEY 格式A,B,C,D ……  也可以是UIEdit正在编辑的数据的key 
             </summary>
        </member>
        <member name="F:PL.WEB.Base.FunctionDataType.K2">
             <summary>
            列表页所有KEY
             </summary>
        </member>
        <member name="T:PL.WEB.Base.IUIEdit">
            <summary>
            编辑页面接口
            </summary>
        </member>
        <member name="P:PL.WEB.Base.IUIEdit.PanelHidden">
            <summary>
            隐藏面板
            </summary>
        </member>
        <member name="P:PL.WEB.Base.IUIEdit.WorkArea">
            <summary>
            工作区
            </summary>
        </member>
        <member name="P:PL.WEB.Base.IUIEdit.CommandArea">
            <summary>
            功能区域
            </summary>
        </member>
        <member name="T:PL.WEB.Base.IUIList">
            <summary>
            列表页面接口
            </summary>
        </member>
        <member name="P:PL.WEB.Base.IUIList.CommandArea">
             <summary>
            功能区域
             </summary>
        </member>
        <member name="M:PL.WEB.Base.IUIList.Search">
            <summary>
            刷新数据
            </summary>
        </member>
        <member name="T:PL.WEB.Base.ServiceCommandInfo">
            <summary>
            服务按钮信息
            </summary>
        </member>
        <member name="P:PL.WEB.Base.ServiceCommandInfo.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:PL.WEB.Base.ServiceCommandInfo.ServiceId">
            <summary>
            服务ID
            </summary>
        </member>
        <member name="P:PL.WEB.Base.ServiceCommandInfo.FunctionName">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="P:PL.WEB.Base.ServiceCommandInfo.NOT_EMPTY_FIELD">
            <summary>
            不允许为空字段
            </summary>
        </member>
        <member name="P:PL.WEB.Base.ServiceCommandInfo.CheckKey">
             <summary>
            检查编辑页的KEY值是否存在
             </summary>
        </member>
        <member name="M:PL.WEB.Base.ServiceCommandInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:PL.WEB.UIDriver.BatchEditAreaDriver">
            <summary>
            批量编辑区域驱动
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.BatchEditAreaDriver.CreateUI(System.Web.UI.WebControls.Panel,PL.Base.DynamicUI)">
            <summary>
            创建编辑区域
            </summary>
            <param name="editAreaDiv"></param>
            <param name="dynamicUI"></param>
        </member>
        <member name="T:PL.WEB.UIDriver.CellRowSpanInfo">
            <summary>
            解决配置程序控件ROWSPAN的设置问题
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.CellRowSpanInfo.RowIndex">
            <summary>
            RowIndex
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.CellRowSpanInfo.ColSpan">
             <summary>
            ColSpan 
             </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.CellRowSpanInfo.RowSpan">
            <summary>
            RowSpan
            </summary>
        </member>
        <member name="T:PL.WEB.UIDriver.AreaType">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.AreaType.QueryArea">
            <summary>
            查询页面
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.AreaType.EditArea">
            <summary>
            编辑页面
            </summary>
        </member>
        <member name="T:PL.WEB.UIDriver.DateForQuery">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.DateForQuery.CreateDateForQuery(System.Web.UI.WebControls.TableRow,PL.Server.Core.Entity.ECI_TABLE_ELEMENT,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tableRow"></param>
            <param name="field"></param>
            <param name="cellWidth"></param>
            <param name="lblWidth"></param>
            <param name="editMode"></param>
        </member>
        <member name="T:PL.WEB.UIDriver.EditAreaDriver">
            <summary>
            编辑区域UI驱动
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.EditAreaDriver.CreateUI(System.Web.UI.WebControls.Panel,PL.Base.DynamicUI)">
            <summary>
            创建编辑区域
            </summary>
            <param name="editAreaDiv"></param>
            <param name="UI"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.EditAreaDriver.CreateUITable(System.Web.UI.WebControls.Table,System.Int32,PL.Base.DynamicUI)">
            <summary>
            创建每一个分组
            </summary>
            <param name="editTable"></param>
            <param name="displayCount"></param>
            <param name="dynamicUI"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.EditAreaDriver.GetTableRowColumnCount(System.Web.UI.WebControls.TableRow)">
            <summary>
            获取当前行的列数
            </summary>
            <param name="tableRow"></param>
            <returns></returns>
        </member>
        <member name="M:PL.WEB.UIDriver.EditAreaDriver.FillTableRow(System.Web.UI.WebControls.TableRow,System.Int32,System.Collections.Generic.List{PL.WEB.UIDriver.CellRowSpanInfo})">
            <summary>
            单元格填满整行
            </summary>
            <param name="tableRow"></param>
            <param name="displayCount"></param>
            <param name="spanInfo"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.EditAreaDriver.GetResumeByPreRow(System.Int32,System.Collections.Generic.List{PL.WEB.UIDriver.CellRowSpanInfo})">
            <summary>
            获取已经被消费的行
            </summary>
            <param name="currentRow"></param>
            <param name="spanInfo"></param>
            <returns></returns>
        </member>
        <member name="T:PL.WEB.UIDriver.ListAreaDriver">
            <summary>
            ListAreaDriver
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ListAreaDriver.CreateUI(PL.UI.Controls.EGridView,PL.Server.Core.Entity.ECI_TABLE)">
            <summary>
            创建
            </summary>
            <param name="dataGrid"></param>
            <param name="table"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ListAreaDriver.InitAlignment(PL.Server.Core.Entity.ECI_TABLE_ELEMENT,System.Web.UI.WebControls.DataControlField)">
            <summary>
            设置列对齐方式
            </summary>
            <param name="field"></param>
            <param name="df"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ListAreaDriver.InitWidth(PL.Server.Core.Entity.ECI_TABLE_ELEMENT,System.Web.UI.WebControls.DataControlField)">
            <summary>
            设置列宽度
            </summary>
            <param name="field"></param>
            <param name="df"></param>
        </member>
        <member name="T:PL.WEB.UIDriver.QueryAreaDriver">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.QueryAreaDriver.CreateQueryArea(System.Web.UI.WebControls.Table,System.String,PL.Server.Core.Entity.ECI_TABLE,PL.Base.DynamicUI)">
            <summary>
            创建查询条件区域
            </summary>
            <param name="tbQuery">页面Table</param>
            <param name="pageCode">配置程序代码</param>
            <param name="data">配置程序</param>
            <param name="dynamicUI">控制参数</param>
        </member>
        <member name="M:PL.WEB.UIDriver.QueryAreaDriver.RequestParameter(PL.Server.Core.Entity.ECI_TABLE)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:PL.WEB.UIDriver.QueryAreaDriver.ReturnParameterToPageSession">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.QueryAreaDriver.ReturnParameter(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:PL.WEB.UIDriver.QueryAreaDriverResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.QueryAreaDriverResult.BtnSearch">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.QueryAreaDriverResult.BtnReset">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.WEB.UIDriver.RadionButtonList">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.RadionButtonList.CreateRadionButtonList(System.Web.UI.WebControls.TableRow,PL.Server.Core.Entity.ECI_TABLE_ELEMENT,System.Data.DataRow,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tableRow"></param>
            <param name="field"></param>
            <param name="dataRow"></param>
            <param name="query"></param>
            <param name="cellWidth"></param>
            <param name="type"></param>
            <param name="editMode"></param>
        </member>
        <member name="T:PL.WEB.UIDriver.UITypeFunction">
            <summary>
            页面控件For 查询、
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.UITypeFunction.ForQuery">
            <summary>
            查询页面
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.UITypeFunction.ForEdit">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.WEB.UIDriver.ElementBuilder.ElementParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.TableRow">
            <summary>
            所在的行
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.Field">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.CellWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.areaType">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.UIType">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.Table">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.EciTable">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.TableCell">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.UI">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.IsBatchEdit">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.ElementParameter.RememberStatus">
            <summary>
            查询条件自动记忆功能
            </summary>
        </member>
        <member name="T:PL.WEB.UIDriver.ElementBuilder.IElement">
            <summary>
             动态控件抽象类
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.ElementBuilder.IElement.Field">
            <summary>
            元素
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.ElementBuilder.IElement.Param">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.ElementBuilder.IElement.DynamicUI">
            <summary>
            控件所属的动态UI控件
            </summary>
        </member>
        <member name="F:PL.WEB.UIDriver.ElementBuilder.IElement.TableCell">
            <summary>
            控件所属的单元格
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.IElement.WebControl">
            <summary>
            服务器端控件
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.IElement.IsDateEnd">
            <summary>
            是否是日期结束控件
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.Init(PL.WEB.UIDriver.ElementBuilder.ElementParameter)">
            <summary>
            初始化相关参数
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.CreateContainer">
            <summary>
            创建单元格容器
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.Nullable">
            <summary>
            设置为可以为空
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.NotNull">
            <summary>
            设置为不可以为空
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.InitControlId(System.Web.UI.Control)">
            <summary>
            初始化控件ID
            </summary>
            <param name="control"></param>
        </member>
        <member name="P:PL.WEB.UIDriver.ElementBuilder.IElement.ClientId">
            <summary>
            控件ID
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.InitControlWidth(System.Web.UI.WebControls.WebControl)">
            <summary>
            初始化控件宽度
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.InitDataFieldAndMainAlias(System.Web.UI.WebControls.WebControl)">
            <summary>
            初始化数据绑定和名称
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.InitIgnoreUpperAndLower(System.Web.UI.WebControls.WebControl)">
            <summary>
            初始化控件是否忽略大小写
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.InitCss(System.Web.UI.WebControls.WebControl)">
            <summary>
            初始化样式
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.InitCss(PL.UI.Controls.ETextBox)">
            <summary>
            初始化样式
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.AddToContainer(System.Web.UI.WebControls.WebControl)">
            <summary>
            把当前控件加入到容器中
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.GetControlCell(System.Web.UI.WebControls.Table,System.String)">
            <summary>
            获取控件所在的单元格
            </summary>
            <param name="tb"></param>
            <param name="txtId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.Create(PL.WEB.UIDriver.ElementBuilder.ElementParameter)">
            <summary>
            创建
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.QueryDefault">
            <summary>
            查询默认值设置
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.GetQueryDefaultDataForControl">
            <summary>
            获取查询默认值
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.GetValue">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.SetReadonly">
            <summary>
            设置控件为只读
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.IElement.SetWriteable">
            <summary>
            设置控件为可写
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.TDate.InitMaxLength">
            <summary>
            最大长度控制
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.TInput.MemoInit">
            <summary>
            初始化多行文本框
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.TInput.NumberInit">
            <summary>
            初始化数字输入框
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.ElementBuilder.TInput.PasswordInit">
            <summary>
            初始化密码输入框
            </summary>
        </member>
        <member name="T:PL.WEB.UIDriver.Extend.CommandExecute">
            <summary>
            功能执行
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.Extend.CommandExecute.ExecuteDynamicUI">
            <summary>
            动态页面
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.Extend.CommandExecute.Function">
            <summary>
            功能
            </summary>
        </member>
        <member name="P:PL.WEB.UIDriver.Extend.CommandExecute.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="M:PL.WEB.UIDriver.Extend.CommandExecute.GetFunctionByGuid(System.String)">
            <summary>
            获取功能扩展配置
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:PL.WEB.UIDriver.Extend.CommandExecute.ButtonClick(System.Object,System.EventArgs)">
            <summary>
            按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:PL.WEB.UIDriver.Extend.CommandExecute.ParepareData(PL.Base.EciRequest,PL.WEB.Base.ServiceCommandInfo)">
             <summary>
            准备数据
             </summary>
             <param name="request"></param>
             <param name="serviceCommandInfo"></param>
        </member>
        <member name="T:PL.WEB.STD.Function.Server.DataNone">
            <summary>
            空
            </summary>
        </member>
        <member name="M:PL.WEB.STD.Function.Server.DataNone.PrepareData(PL.Base.EciRequest,PL.Base.DynamicUI,PL.WEB.Base.ServiceCommandInfo,PL.Base.DictionaryData)">
            <summary>
            准备数据
            </summary>
            <param name="request"></param>
            <param name="dynamicUI"></param>
            <param name="serviceCommandInfo"></param>
            <param name="data"></param>
        </member>
        <member name="T:PL.WEB.STD.Function.Server.DataM2">
            <summary>
            列表页所有MODEL数据
            </summary>
        </member>
        <member name="M:PL.WEB.STD.Function.Server.DataM2.PrepareData(PL.Base.EciRequest,PL.Base.DynamicUI,PL.WEB.Base.ServiceCommandInfo,PL.Base.DictionaryData)">
            <summary>
            准备数据
            </summary>
            <param name="request"></param>
            <param name="dynamicUI"></param>
            <param name="serviceCommandInfo"></param>
            <param name="data"></param>
        </member>
        <member name="T:PL.WEB.STD.Function.Server.DataK2">
            <summary>
            列表页所有行数据KEY
            </summary>
        </member>
        <member name="M:PL.WEB.STD.Function.Server.DataK2.PrepareData(PL.Base.EciRequest,PL.Base.DynamicUI,PL.WEB.Base.ServiceCommandInfo,PL.Base.DictionaryData)">
            <summary>
            准备数据
            </summary>
            <param name="request"></param>
            <param name="dynamicUI"></param>
            <param name="serviceCommandInfo"></param>
            <param name="data"></param>
        </member>
        <member name="T:PL.WEB.STD.Function.Server.DataM1">
            <summary>
            所有选中行的MODEL-或者正在编辑的MODEL
            </summary>
        </member>
        <member name="M:PL.WEB.STD.Function.Server.DataM1.PrepareData(PL.Base.EciRequest,PL.Base.DynamicUI,PL.WEB.Base.ServiceCommandInfo,PL.Base.DictionaryData)">
            <summary>
            准备数据
            </summary>
            <param name="request"></param>
            <param name="dynamicUI"></param>
            <param name="serviceCommandInfo"></param>
            <param name="data"></param>
        </member>
        <member name="T:PL.WEB.STD.Function.Server.DataK1">
            <summary>
            选中所有行的KEY 格式A,B,C,D  或者编辑画面正在编辑的KEY……
            </summary>
        </member>
        <member name="M:PL.WEB.STD.Function.Server.DataK1.PrepareData(PL.Base.EciRequest,PL.Base.DynamicUI,PL.WEB.Base.ServiceCommandInfo,PL.Base.DictionaryData)">
            <summary>
            准备数据
            </summary>
            <param name="request"></param>
            <param name="dynamicUI"></param>
            <param name="serviceCommandInfo"></param>
            <param name="data"></param>
        </member>
        <member name="T:PL.WEB.STD.Function.IServiceDataInput">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.WEB.STD.Function.IServiceDataInput.PrepareData(PL.Base.EciRequest,PL.Base.DynamicUI,PL.WEB.Base.ServiceCommandInfo,PL.Base.DictionaryData)">
            <summary>
            准备数据
            </summary>
            <param name="request"></param>
            <param name="dynamicUI"></param>
            <param name="serviceCommandInfo"></param>
            <param name="data"></param>
        </member>
        <member name="T:PL.WEB.STD.Function.ServiceDataInputFactory">
            <summary>
             服务端数据工厂
            </summary>
        </member>
        <member name="M:PL.WEB.STD.Function.ServiceDataInputFactory.Create(PL.WEB.Base.FunctionDataType)">
            <summary>
            创建
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:PL.WEB.STD.Function.ServiceDataInputFactory.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:PL.UI.Controls.BatchEditArea">
            <summary>
            批量修改区域
            </summary>
        </member>
        <member name="M:PL.UI.Controls.BatchEditArea.InitUI(PL.Base.DynamicUI)">
            <summary>
            初始化UI
            </summary>
            <param name="UI"></param>
        </member>
        <member name="T:PL.UI.Controls.CommandArea">
            <summary>
            功能区域
            </summary>
        </member>
        <member name="F:PL.UI.Controls.CommandArea.ListFunction">
            <summary>
            功能扩展列表
            </summary>
        </member>
        <member name="P:PL.UI.Controls.CommandArea.FunctionContainer">
            <summary>
            功能按钮-放置区域
            </summary>
        </member>
        <member name="P:PL.UI.Controls.CommandArea.FunctionContainerBefore">
            <summary>
            功能按钮-放置区域 Before
            </summary>
        </member>
        <member name="M:PL.UI.Controls.CommandArea.GetStdButton(System.String)">
            <summary>
            获取功能按钮
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.CommandArea.CreateButton(PL.Base.DynamicUI)">
            <summary>
            创建功能按钮
            </summary>
            <param name="UI"></param>
        </member>
        <member name="T:PL.UI.Controls.EditArea">
            <summary>
            编辑区域
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EditArea.InitUI(PL.Base.DynamicUI)">
            <summary>
            初始化界面：应该是只负责 初始化界面，不负责数据
            </summary>
        </member>
        <member name="T:PL.UI.Controls.EditCommandArea">
            <summary>
            编辑功能区域
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EditCommandArea.btnSave">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EditCommandArea.btnAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EditCommandArea.btnCopy">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EditCommandArea.btnClose">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EditCommandArea.PlaceHolderFunctionBefore">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EditCommandArea.PlaceHolderFunction">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EditCommandArea.UI">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EditCommandArea.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EditCommandArea.FunctionContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EditCommandArea.FunctionContainerBefore">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EditCommandArea.GetStdButton(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.UI.Controls.ListArea">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ListArea.InitUI(PL.Base.DynamicUI)">
            <summary>
            
            </summary>
            <param name="UI"></param>
        </member>
        <member name="T:PL.UI.Controls.ListCommandArea">
            <summary>
            列表页功能区域
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ListCommandArea.btnAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ListCommandArea.btnBatchEdit">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ListCommandArea.btnDelete">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ListCommandArea.btnExcel">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ListCommandArea.PlaceHolderFunctionBefore">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ListCommandArea.PlaceHolderFunction">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ListCommandArea.DataGrid">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ListCommandArea.QueryArea">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ListCommandArea.UI">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ListCommandArea.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ListCommandArea.FunctionContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ListCommandArea.FunctionContainerBefore">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ListCommandArea.CheckWheatherNeedShow">
            <summary>
            判断当前操作控件是否应该显示，如果内部没有任何控件，则不需要显示
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ListCommandArea.GetStdButton(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.UI.Controls.QueryArea">
            <summary>
            查询区域
            </summary>
        </member>
        <member name="F:PL.UI.Controls.QueryArea.UI">
            <summary>
            页面
            </summary>
        </member>
        <member name="F:PL.UI.Controls.QueryArea.BtnSearch">
            <summary>
            查询按钮
            </summary>
        </member>
        <member name="F:PL.UI.Controls.QueryArea.BtnReset">
            <summary>
            重置按钮
            </summary>
        </member>
        <member name="M:PL.UI.Controls.QueryArea.InitUI(PL.Base.DynamicUI)">
            <summary>
            初始化界面
            </summary>
        </member>
        <member name="T:PL.UI.Controls.UIBatchEdit">
            <summary>
            批量编辑
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIBatchEdit.tbBatchEdit">
            <summary>
            批量编辑区域
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIBatchEdit.btnOK">
            <summary>
            确定按钮
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIBatchEdit.btnCancel">
            <summary>
            取消按钮
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIBatchEdit.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIBatchEdit.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            保存按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:PL.UI.Controls.UIEditEx">
            <summary>
            编辑区
            </summary>
        </member>
        <member name="P:PL.UI.Controls.UIEditEx.PanelHidden">
            <summary>
              隐藏面板
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIEditEx.tbEdit">
            <summary>
            编辑区域
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEditEx.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEditEx.CreateUI(System.String)">
            <summary>
            CreateUI
            </summary>
            <param name="pageCode"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEditEx.GetData">
            <summary>
            从UI页面获取编辑页面的编辑数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.UIEditEx.Bind(System.Data.DataTable)">
            <summary>
            绑定数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEditEx.Bind(PL.Base.EntityBase)">
            <summary>
            绑定数据
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEditEx.New">
            <summary>
            新增
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEditEx.DefaultEntity">
            <summary>
            NewEditInstance
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.UIEditEx.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.UIEditZone">
            <summary>
            编辑区
            </summary>
        </member>
        <member name="P:PL.UI.Controls.UIEditZone.PanelHidden">
            <summary>
              隐藏面板
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIEditZone.tbEdit">
            <summary>
            编辑区域
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEditZone.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEditZone.CreateUI(System.String)">
            <summary>
            CreateUI
            </summary>
            <param name="pageCode"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEditZone.GetData">
            <summary>
            从UI页面获取编辑页面的编辑数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.UIEditZone.Bind(System.Data.DataTable)">
            <summary>
            绑定数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEditZone.Bind(PL.Base.EntityBase)">
            <summary>
            绑定数据
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEditZone.New">
            <summary>
            新增
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEditZone.DefaultEntity">
            <summary>
            NewEditInstance
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.UIEditZone.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.UIEdit">
            <summary>
            编辑画面
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIEdit.HiddenFieldKEY">
            <summary>
            隐藏的Key值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.UIEdit.PanelHidden">
            <summary>
              隐藏面板
            </summary>
        </member>
        <member name="P:PL.UI.Controls.UIEdit.Key">
            <summary>
            设置正在编辑的主键值
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIEdit.OnLoaded">
            <summary>
            页面加载事件
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIEdit.command">
            <summary>
            功能按钮区域
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIEdit.tbEdit">
            <summary>
            编辑区域
            </summary>
        </member>
        <member name="P:PL.UI.Controls.UIEdit.CommandArea">
            <summary>
            功能区域
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.InitStardandFunction">
            <summary>
            初始化标准功能控制是否显示-初始化事件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.CreateEditUI">
            <summary>
            创建UI:1.编辑区域,2控件扩展
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.btnAdd_Click(System.Object,System.EventArgs)">
             <summary>
            新增按钮事件
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.btnCopy_Click(System.Object,System.EventArgs)">
            <summary>
            复制按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.CopyRemoveData">
            <summary>
            复制的时候相关数据项设置为初始值[不能为空，根据是否有初始值，自己负责]
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.btnSave_Click(System.Object,System.EventArgs)">
            <summary>
            保存按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.AfterSavePageIsAddMode">
            <summary>
            保存成功直接变成新增页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.Save">
            <summary>
            保存实现
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.MaintainSystemDataWithServer(PL.Base.EntityBase,System.Boolean)">
            <summary>
            维持系统触发字段和后台一致
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.GetEditInstanceFromUI">
            <summary>
            从UI页面获取编辑页面的编辑数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.UIEditChangeEditMode">
            <summary>
            修改编辑模式
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.ReloadData(System.String)">
            <summary>
            重新加载数据
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.BindData(System.Data.DataTable)">
            <summary>
            绑定数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.BindData(PL.Base.EntityBase)">
            <summary>
            绑定数据
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.NewAction">
            <summary>
            新增
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.UIAssignData">
            <summary>
            给页面控件赋值
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.LockUnlockUIControl">
            <summary>
            控制页面控件锁定状态
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.NewEditInstance">
            <summary>
            NewEditInstance
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.UIEdit.SetTitle(System.String)">
            <summary>
            设置标题
            </summary>
            <param name="title"></param>
        </member>
        <member name="T:PL.UI.Controls.UIList">
            <summary>
            列表页
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIList.command">
            <summary>
            功能区域
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIList.tbQuery">
            <summary>
            查询区域
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIList.Grid">
            <summary>
            列表区域
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIList.IsChoose">
            <summary>
            是否是放大镜
            </summary>
        </member>
        <member name="P:PL.UI.Controls.UIList.CommandArea">
            <summary>
            功能区域
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIList.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:PL.UI.Controls.UIList.ChooseCode">
            <summary>
            放大镜代码
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIList.InitStardandFunction">
            <summary>
            初始化标准功能控制是否显示-初始化事件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIList.BindData">
            <summary>
            重新查询数据
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIList.btnBack_Click(System.Object,System.EventArgs)">
            <summary>
            返回按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.UIList.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            删除按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.UIList.btnExcel_Click(System.Object,System.EventArgs)">
            <summary>
            导出按钮事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.UIList.ConvertUrl(System.String,System.Data.DataRow)">
            <summary>
            转换URL地址
            </summary>
            <param name="url"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:PL.UI.Controls.UIList.RequestParameter">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIList.Search">
            <summary>
            查询数据
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UIList.SetTitle(System.String)">
            <summary>
            设置标题
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:PL.UI.Controls.UIList.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.BaseCollection`1">
            <summary>
            BaseCollection
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:PL.UI.Controls.BaseCollection`1.#ctor(System.Web.UI.Control)">
            <summary>
            构造函数
            </summary>
            <param name="parentControl">父控件实例</param>
        </member>
        <member name="T:PL.UI.Controls.EChooseEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EChooseEx.#ctor">
            <summary>
            放大镜
            </summary>
        </member>
        <member name="T:PL.UI.Controls.EImageCheckBox">
            <summary>
            EImage复选框
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EImageCheckBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImageCheckBox.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EImageCheckBox.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EImageCheckBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EComboxEx">
            <summary>
            多选复选框
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.ECIType">
            <summary>
            数据源类型
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.Condition">
            <summary>
            用于替换配置中的参数 格式A=value
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.NotSave">
            <summary>
            不保存
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.Checked">
            <summary>
            全选状态
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.Alias">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.DataField">
            <summary>
            数据绑定
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.NotNull">
            <summary>
            必输项
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.G">
            <summary>
            分组代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EComboxEx.R">
            <summary>
            重置值
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.SelectAll">
            <summary>
            全部选中
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.GetValue">
            <summary>
            获取值
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.GetAllValue">
            <summary>
            获取值
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.RemoveItem(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.GetText">
            <summary>
            获取显示内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.LoadItem">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.LoadItem(System.String)">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.InitItems">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.InitItems(System.String)">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
            <param name="conn">可以传入筛选条件：注意需要有 AND,且配置的SQL语句中不能含有ORDER BY </param>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.OnInit(System.EventArgs)">
            <summary>
            初始化控件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            页面渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.ContextToUI(PL.Base.EntityBase)">
            <summary>
            上下文数据赋值到控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EComboxEx.UIToContext(System.Object)">
            <summary>
            控件数据赋值到上下文
            </summary>
            <param name="dataContext"></param>
        </member>
        <member name="T:PL.UI.Controls.ECombox">
            <summary>
            复选框
            </summary>
        </member>
        <member name="E:PL.UI.Controls.ECombox.SelectedIndexChanged">
            <summary>
            选项选择变化事件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.Alias">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.DataField">
            <summary>
            数据绑定
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.NotSave">
            <summary>
            不保存，注意默认是保存的
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.NotReset">
            <summary>
            不重置
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.G">
            <summary>
            分组代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.R">
            <summary>
            重置内容
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.Tag">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.QuickTip">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.SaveName">
            <summary>
            放大镜保存中文名，默认字段为  XXX_NAME
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.NameField">
            <summary>
            Name字段名：如果为空则，Name字段名= 当前字段名_NAME
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.Condition">
            <summary>
            用于替换配置中的参数 格式A=value
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.ECIType">
            <summary>
            数据源类型
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.AddEmpty">
            <summary>
            增加空选项
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.EmptyText">
             <summary>
            空值文字描述
             </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.NotNull">
            <summary>
            是否必输项
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECombox.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECombox.LoadItem">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECombox.LoadItem(System.String)">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:PL.UI.Controls.ECombox.InitItems">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECombox.InitItems(System.String)">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
            <param name="conn">可以传入筛选条件：注意需要有 AND,且配置的SQL语句中不能含有ORDER BY </param>
        </member>
        <member name="M:PL.UI.Controls.ECombox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECombox.AddAllWithItemsValue">
            <summary>
            增加全部查询条件，全部值是指下拉框中选项范围
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECombox.AddAllWithItemsValue(System.String)">
            <summary>
            增加全部查询条件，全部值是指下拉框中选项范围
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:PL.UI.Controls.ECombox.OnLoad(System.EventArgs)">
            <summary>
            控件加载
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECombox.OnInit(System.EventArgs)">
            <summary>
            初始化控件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ECombox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            页面渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.ECombox.ContextToUI(PL.Base.EntityBase)">
            <summary>
            上下文数据赋值到控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECombox.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PL.UI.Controls.ECombox.UIToContext(System.Object)">
            <summary>
            控件数据赋值到上下文
            </summary>
            <param name="dataContext"></param>
        </member>
        <member name="T:PL.UI.Controls.EExp">
            <summary>
            E表达式控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EExp.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EExp.IsCondition">
            <summary>
            条件表达式
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EExp.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染控件
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.ERule">
            <summary>
            E规则控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ERule.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ERule.IsSys">
            <summary>
            系统预设
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ERule.IsSimple">
            <summary>
            系统预设
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ERule.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染控件
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EConfig">
            <summary>
            用户自定义配置
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EConfig.Code">
            <summary>
            字典代码
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EConfig.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EConfig.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EConfig.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.UserQuery">
            <summary>
            用户定义查询
            </summary>
        </member>
        <member name="E:PL.UI.Controls.UserQuery.OnSelected">
            <summary>
            选择事件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.UserQuery.Tag">
            <summary>
            配置文件名
            </summary>
        </member>
        <member name="P:PL.UI.Controls.UserQuery.QueryCode">
            <summary>
            配置代码
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UserQuery.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.UserQuery.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EQuery">
            <summary>
            面板
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EQuery.Num">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EQuery.CommandId">
            <summary>
            执行ID
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EQuery.Tag">
            <summary>
            配置文件名
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EQuery.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EQuery.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.EQuery.GetCondition">
            <summary>
            获取查询条件
            </summary>
            <returns></returns>
        </member>
        <member name="T:PL.UI.Controls.EQueryItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EQueryItem.DataField">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EQueryItem.QueryType">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EQueryItem.Conn">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.UI.Controls.ETipManager1">
            <summary>
            E帮助控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETipManager1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETipManager1.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.ETipManager">
            <summary>
            E按钮
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETipManager.ImageUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETipManager.SystemCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETipManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETipManager.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.ETip">
            <summary>
            E帮助控件
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ETip.TipInfo">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETip.SystemCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETip.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETip.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETip.Show">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETip.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETip.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:PL.UI.Controls.ETip.HeaderText">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETip.Content">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETip.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ETip.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.FrameworkTool">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.FrameworkTool.#ctor">
            <summary>
            ELabel
            </summary>
        </member>
        <member name="P:PL.UI.Controls.FrameworkTool.OnClick">
            <summary>
            点击事件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.FrameworkTool.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:PL.UI.Controls.FrameworkTool.Url">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:PL.UI.Controls.FrameworkTool.ImageHeight">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.UI.Controls.FrameworkTool.ImageWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.FrameworkTool.LangCode">
            <summary>
            语言包
            </summary>
        </member>
        <member name="M:PL.UI.Controls.FrameworkTool.InitLang">
            <summary>
            初始化语言
            </summary>
        </member>
        <member name="M:PL.UI.Controls.FrameworkTool.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EToggle">
            <summary>
            伸缩控制控件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EToggle.Selector">
            <summary>
            控制对象
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EToggle.IsShow">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EToggle.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EToggle.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EToggle.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EGridView">
            <summary>
            E数据控件
            </summary>
            <summary>
            E数据控件
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EGridView.HasInitWidthByCompanyConfig">
            <summary>
            是否已经执行企业自定义表格宽度
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EGridView.HasInitSortExpressionByCompanyConfig">
            <summary>
            是否已经执行企业自定义排序设置
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EGridView.HasInitFixCountByCompanyConfig">
            <summary>
            是否已经执行企业自定义固定列设置
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.ConfigExecute(System.String)">
            <summary>
            执行配置(企业配置)
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.ConfigExecute(PL.Base.GridConfigHead)">
            <summary>
            执行配置
            </summary>
            <param name="configHead">配置信息</param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.InitByDesignWidth">
            <summary>
            根据设计配置初始化宽度
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EGridView.PL_KEY">
            <summary>
            PL_KEY
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EGridView.PL_CHECKED">
            <summary>
            PL_CHECKED
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EGridView.IsDynamicUI">
            <summary>
            动态配置
            </summary>
        </member>
        <member name="E:PL.UI.Controls.EGridView.PageSizeChanged">
            <summary>
            PageSize大小改变事件
            </summary>
        </member>
        <member name="E:PL.UI.Controls.EGridView.PageIndexChanged">
            <summary>
            分页事件
            </summary>
        </member>
        <member name="E:PL.UI.Controls.EGridView.Sorted">
            <summary>
            排序事件
            </summary>
        </member>
        <member name="E:PL.UI.Controls.EGridView.EasyEvent">
            <summary>
            分页、排序、分页大小改变事件
            </summary>
        </member>
        <member name="E:PL.UI.Controls.EGridView.ExcelEvent">
            <summary>
            导出Excel事件
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EGridView.reset">
            <summary>
            重置列宽
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.AllowPaging">
            <summary>
            是否允许分页
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.AllowSorting">
            <summary>
            是否允许排序
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.HAlign">
            <summary>
            列表项：全局水平排列设定
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.ExcelName">
            <summary>
            导出Excel名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EnableConfig">
            <summary>
            是否允许配置
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.ConfigCode">
            <summary>
            配置代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.IncludePageTypeUniqueID">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.ConfigOwner">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.Layout">
            <summary>
            垂直布局
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EnableHover">
            <summary>
            是否允许Hover行变色
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.FitWindow">
            <summary>
            自动适应屏幕高度
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.AutoHeight">
            <summary>
            自动根据数据表格行设定高度
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.ColumnResize">
            <summary>
            是否允许调整列宽度
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.SelectMode">
            <summary>
            选择模式 Default(选择当前点击的行，取消之前选中的) Append(追加选择)
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.KeyField">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.DataToken">
            <summary>
            生成数据Token
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EnableClickSelectRow">
            <summary>
            是否允许点击选择行 （默认允许）
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EnableExcel">
            <summary>
            是否允许导出Excel
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EnableSelect">
            <summary>
            是否允许选择
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.ShowSelectAll">
            <summary>
            是否显示全选
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.PageSizeInput">
            <summary>
            是否允许自己输入页面大小
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.CanSaveWidth">
            <summary>
            是否可以保存宽度
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.SaveWidthTag">
            <summary>
            保存宽度Tag
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EnablePaging">
            <summary>
            是否允许分页
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EnableSorting">
            <summary>
            是否允许排序
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.ShowRowNum">
            <summary>
            显示行号
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EnableFooter">
            <summary>
            是否显示汇总信息
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EnableDblClick">
            <summary>
            是否允许双击
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.DblClickEventName">
            <summary>
            双击事件名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.OnClick">
            <summary>
            双击事件名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.PageIndex">
            <summary>
            当前的页码,注意：页码从1开始，不是0
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.PageNum">
            <summary>
            当前的页码数量
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.MaxPageSize">
            <summary>
            一页最大数量
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.FixColumnCount">
            <summary>
            固定列数量
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.ConfigStartNum">
            <summary>
            配置开始列（从1开始数），必须大于等于固定列索引
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.SortField">
            <summary>
            排序表达式 只是数据项，不包括升降序，需要配合SortDirection使用
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.SortExpression">
            <summary>
            排序表达式包括升降序
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.SortDirection">
            <summary>
            排序顺序
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.OrderAsc(System.String)">
            <summary>
            降序排列
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.OrderDesc(System.String)">
            <summary>
            升序排列
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.OrderByExpression(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.OrderByExpression(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="ignoreWhenInitSortExpressionByCompanyConfig"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.OrderAsc(System.String,System.Boolean)">
            <summary>
            降序排列
            </summary>
            <param name="field"></param>
            <param name="ignoreWhenInitSortExpressionByCompanyConfig"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.OrderDesc(System.String,System.Boolean)">
            <summary>
            升序排列
            </summary>
            <param name="field"></param>
            <param name="ignoreWhenInitSortExpressionByCompanyConfig"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.SetFixColumnCount(System.Int32)">
            <summary>
            
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EGridView.EDataSource">
            <summary>
            设置数据源:执行绑定
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.DataBind">
            <summary>
            数据绑定
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.EGridView_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)">
            <summary>
            绑定每一行的Key值
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.OnInit(System.EventArgs)">
            <summary>
            控件初始化，根据设置增加CheckBox选择框
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.GetConfigInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.GetConfigInfoEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.GetConfigDataByColumn">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.OnPreRender(System.EventArgs)">
            <summary>
            页面预渲染
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.CreateComSort(System.Web.UI.HtmlTextWriter)">
            <summary>
            创建企业排序配置按钮
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.Reset">
            <summary>
            重置控件（目前主要是重置宽度，不要根据前台控制后台）
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.RenderHidden(System.Web.UI.HtmlTextWriter)">
            <summary>
            注册隐藏控件，保证控件能够回传数据，要求name必须=控件Id
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            LoadPostData
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EGridView.RaisePostDataChangedEvent">
            <summary>
            RaisePostDataChangedEvent
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.RaisePostBackEvent(System.String)">
            <summary>
            事件触发
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="P:PL.UI.Controls.EGridView.ConfigDataTable">
            <summary>
            配置开始列
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.InitByComSort">
            <summary>
            执行配置(企业配置)
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.SelectedDataTable">
            <summary>
            选中的数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EGridView.SelectedDataTable(System.Boolean)">
            <summary>
            获取选中行的DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EGridView.NotSelectedDataTable">
            <summary>
            获取未选中行的DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EGridView.NotSelectedDataTable(System.Boolean)">
            <summary>
            获取未选中行的DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EGridView.DataTable">
            <summary>
            获取所有行对应的DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EGridView.DataTable(System.Boolean)">
            <summary>
            获取所有行对应的DataTable
            </summary>
            <returns>是否包含基本绑定字段</returns>
        </member>
        <member name="P:PL.UI.Controls.EGridView.SelectedKeys">
            <summary>
            获取所有选中的Key集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:PL.UI.Controls.EGridView.NotSelectedKeys">
            <summary>
            获取所有未被选中的Key集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:PL.UI.Controls.EGridView.Keys">
            <summary>
            获取列表所有行的Key集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EGridView.DefaultSelect">
            <summary>
            如果查询结果只有一行，默认勾选中
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.GetColumn(System.String)">
            <summary>
            根据DataField获取列
            </summary>
            <param name="dataField"></param>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EGridView.ClearColumn">
            <summary>
            清除列，注意(第一列复选框不会清除)
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridView.GetFieldConllection">
            <summary>
            获取Grid列集合[用于动态新增列]
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.EGridView.SetFieldConllection(System.Web.UI.WebControls.DataControlFieldCollection)">
             <summary>
            设置列[用于动态新增列]
             </summary>
             <param name="columns"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.ScrollToKey(System.String)">
            <summary>
            前台UI滚动到指定Key的行
            </summary>
            <param name="key">Key值</param>
        </member>
        <member name="M:PL.UI.Controls.EGridView.Merger(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="keyField"></param>
            <param name="mergerColumn"></param>
        </member>
        <member name="T:PL.UI.Controls.EImport">
            <summary>
            导入
            </summary>
        </member>
        <member name="E:PL.UI.Controls.EImport.Click">
            <summary>
            导入事件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImport.File">
            <summary>
            文件
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EImport.gvData">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImport.Type">
            <summary>
            导入类型
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImport.ImportId">
            <summary>
            导入ID
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImport.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImport.BizNo">
            <summary>
            业务编号
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImport.ImportTitle">
            <summary>
            导入标题
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImport.TemplateFile">
            <summary>
            模板文件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImport.DataHasError">
            <summary>
            数据检查是否存在异常
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EImport.Data">
            <summary>
            导入的数据源
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EImport.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EImport.LoadDefine">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EImport.CheckData">
            <summary>
            检查数据
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EImport.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染控件
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EButtonExcel">
            <summary>
            导出EXCEL按钮
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EButtonExcel.DefaultClassName">
            <summary>
            默认样式
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EButtonExcel.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButtonExcel.CancelLoading">
            <summary>
            取消Loading
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButtonExcel.IsClient">
            <summary>
            是否是客户端按钮
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButtonExcel.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButtonExcel.Tag">
            <summary>
            附加属性
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EButtonExcel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.ENav">
            <summary>
            导航控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ENav.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="output"></param>
        </member>
        <member name="T:PL.UI.Controls.EButtonList">
            <summary>
            功能按钮组
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButtonList.Items">
            <summary>
            选项卡集合
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButtonList.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButtonList.Text">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButtonList.LangCode">
            <summary>
            语言包
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButtonList.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EButtonList.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EButtonList.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EButtonList.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.ETitle">
            <summary>
            标题控件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETitle.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETitle.ShowFeedBack">
            <summary>
            显示反馈按钮
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETitle.ShowHelp">
            <summary>
            显示帮助按钮
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETitle.HelpCode">
            <summary>
            帮助编号
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETitle.HelpUrl">
            <summary>
            帮助链接
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETitle.LangCode">
            <summary>
            语言包
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETitle.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETitle.ToggleId">
            <summary>
            伸缩控制ID
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETitle.ShowToggle">
            <summary>
            显示伸缩按钮
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETitle.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETitle.OnInit(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ETitle.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.ESum">
            <summary>
            E汇总控件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ESum.Async">
            <summary>
            异步获取汇总信息
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ESum.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ESum.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.ENotice">
            <summary>
            E通知
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ENotice.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ENotice.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ENotice.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ENotice.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="output"></param>
        </member>
        <member name="T:PL.UI.Controls.ETreeNode">
            <summary>
            E树节点
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ETreeNode.FunctionId">
            <summary>
            功能ID
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ETreeNode.FunctionName">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="F:PL.UI.Controls.ETreeNode.Url">
            <summary>
            地址
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETreeNode.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:PL.UI.Controls.EMenu">
            <summary>
            E菜单
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EMenu.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EMenu.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EDataView">
            <summary>
            E数据展示
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDataView.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EDataView.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EDataView.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EHelp">
            <summary>
            E帮助控件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EHelp.Code">
            <summary>
            帮助代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EHelp.Url">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EHelp.Tip">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EHelp.TipId">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EHelp.Options">
            <summary>
            地址
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EHelp.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EHelp.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EHelp.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EBoundField">
            <summary>
            E绑定字段
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.Export">
            <summary>
            导出 
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.IsNumber">
            <summary>
            数字
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.Thousand">
            <summary>
            千分位显示
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.IsDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.TipType">
            <summary>
            提示类型
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.LangCode">
            <summary>
            语言代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.GroupText">
            <summary>
            分组标题
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.HeaderTextClass">
            <summary>
            样式
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.OnClick">
            <summary>
            点击事件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.IsLink">
            <summary>
            超链接
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EBoundField.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EBoundField.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.UI.Controls.EGridViewTipInfo">
            <summary>
            EGridView提示信息
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EGridViewTipInfo.Index">
            <summary>
            索引
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EGridViewTipInfo.TipType">
            <summary>
            提示类型
            </summary>
        </member>
        <member name="T:PL.UI.Controls.ETab">
            <summary>
            选项卡
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETab.ShowClose">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETab.OnClose">
            <summary>
            关闭事件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETab.Html">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETab.Items">
            <summary>
            选项卡集合
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETab.ActiveTabIndex">
            <summary>
            选中的索引
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETab.ActiveTabIndexHiddenFieldID">
            <summary>
            选中的选型卡索引
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETab.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.ETab.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            LoadPostData
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:PL.UI.Controls.ETab.RaisePostDataChangedEvent">
            <summary>
            RaisePostDataChangedEvent
            </summary>
        </member>
        <member name="T:PL.UI.Controls.EButtonCollection">
            <summary>
            功能按钮集合
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EButtonCollection.#ctor(PL.UI.Controls.EButtonList)">
            <summary>
            构造函数
            </summary>
            <param name="parent"></param>
        </member>
        <member name="T:PL.UI.Controls.ETabItem">
            <summary>
            选项卡Item
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETabItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETabItem.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETabItem.Frame">
            <summary>
            是否启用IFrame
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETabItem.Url">
            <summary>
            IFrame加载页面地址
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETabItem.LazyUrl">
            <summary>
            IFrame加载页面地址
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETabItem.LangCode">
            <summary>
            语言包
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETabItem.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETabItem.OnInit(System.EventArgs)">
             <summary>
            初始化
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ETabItem.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.ETabCollection">
            <summary>
            选项卡集合
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETabCollection.#ctor(PL.UI.Controls.ETab)">
            <summary>
            构造函数
            </summary>
            <param name="parent"></param>
        </member>
        <member name="T:PL.UI.Controls.ERadioButton">
            <summary>
            E单选框
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ERadioButton.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ERadioButton.LangCode">
            <summary>
            语言包
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ERadioButton.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ERadioButton.R">
            <summary>
            重置值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ERadioButton.Tag">
            <summary>
            TAG
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ERadioButton.InputCss">
            <summary>
            InputCss
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ERadioButton.IsLabel">
            <summary>
            标签
            </summary>
        </member>
        <member name="T:PL.UI.Controls.ECheckBox">
            <summary>
            E复选框
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECheckBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.Alias">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.NotNull">
            <summary>
            没有任何用处
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.DataField">
            <summary>
            数据绑定
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.NotSave">
            <summary>
            不保存，注意默认是保存的
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.G">
            <summary>
            分组代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.R">
            <summary>
            重置值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.Tag">
            <summary>
            附加值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.InputCss">
            <summary>
            InputCss
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.IsLabel">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.TrueValue">
            <summary>
            选中值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.FalseValue">
            <summary>
            未选中值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.LangCode">
            <summary>
            语言包
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ECheckBox.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECheckBox.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ECheckBox.ContextToUI(PL.Base.EntityBase)">
            <summary>
            上下文数据赋值到控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ECheckBox.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PL.UI.Controls.ECheckBox.UIToContext(System.Object)">
            <summary>
            控件数据赋值到上下文
            </summary>
            <param name="dataContext"></param>
        </member>
        <member name="T:PL.UI.Controls.EChoose">
            <summary>
            放大镜控件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.ECIType">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.EnableEdit">
            <summary>
            是否可编辑
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.Plain">
            <summary>
            普通文本框
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.Text">
            <summary>
            完整值,赋值时如果是“|”则赋值为空
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.CodeBehindValue">
            <summary>
            代码后台隐藏值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.Complex">
            <summary>
            自定义放大镜
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.Multi">
            <summary>
            多选放大镜
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.CodeBehind">
            <summary>
            代码隐藏在后面
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.EnableClear">
            <summary>
            允许清除
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.ClearedValue">
            <summary>
            清除后值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.NotValidate">
            <summary>
            取消验证
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.ServerCheck">
            <summary>
            取消验证
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.CodeOnly">
            <summary>
            前台放放大镜只要代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.SaveName">
            <summary>
            保存名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.NameField">
            <summary>
            Name字段名：如果为空则，Name字段名= 当前字段名_NAME
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.Condition">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.NameControlId">
            <summary>
            名称文本框
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.Config">
            <summary>
            放大镜配置 {width:500,height:600}
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EChoose.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EChoose.OnInit(System.EventArgs)">
            <summary>
            初始化控件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EChoose.#ctor">
            <summary>
            放大镜
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EChoose.ToInput">
            <summary>
            转成普通文本
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EChoose.ToChoose">
            <summary>
            转成放大镜
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EChoose.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染控件
            </summary>
            <param name="output"></param>
        </member>
        <member name="T:PL.UI.Controls.EDropDownList">
            <summary>
            下拉框
            </summary>
        </member>
        <member name="E:PL.UI.Controls.EDropDownList.SelectedIndexChanged">
            <summary>
            选择变化事件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.Alias">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.DataField">
            <summary>
            数据绑定
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.NotSave">
            <summary>
            不保存，注意默认是保存的
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.HasInit">
            <summary>
            是否初始化
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.G">
            <summary>
            分组代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.R">
            <summary>
            重置值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.QuickTip">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.Tag">
            <summary>
            附加值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.SaveName">
            <summary>
            保存名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.NameField">
            <summary>
            Name字段名：如果为空则，Name字段名= 当前字段名_NAME
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.Condition">
            <summary>
            用于替换配置中的参数 格式A=value
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.ECIType">
            <summary>
            数据源类型
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.AddEmpty">
            <summary>
            增加空行
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.EmptyText">
            <summary>
            空行文字描述
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.NotNull">
            <summary>
            是否必输项
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.SelectedValue">
            <summary>
            选择的值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EDropDownList.ReadOnly">
            <summary>
            只读
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EDropDownList.InitItems">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EDropDownList.InitItems(System.String)">
            <summary>
            绑定通过ECIType指定的数据
            </summary>
            <param name="conn">可以传入筛选条件：注意需要有 AND,且配置的SQL语句中不能含有ORDER BY </param>
        </member>
        <member name="M:PL.UI.Controls.EDropDownList.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EDropDownList.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.EDropDownList.OnLoad(System.EventArgs)">
            <summary>
            控件加载
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EDropDownList.OnInit(System.EventArgs)">
            <summary>
            初始化控件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EDropDownList.ContextToUI(PL.Base.EntityBase)">
            <summary>
            上下文数据赋值到控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EDropDownList.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PL.UI.Controls.EDropDownList.UIToContext(System.Object)">
            <summary>
            控件数据赋值到上下文
            </summary>
            <param name="dataContext"></param>
        </member>
        <member name="T:PL.UI.Controls.ETextBox">
            <summary>
            文本框
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.Alias">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.DataField">
            <summary>
            数据绑定
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.QuickTip">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.Placeholder">
            <summary>
            水印
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.NotSave">
            <summary>
            不保存，注意默认是保存的
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.Pop">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.NotReset">
            <summary>
            不重置
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.G">
            <summary>
            分组代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.R">
            <summary>
            重置值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.IncludeName">
            <summary>
            包含名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.Regex">
            <summary>
            验证正则表达式
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.RegexMessage">
            <summary>
            验证正则表达式-异常提示
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.CssClassEx">
            <summary>
            样式
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.NotNull">
            <summary>
            必输项
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.IsFloat">
            <summary>
            浮点数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.IsNum">
            <summary>
            整数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.IsNegative">
            <summary>
            是否可以为负数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.IsDate">
            <summary>
            日期控件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.IsLabel">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.KeepZero">
            <summary>
            保持
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.Autocomplete">
            <summary>
            设置成 false 则文本框机会取消浏览器的自己记忆功能
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.Format">
            <summary>
            格式
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.AutoUpper">
            <summary>
            自动转成大写
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.ImeDisabled">
            <summary>
            只允许英文输入法
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.IgnoreEnterToTab">
            <summary>
            忽略回车Tab
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.HiddenValue">
            <summary>
            后台隐藏的值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.EnableChoose">
            <summary>
            允许选择
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.Tag">
            <summary>
            附加属性
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETextBox.Target">
            <summary>
            附加属性
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETextBox.#ctor">
             <summary>
            构造函数
             </summary>
        </member>
        <member name="M:PL.UI.Controls.ETextBox.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ETextBox.OnLoad(System.EventArgs)">
            <summary>
            控件加载
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ETextBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染控件
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:PL.UI.Controls.ETextBox.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PL.UI.Controls.ETextBox.ContextToUI(PL.Base.EntityBase)">
            <summary>
            上下文数据赋值到控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETextBox.UIToContext(System.Object)">
            <summary>
            控件数据赋值到上下文
            </summary>
            <param name="dataContext"></param>
        </member>
        <member name="T:PL.UI.Controls.EButton">
            <summary>
            E按钮
            </summary>
        </member>
        <member name="F:PL.UI.Controls.EButton.DefaultClassName">
            <summary>
            默认样式
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EButton.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.NeedCheck">
            <summary>
            提交前进行基本验证
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.CancelLoading">
            <summary>
            取消Loading
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.LogicEnabled">
            <summary>
            逻辑生效失效
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.IsMenu">
            <summary>
            IsMenu
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.G">
            <summary>
            分组代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.ConfirmMessage">
            <summary>
            确认执行消息提示
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.AutoConfirm">
            <summary>
            是否自动校验
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.ValidateId">
            <summary>
            验证控件目标ID
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.IsClient">
            <summary>
            是否是客户端按钮
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.Code">
            <summary>
            权限编码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.Tag">
            <summary>
            附加属性
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.LangCode">
            <summary>
            语言包
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EButton.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:PL.UI.Controls.EButton.RenderAsItem(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.ELabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ELabel.#ctor">
            <summary>
            ELabel
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.Alias">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.DataField">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.NotNull">
            <summary>
            没有用处
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.NotSave">
            <summary>
            不保存，注意默认是保存的
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.G">
            <summary>
            分组代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.IsLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.ReadOnly">
            <summary>
            只读属性
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.Tag">
            <summary>
            附加属性
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.IsDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.IsLink">
            <summary>
            链接
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.ClickEventName">
            <summary>
            点击事件
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.Format">
            <summary>
            格式
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.ShowNameOnly">
            <summary>
            只显示名称
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.LangCode">
            <summary>
            语言包
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ELabel.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ELabel.OnInit(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.ELabel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:PL.UI.Controls.ELabel.ContextToUI(PL.Base.EntityBase)">
            <summary>
            数据绑定控件
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PL.UI.Controls.ELabel.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PL.UI.Controls.ELabel.ContextToUI(System.Data.DataTable)">
            <summary>
            绑定数据到控件
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:PL.UI.Controls.ELabel.UIToContext(System.Object)">
            <summary>
            控件绑定到实体
            </summary>
            <param name="dataContext"></param>
        </member>
        <member name="T:PL.UI.Controls.EWindow">
            <summary>
            窗体控件
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EWindow.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:PL.UI.Controls.EPanel">
            <summary>
            面板
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.BodyPadding">
            <summary>
            Padding设置
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.IsWindow">
            <summary>
            窗体
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.Display">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.NeedMask">
            <summary>
            是否需要蒙版
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.GroupName">
            <summary>
            E控件GroupName
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.BorderType">
            <summary>
            边框类型
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.LangCode">
            <summary>
            语言包
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EPanel.Show">
            <summary>
            前台页面弹出
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.EnableClose">
            <summary>
            允许关闭
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.EnableToggle">
            <summary>
            允许伸缩
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.EnableBackgroundColor">
            <summary>
            内容区域是否显示背景色
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EPanel.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EPanel.OnInit(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PL.UI.Controls.EPanel.ChildrenControlsManage(System.Web.UI.Control)">
            <summary>
            子控件管理
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EPanel.ChildrenReadonlyManage(PL.Base.IEControl)">
            <summary>
            子控件只读属性控制
            </summary>
        </member>
        <member name="P:PL.UI.Controls.EPanel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EPanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:PL.UI.Controls.EGridViewSelectTemplate">
            <summary>
            EGridView选择框模板
            </summary>
        </member>
        <member name="M:PL.UI.Controls.EGridViewSelectTemplate.#ctor(System.Web.UI.WebControls.DataControlRowType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="type"></param>
            <param name="gridviewClientId"></param>
        </member>
        <member name="M:PL.UI.Controls.EGridViewSelectTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="T:PL.UI.Controls.ETemplateField">
            <summary>
            E模板列
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETemplateField.DataField">
            <summary>
            DataField
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETemplateField.TwoWay">
            <summary>
            绑定设置（为了后台能够自动获取到前台控件的值）
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETemplateField.TrueValue">
            <summary>
            CheckBox绑定 True 值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETemplateField.FalseValue">
            <summary>
            CheckBox绑定 False 值
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETemplateField.Export">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETemplateField.IsNumber">
            <summary>
            数字
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETemplateField.IsSelect">
            <summary>
            选择
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETemplateField.LangCode">
            <summary>
            语言代码
            </summary>
        </member>
        <member name="P:PL.UI.Controls.ETemplateField.LangInited">
            <summary>
            已经初始化
            </summary>
        </member>
        <member name="M:PL.UI.Controls.ETemplateField.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:PL.UI.Controls.TwoWayItem">
            <summary>
            绑定配置
            </summary>
        </member>
        <member name="F:PL.UI.Controls.TwoWayItem.DataField">
            <summary>
            数据项
            </summary>
        </member>
        <member name="F:PL.UI.Controls.TwoWayItem.ControlId">
            <summary>
            控件ID
            </summary>
        </member>
        <member name="F:PL.UI.Controls.TwoWayItem.TrueValue">
            <summary>
            True值
            </summary>
        </member>
        <member name="F:PL.UI.Controls.TwoWayItem.FalseValue">
            <summary>
            False值
            </summary>
        </member>
        <member name="T:PL.Speed.Web.Menu4">
            <summary>
            菜单4
            </summary>
        </member>
        <member name="F:PL.Speed.Web.Menu4.HasFunction">
            <summary>
            是否有权限
            </summary>
        </member>
        <member name="P:PL.Speed.Web.Menu4.LogInfo">
            <summary>
            Log信息
            </summary>
        </member>
        <member name="M:PL.Speed.Web.Menu4.#ctor(PL.UI.Controls.EMenu)">
            <summary>
            构造函数
            </summary>
            <param name="menu"></param>
        </member>
        <member name="M:PL.Speed.Web.Menu4.Load">
            <summary>
            加载数据
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.BaseData.BaseDataManager">
            <summary>
            基础资料管理
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.BaseData.BaseDataManager.ListNotice">
            <summary>
            消息信息
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.BaseData.BaseDataManager.LoadConfig">
            <summary>
            加载配置
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.Component.EciDataHelpUIConfig">
            <summary>
            选择配置页面控制
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Component.EciDataHelpUIConfig.MemoDetailNotNull">
            <summary>
            详细备注是否必输
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Component.EciDataHelpUIConfig.SysInfo">
            <summary>
            系统信息
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.Component.EciDataHelpUIConfig.LoadConfig">
            <summary>
            加载配置
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.EasyUI.EasyUITreeNodeAttribute">
            <summary>
            属性
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.EasyUI.EasyUITreeNodeAttribute.code">
            <summary>
            代码
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.EasyUI.EasyUITreeNode">
            <summary>
            EasyUITreeNode
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.EasyUI.EasyUITreeNode.id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.EasyUI.EasyUITreeNode.text">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.EasyUI.EasyUITreeNode.Checked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.EasyUI.EasyUITreeNode.children">
            <summary>
            子节点
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.EasyUI.EasyUITreeNode.attributes">
            <summary>
            属性
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.EasyUI.EasyUITreeNode.AddChild(ECI.Speed.Web.EasyUI.EasyUITreeNode)">
            <summary>
            增加下级
            </summary>
            <param name="node"></param>
        </member>
        <member name="F:ECI.Speed.Web.ExcelNPOI.NPOIExcelConfigList.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.ExcelNPOI.NPOIExcelConfigList.Row">
            <summary>
            行  第一行是1
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.Import.ImportCheckMode">
            <summary>
            导入检查模式
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportCheckMode.Default">
            <summary>
            默认，只要有错误就终止
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportCheckMode.All">
            <summary>
            全部
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.Import.ImportColumn">
            <summary>
            导入列/
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportColumn.Name">
            <summary>
            中文名
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportColumn.DataField">
            <summary>
            字段名
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportColumn.NotNull">
            <summary>
            是否可空
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportColumn.IsNumber">
            <summary>
            整数
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportColumn.IsFloat">
            <summary>
            小数
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportColumn.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.Import.ImportDefineProvider">
            <summary>
            导入管理
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.Import.ImportDefineProvider.GetDefine(System.String)">
            <summary>
            获取导入定义
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:ECI.Speed.Web.Import.ImportDefine">
            <summary>
            Excel导入定义
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.TypeName">
            <summary>
            导入类型名称
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.TemplateFile">
            <summary>
            模板下载
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.ProcedureName">
            <summary>
            存储过程
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.OnClose">
            <summary>
            关闭事件
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.NeedPageCount">
            <summary>
            需要分页的记录数
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.CheckMode">
            <summary>
            导入检查模式
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.Action">
            <summary>
            执行动作
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.Columns">
            <summary>
            导入列
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportDefine.ProcedureParams">
            <summary>
            存储过程参数
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.Import.ImportAction">
            <summary>
            导入动作
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportAction.ReadData">
            <summary>
            读数据
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportAction.CheckData">
            <summary>
            数据检查
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportAction.SaveDB">
            <summary>
            保存数据
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportAction.Event">
            <summary>
            事件响应
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.Import.ImportProcedureParam">
            <summary>
            存储过程参数
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportProcedureParam.Name">
            <summary>
            参数名
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.Import.ImportProcedureParam.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.SSO.ECISSO.ECISSOPrivilege">
            <summary>
            华东信息权限平台权限获取
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.SSO.ECISSO.ECISSOPrivilege.watch">
            <summary>
            监视日志
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSO.ECISSOPrivilege.GetMenu(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取菜单
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="P:ECI.Speed.Web.SSO.ECISSO.ECISSOPrivilege.SSOEx">
            <summary>
            扩展
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SSO.ECISSO.ECISSOPrivilege.Service">
             <summary>
            SsoServiceClient
             </summary>
        </member>
        <member name="T:ECI.Speed.Web.SSO.ECISSO.UserPrivilege">
            <summary>
            默认用户权限
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.SSO.ECISSO.RolePrivilegeForApp">
            <summary>
            角色权限（限定在指定[业务角色]范围之内）
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.SSO.ECISSO.UserRolesPrivilegeInNode">
            <summary>
            用户在某个组织下的所有角色的权限  (重要,OA模式 )
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.SSO.ECIZTSSO.DefaultPrivilege">
            <summary>
            默认用户权限
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.SSO.ECIZTSSO.ECISSOPrivilege">
            <summary>
            华东信息权限平台权限获取
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.SSO.ECIZTSSO.ECISSOPrivilege.watch">
            <summary>
            监视日志
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSO.ECISSOPrivilege.GetMenu(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取菜单
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="P:ECI.Speed.Web.SSO.ECIZTSSO.ECISSOPrivilege.SSOEx">
            <summary>
            扩展
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.SSO.ECIZTSSO.UserRolesPrivilegeInNode">
            <summary>
            用户在某个组织下的所有角色的权限  (重要,OA模式 )
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.SSO.LoginHistoryManager">
            <summary>
            登录日志
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SSO.LoginHistoryManager.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.LoginHistoryManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.LoginHistoryManager.Execute">
            <summary>
            记录日志
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.SSO.DEVSSOProvider">
            <summary>
            华东信息权限平台用户登录+内置获取功能
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.DEVSSOProvider.GetMenu(System.String,PL.Base.EntityBase)">
            <summary>
            获取菜单
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.DEVSSOProvider.GetChildrenFunction(System.String,PL.Base.EntityBase)">
            <summary>
            获取下级功能
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:ECI.Speed.Web.SSO.ECIZTSSOProvider">
            <summary>
            华东信息权限平台
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.Login(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            登录
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.LoginByToken(System.String,PL.Base.EntityBase)">
            <summary>
            登录（By Token）
            </summary>
            <param name="strToken"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.ChangeCompanyByCode(System.String)">
            <summary>
            切换登录公司
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.InitUserSession(ECI.SSO.BizEntity.User)">
            <summary>
            初始化用户Session信息
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.GetMenu(System.String,PL.Base.EntityBase)">
            <summary>
            获取功能菜单
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>ll
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.GetPrivilegeChildrenMenu(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取下级菜单
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.GetChildrenFunction(System.String,PL.Base.EntityBase)">
            <summary>
            获取下级功能
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.GetApps(System.String,PL.Base.EntityBase)">
            <summary>
             获取应用
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.GetPrivilegeApps(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取有权限的应用
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.ConvertToListAppInfo(System.Collections.Generic.List{ECI.SSO.BizEntity.Function},System.String,System.Int32)">
            <summary>
            转化成框架需要用到的List AppInfo
            </summary>
            <param name="list"></param>
            <param name="userId"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.GetUserOrgApps(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取用户指定组织下的应用
            </summary>
            <param name="orgId"></param>
            <param name="appRootId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.HasRight(System.String)">
            <summary>
            是否有权限
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.AskForLoginTokenByUserID(System.String)">
            <summary>
            获取Token
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.SessionSetState(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.SessionGetState(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.SessionRemoveState(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.SessionRemoveAllState(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.GetNodeById(System.String)">
            <summary>
            
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECIZTSSOProvider.GetPrivilege(System.String)">
            <summary>
            获取权限
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ECI.Speed.Web.SSO.ECISSOProvider">
            <summary>
            华东信息权限平台
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.Login(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            登录
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.LoginByToken(System.String,PL.Base.EntityBase)">
            <summary>
            登录（By Token）
            </summary>
            <param name="strToken"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.ChangeCompanyByCode(System.String)">
            <summary>
            切换登录公司
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.InitUserSession(ECI.SSO.Client.SsoService.User,ECI.SSO.Client.SsoService.SsoServiceClient)">
            <summary>
            初始化用户Session信息
            </summary>
            <param name="user"></param>
            <param name="service"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetMenu(System.String,PL.Base.EntityBase)">
            <summary>
            获取功能菜单
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>ll
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetPrivilegeChildrenMenu(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取下级菜单
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetChildrenFunction(System.String,PL.Base.EntityBase)">
            <summary>
            获取下级功能
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetApps(System.String,PL.Base.EntityBase)">
            <summary>
             获取应用
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetPrivilegeApps(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取有权限的应用
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.ConvertToListAppInfo(System.Collections.Generic.List{ECI.SSO.Client.SsoService.Function},System.String,System.Int32)">
            <summary>
            转化成框架需要用到的List AppInfo
            </summary>
            <param name="list"></param>
            <param name="userId"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetUserOrgApps(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取用户指定组织下的应用
            </summary>
            <param name="orgId"></param>
            <param name="appRootId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.HasRight(System.String)">
            <summary>
            是否有权限
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.AskForLoginTokenByUserID(System.String)">
            <summary>
            获取Token
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.SessionSetState(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.SessionGetState(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.SessionRemoveState(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
            <param name="key"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.SessionRemoveAllState(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="appId"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetNodeById(System.String)">
            <summary>
            
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetPrivilege(System.String)">
            <summary>
            获取权限
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetSsoUrl">
            <summary>
            获取权限平台地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.WriteLoginHistory(ECI.Speed.Web.SsoLoginHistory)">
            <summary>
            记录登录历史记录
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.ECISSOProvider.GetUserByName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:ECI.Speed.Web.SSO.BASESSOProvider">
            <summary>
            内置权限平台
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.SSO.BASESSOProvider.Login(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            登录
            </summary>
            <param name="loginNo"></param>
            <param name="password"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.BASESSOProvider.GetMenu(System.String,PL.Base.EntityBase)">
            <summary>
            获取菜单
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.BASESSOProvider.GetPrivilegeApps(System.String,System.String,PL.Base.EntityBase)">
            <summary>
            获取有权限的用户App
            </summary>
            <param name="userId"></param>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.BASESSOProvider.GetChildrenFunction(System.String,PL.Base.EntityBase)">
            <summary>
            获取下级功能
            </summary>
            <param name="functionId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.BASESSOProvider.HasRight(System.String)">
            <summary>
            是否有权限
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.SSO.BASESSOProvider.LoginByToken(System.String,PL.Base.EntityBase)">
            <summary>
            根据Token登录
            </summary>
            <param name="strToken"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.Speed.Web.SSO.BASESSOProvider.AskForLoginTokenByUserID(System.String)">
            <summary>
            获取用户Token
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:ECI.Speed.Web.SsoLoginHistory">
            <summary>
            
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.UserName">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.TrueName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.CompanyCode">
            <summary>
            公司代码
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.Platform">
            <summary>
            运行公司
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.PtFlag">
            <summary>
            平台
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.IsPT">
            <summary>
            是否平台
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.SysCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.ClientIP">
            <summary>
            客户端IP
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.ClientBrowser">
            <summary>
            客户端浏览器
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.ClientOS">
            <summary>
            客户端操作系统
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.ServerIP">
            <summary>
            服务器IP地址
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.Url">
            <summary>
            访问地址
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.SsoLoginHistory.SessionId">
            <summary>
            会话ID
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.UIData">
            <summary>
            
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.UIData.GetEciDataHelp(System.String)">
            <summary>
            获取数据源
            </summary>
            <param name="queryType"></param>
            <returns></returns>
        </member>
        <member name="T:ECI.Speed.Web.WebLib.AppPage.PlatformPage">
            <summary>
            
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.WebLib.AppPage.PlatformPage.hidPlatformFunctionId">
            <summary>
            
            </summary>
        </member>
        <member name="F:ECI.Speed.Web.WebLib.AppPage.PlatformPage.gvData">
            <summary>
            
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.AppPage.PlatformPage.LoadData">
            <summary>
            
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.WebLib.BaseHttpHandler">
            <summary>
            基础HttpHandler
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.BaseHttpHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            HTTP操作入口
            </summary>
            <param name="context">HTTP上下文</param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.BaseHttpHandler.Handle(System.Web.HttpContext)">
            <summary>
            执行操作
            </summary>
            <param name="context">HTTP上下文</param>
            <returns>响应</returns>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.BaseHttpHandler.IsReusable">
            <summary>
            
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.BaseHttpHandler.GetBooleanParam(System.String,System.Boolean)">
            <summary>
            获取布尔类型参数
            </summary>
            <param name="value">参数值</param>
            <param name="defaultValue">默认值</param>
            <returns>布尔类型参数</returns>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.BaseHttpHandler.GetInt32Param(System.String,System.Int32,System.String)">
            <summary>
            获取Int32类型参数
            </summary>
            <param name="value">参数值</param>
            <param name="defaultValue">默认值</param>
            <param name="name">名称</param>
            <returns>Int32类型参数</returns>
        </member>
        <member name="T:ECI.Speed.Web.WebLib.BaseResponse">
            <summary>
            基础响应对象
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.BaseResponse.error">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.BaseResponse.msg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.BaseResponse.result">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.WebLib.DataHandler">
            <summary>
            数据交互
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetDev(PL.Base.EciResponse)">
            <summary>
            获取开发账户
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.SystemReload(PL.Base.EciResponse)">
            <summary>
            系统重新加载
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetOrgAppInfo(PL.Base.EciResponse)">
            <summary>
            获取组织应用
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetChangePwdUrl(PL.Base.EciResponse)">
            <summary>
            获取修改密码地址
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetHelpUrl(PL.Base.EciResponse)">
            <summary>
            获取系统帮助地址
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetFeedbackUrl(PL.Base.EciResponse)">
            <summary>
            获取系统帮助地址
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.ModifyMenuName(PL.Base.EciResponse)">
            <summary>
            修改菜单名称
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetSSOManageUrl(PL.Base.EciResponse)">
            <summary>
            获取权限平台地址
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.ClearSession(PL.Base.EciResponse)">
            <summary>
            清除会话
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.DevLog(PL.Base.EciResponse)">
            <summary>
            诊断模式切换
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetCurrentVersion(PL.Base.EciResponse)">
            <summary>
            平台版本
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetMessage(PL.Base.EciResponse)">
            <summary>
            获取我的消息
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.MessageIKnow(PL.Base.EciResponse)">
            <summary>
            我知道了
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.ViewLog(PL.Base.EciResponse)">
            <summary>
            获取页面调试日志
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetCatchLog(System.String)">
            <summary>
            获取日志
            </summary>
            <param name="accessId"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.CreateStepSOA(System.String,PL.Base.LogCache.InfoCatch.PageStepCatchInfo,System.Collections.Generic.List{PL.Base.LogInfo})">
            <summary>
            创建执行阶段SOA信息
            </summary>
            <param name="pageStep"></param>
            <param name="stepInfo"></param>
            <param name="list"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.CreateSOASql(System.String,PL.Base.LogCache.InfoCatch.SOAInfoCatchInfo,System.Collections.Generic.List{PL.Base.LogInfo})">
            <summary>
            创建SOA下面的SQL信息
            </summary>
            <param name="serviceId"></param>
            <param name="soaInfo"></param>
            <param name="list"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.SystemChange(PL.Base.EciResponse)">
            <summary>
            系统切换
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.SetSession(PL.Base.EciResponse)">
            <summary>
            设置Session
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.RemoveSession(PL.Base.EciResponse)">
            <summary>
            清除Session
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.ChangeCompany(PL.Base.EciResponse)">
            <summary>
            销售系统:切换公司
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.AccessAllPage">
            <summary>
            遍历访问所有页面
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.Logout(PL.Base.EciResponse)">
            <summary>
            登出
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.KeepSession(PL.Base.EciResponse)">
            <summary>
            会话保持功能
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetAsyncSumInfo(PL.Base.EciResponse)">
            <summary>
            获取异步汇总信息
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.LoginTest(PL.Base.EciResponse)">
            <summary>
            
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.GetTip(PL.Base.EciResponse)">
            <summary>
            获取提示信息
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.HasTW(PL.Base.EciResponse)">
            <summary>
            判断是否含有繁体中文
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.NoticeAccountChange(PL.Base.EciResponse)">
            <summary>
            权限平台通知身份过期
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.DataHandler.DownloadETip(PL.Base.EciResponse)">
            <summary>
            
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="T:ECI.Speed.Web.WebLib.QRHandler">
            <summary>
            二维码接口
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.QRHandler.Handle(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.QRHandler.GetErrorLevel(System.String)">
            <summary>
            获取容错级别
            </summary>
            <param name="errrorLevel">容错级别字符串</param>
            <returns>容错级别</returns>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.QRHandler.GetText(System.Web.HttpContext,System.String,System.String)">
            <summary>
            获取文本
            </summary>
            <param name="context">Http上下文</param>
            <param name="text">原文本</param>
            <param name="secret">加密类型</param>
            <returns>处理后的文本</returns>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.QRHandler.AddLogo(System.Web.HttpContext,System.Drawing.Bitmap)">
            <summary>
            添加Logo
            </summary>
            <param name="context">Http上下文</param>
            <param name="qrBitmap">二维码图片对象</param>
            <returns>新二维码图片对象</returns>
        </member>
        <member name="T:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator">
            <summary>
            版本下载
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator.AutoUpdate">
            <summary>
            是否要检查更新
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator.CurrentVersion">
            <summary>
            当前版本
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator.UpdateProgram">
            <summary>
            版本更新程序
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator.ServerVersion">
            <summary>
            服务器版本
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator.CheckUpdateUrl">
            <summary>
            版本检查地址
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator.IsError">
            <summary>
            发生异常
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator.Message">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator.CheckUpdate">
            <summary>
            检查是否需要更新
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdator.GetServerVersion">
            <summary>
            获取服务器版本号
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdateInfo">
            <summary>
            下载配置信息
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdateInfo.DownloadUrl">
            <summary>
            下载地址
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdateInfo.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdateInfo.StartPath">
            <summary>
            启动程序
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdateInfo.AppName">
            <summary>
            应用名称
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdateInfo.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:ECI.Speed.Web.WebLib.VersionUpdate.VersionUpdateInfo.Message">
            <summary>
            信息
            </summary>
        </member>
        <member name="T:ECI.Speed.Web.AppStartUI">
            <summary>
            
            </summary>
        </member>
        <member name="M:ECI.Speed.Web.AppStartUI.PageLoad">
            <summary>
            
            </summary>
        </member>
        <member name="T:ECI.Controls.EGridTextBoxTemplate">
            <summary>
            EGridTextBoxTemplate
            </summary>
        </member>
        <member name="M:ECI.Controls.EGridTextBoxTemplate.#ctor(System.Web.UI.WebControls.DataControlRowType,PL.Server.Core.Entity.ECI_TABLE_ELEMENT,PL.UI.Controls.EGridView)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ECI.Controls.EGridTextBoxTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:ECI.Controls.EGridTextBoxTemplate.CreateINPUT">
            <summary>
            创建文本框
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.Controls.EGridTextBoxTemplate.CreateINPUT_INT">
            <summary>
            创建只能输入整数的文本框
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.Controls.EGridTextBoxTemplate.CreateINPUT_NUMBER">
            <summary>
            创建只能输入数值的文本框
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.Controls.EGridTextBoxTemplate.CreateCHOOSE">
            <summary>
            创建放大镜
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.Controls.EGridTextBoxTemplate.CreateDate">
            <summary>
            创建日期输入框
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
